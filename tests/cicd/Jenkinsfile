pipeline {
    agent {
        label 'sr602'
    }
    stages {
        stage('Prepare') {
            steps {
                script {
                    def labels = ['sr602']
                    def builders = [: ]
                    for (x in labels) {
                        def label = x
                        builders[label] = {
                            node(label) {
                                cleanWs()
                                checkout scm
                                sh 'cd Dockerfile-ubuntu && docker build -t e2eaiok-tensorflow . -f DockerfileTensorflow && docker build -t e2eaiok-pytorch . -f DockerfilePytorch && docker build -t e2eaiok-pytorch112 . -f DockerfilePytorch112 && cd .. && yes | docker container prune && yes | docker image prune'
                            }
                        }
                    }
                    parallel builders
                }
            }
        }
        stage('Run pipeline_test') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'docker run --rm --name test-workload-pipeline --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_pipeline_test.sh"'
                sh 'docker run --rm --name test-workload-horovod --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/docker_horovod_test.sh"'
                sh 'docker run --rm --name test-workload-torchccl --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-pytorch112 /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/docker_torchccl_test.sh"'
            }
        }
        stage('Run resnet') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/resnet  && bash patch_resnet.sh && cd ../..'
                sh 'docker run --rm --name test-workload-resnet --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_resnet_test.sh"'
            }
        }
        stage('Run bert') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/bert && bash patch_bert.sh && cd ../..'
                sh 'docker run --rm --name test-workload-bert --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_bert_test.sh"'
            }
        }
        stage('Run dlrm') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/dlrm && bash patch_dlrm.sh && cd ../..'
                sh 'docker run --rm --name test-workload-dlrm --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-pytorch /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_dlrm_test.sh"'
            }
        }
        stage('Run minigo') {
            agent {
                label 'sr612'
            }
            steps {
                sh 'cd modelzoo/minigo && bash patch_minigo.sh && cd ../..'
                sh 'SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT bash tests/cicd/jenkins_minigo_test.sh'
            }
        }
        stage('Run rnnt') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/rnnt/pytorch && bash patch_rnnt.sh && cd ../../..'
                sh 'docker run --rm --name test-workload-rnnt --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-pytorch112 /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_rnnt_test.sh"'
            }
        }
        stage('Run wnd') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/WnD/TensorFlow2 && bash patch_wnd.sh && cd ../../..'
                sh 'docker run --rm --name test-workload-wnd --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_wnd_test.sh"'
            }
        }
        stage('Run dien') {
            agent {
                label 'sr602'
            }
            steps {
                sh 'cd modelzoo/dien/train && bash patch_dien.sh && cd ../../..'
                sh 'docker run --rm --name test-workload-dien --privileged --network host --device=/dev/dri -v /root/cicd_logs:/home/vmagent/app/cicd_logs -v /mnt/DP_disk1/dataset:/home/vmagent/app/dataset -v `pwd`:/home/vmagent/app/e2eaiok -w /home/vmagent/app/ e2eaiok-tensorflow /bin/bash -c "SIGOPT_API_TOKEN=$SIGOPT_API_TOKEN USE_SIGOPT=$USE_SIGOPT . /home/vmagent/app/e2eaiok/tests/cicd/jenkins_dien_test.sh"'
            }
        }
    }
    post {
        always {
            echo 'One way or another, I have finished'
            deleteDir()
            sh 'if [[ $(docker ps -q --filter "name=test-workload-*" | wc -l) -ne 0 ]]; then docker ps -q --filter "name=test-workload-*" | grep -q . && docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q); fi'
        }
        success {
            echo 'I succeeded!'
        }
        unstable {
            echo 'I am unstable :/'
        }
        failure {
            echo 'I failed :('
        }
        changed {
            echo 'Things were different before...'
        }
    }
}