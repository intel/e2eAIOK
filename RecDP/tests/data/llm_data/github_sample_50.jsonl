{"text": "var videoState={\n\n    \n    create: function(){\n    var video;\n    var sprite;\n    \n      video = game.add.video('storyvideo');\n       video.play(false);\n       sprite = video.addToWorld(game.world.centerX, game.world.centerY, 0.5, 0.5, 2, 2);\n//pause\n        var picLabel= game.add.image(game.width/2, game.height-30, 'skip');\n        picLabel.anchor.setTo(-1,1);\n         picLabel.inputEnabled = true;\n         picLabel.events.onInputDown.add(this.start, this);\n\n//skip video\n// var picLabel= game.add.image(game.width/2, game.height-30, 'skip');\n//         picLabel.anchor.setTo(-2,1);\n//          picLabel.inputEnabled = true;\n//          picLabel.events.onInputDown.add(this.startgame, this);\n\n\n\n\n\n\n       // game.time.events.add(Phaser.Timer.SECOND * 10, this.fadeState, this);\n\n       // game.stage.backgroundColor= '#ffffff';\n\n        game.physics.startSystem(Phaser.Physics. ARCADE);\n        game.renderer.renderSession.roundPixels=true;\n        \n    },\n         \n         // fadeState: function(){\n         //   game.state.start('play');\n\n         // },\n    start: function(){\n game.paused = (game.paused) ? false : true;\n         game.state.start('play');\n            \n        },\n        //  startgame: function(){\n        //     game.state.start('play');\n            \n        // },\n\n};", "meta": {"content_hash": "1c932c7359417cc3e05f3380eabb7fac", "timestamp": "", "source": "github", "line_count": 51, "max_line_length": 89, "avg_line_length": 25.41176470588235, "alnum_prop": 0.5601851851851852, "repo_name": "nickchulani99/ITE-445", "id": "d9d5cb9bb5e54f95b73df6a87d4bcecebdc40318", "size": "1296", "binary": false, "copies": "1", "ref": "refs/heads/gh-pages", "path": "final/alien copy 4/js/video.js", "mode": "33188", "license": "mit", "language": [{"name": "HTML", "bytes": "16832"}, {"name": "JavaScript", "bytes": "451272"}]}}
{"text": "package mts\n\n//Licensed under the Apache License, Version 2.0 (the \"License\");\n//you may not use this file except in compliance with the License.\n//You may obtain a copy of the License at\n//\n//http://www.apache.org/licenses/LICENSE-2.0\n//\n//Unless required by applicable law or agreed to in writing, software\n//distributed under the License is distributed on an \"AS IS\" BASIS,\n//WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n//See the License for the specific language governing permissions and\n//limitations under the License.\n//\n// Code generated by Alibaba Cloud SDK Code Generator.\n// Changes may cause incorrect behavior and will be lost if the code is regenerated.\n\nimport (\n\t\"github.com/aliyun/alibaba-cloud-sdk-go/sdk/requests\"\n\t\"github.com/aliyun/alibaba-cloud-sdk-go/sdk/responses\"\n)\n\n// SearchMedia invokes the mts.SearchMedia API synchronously\nfunc (client *Client) SearchMedia(request *SearchMediaRequest) (response *SearchMediaResponse, err error) {\n\tresponse = CreateSearchMediaResponse()\n\terr = client.DoAction(request, response)\n\treturn\n}\n\n// SearchMediaWithChan invokes the mts.SearchMedia API asynchronously\nfunc (client *Client) SearchMediaWithChan(request *SearchMediaRequest) (<-chan *SearchMediaResponse, <-chan error) {\n\tresponseChan := make(chan *SearchMediaResponse, 1)\n\terrChan := make(chan error, 1)\n\terr := client.AddAsyncTask(func() {\n\t\tdefer close(responseChan)\n\t\tdefer close(errChan)\n\t\tresponse, err := client.SearchMedia(request)\n\t\tif err != nil {\n\t\t\terrChan <- err\n\t\t} else {\n\t\t\tresponseChan <- response\n\t\t}\n\t})\n\tif err != nil {\n\t\terrChan <- err\n\t\tclose(responseChan)\n\t\tclose(errChan)\n\t}\n\treturn responseChan, errChan\n}\n\n// SearchMediaWithCallback invokes the mts.SearchMedia API asynchronously\nfunc (client *Client) SearchMediaWithCallback(request *SearchMediaRequest, callback func(response *SearchMediaResponse, err error)) <-chan int {\n\tresult := make(chan int, 1)\n\terr := client.AddAsyncTask(func() {\n\t\tvar response *SearchMediaResponse\n\t\tvar err error\n\t\tdefer close(result)\n\t\tresponse, err = client.SearchMedia(request)\n\t\tcallback(response, err)\n\t\tresult <- 1\n\t})\n\tif err != nil {\n\t\tdefer close(result)\n\t\tcallback(nil, err)\n\t\tresult <- 0\n\t}\n\treturn result\n}\n\n// SearchMediaRequest is the request struct for api SearchMedia\ntype SearchMediaRequest struct {\n\t*requests.RpcRequest\n\tResourceOwnerId      requests.Integer `position:\"Query\" name:\"ResourceOwnerId\"`\n\tDescription          string           `position:\"Query\" name:\"Description\"`\n\tTitle                string           `position:\"Query\" name:\"Title\"`\n\tPageNumber           requests.Integer `position:\"Query\" name:\"PageNumber\"`\n\tCateId               string           `position:\"Query\" name:\"CateId\"`\n\tPageSize             requests.Integer `position:\"Query\" name:\"PageSize\"`\n\tFrom                 string           `position:\"Query\" name:\"From\"`\n\tTag                  string           `position:\"Query\" name:\"Tag\"`\n\tKeyWord              string           `position:\"Query\" name:\"KeyWord\"`\n\tResourceOwnerAccount string           `position:\"Query\" name:\"ResourceOwnerAccount\"`\n\tOwnerAccount         string           `position:\"Query\" name:\"OwnerAccount\"`\n\tOwnerId              requests.Integer `position:\"Query\" name:\"OwnerId\"`\n\tSortBy               string           `position:\"Query\" name:\"SortBy\"`\n\tTo                   string           `position:\"Query\" name:\"To\"`\n}\n\n// SearchMediaResponse is the response struct for api SearchMedia\ntype SearchMediaResponse struct {\n\t*responses.BaseResponse\n\tTotalNum   int64                  `json:\"TotalNum\" xml:\"TotalNum\"`\n\tPageSize   int64                  `json:\"PageSize\" xml:\"PageSize\"`\n\tRequestId  string                 `json:\"RequestId\" xml:\"RequestId\"`\n\tPageNumber int64                  `json:\"PageNumber\" xml:\"PageNumber\"`\n\tMediaList  MediaListInSearchMedia `json:\"MediaList\" xml:\"MediaList\"`\n}\n\n// CreateSearchMediaRequest creates a request to invoke SearchMedia API\nfunc CreateSearchMediaRequest() (request *SearchMediaRequest) {\n\trequest = &SearchMediaRequest{\n\t\tRpcRequest: &requests.RpcRequest{},\n\t}\n\trequest.InitWithApiInfo(\"Mts\", \"2014-06-18\", \"SearchMedia\", \"mts\", \"openAPI\")\n\trequest.Method = requests.POST\n\treturn\n}\n\n// CreateSearchMediaResponse creates a response to parse from SearchMedia response\nfunc CreateSearchMediaResponse() (response *SearchMediaResponse) {\n\tresponse = &SearchMediaResponse{\n\t\tBaseResponse: &responses.BaseResponse{},\n\t}\n\treturn\n}\n", "meta": {"content_hash": "4765aae0af2406ea691fb001ea5a83df", "timestamp": "", "source": "github", "line_count": 116, "max_line_length": 144, "avg_line_length": 38.23275862068966, "alnum_prop": 0.7019165727170237, "repo_name": "aliyun/alibaba-cloud-sdk-go", "id": "e23386a31fa5de227e10f19984b8f3e7eb736f22", "size": "4435", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "services/mts/search_media.go", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Go", "bytes": "734307"}, {"name": "Makefile", "bytes": "183"}]}}
{"text": "<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <title>Invitation to calendar</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n</head>\n<body>\n<h2>You was invited to calendar.</h2>\n\n<p>You can login and set password procceed by link:</p>\n\n<a href=\"<?php echo $link?>\"><?php echo $link?></a>\n</body>\n</html>", "meta": {"content_hash": "324efbc1ad28fdfe902cd1e51f7e095e", "timestamp": "", "source": "github", "line_count": 15, "max_line_length": 76, "avg_line_length": 23.733333333333334, "alnum_prop": 0.6432584269662921, "repo_name": "vchukhalyonock/calendar", "id": "5ca5e852381e8a65c1d2612696445e148aa8677b", "size": "356", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "application/views/email/invite.php", "mode": "33188", "license": "mit", "language": [{"name": "ApacheConf", "bytes": "366"}, {"name": "CSS", "bytes": "39144"}, {"name": "HTML", "bytes": "5502"}, {"name": "JavaScript", "bytes": "460150"}, {"name": "PHP", "bytes": "1807984"}]}}
{"text": "import os\nfrom flask import Flask,render_template,url_for,request,session,redirect\nfrom flask_login import LoginManager\nfrom flask_bootstrap import Bootstrap\nfrom flask_script import Manager,Shell\nfrom flask_sqlalchemy import SQLAlchemy\nfrom flask_mail import Mail\nfrom flask_moment import Moment\nfrom flask_socketio import SocketIO\nfrom flask_gravatar import Gravatar\n\napp = Flask(__name__)\nbasedir = os.path.abspath(os.path.dirname(__file__))\napp.config['SQLALCHEMY_DATABASE_URI'] =\\\n     'sqlite:///' + os.path.join(basedir, 'data.sqlite')\n#app.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://sql6140009:Y1912zwYwC@sql6.freemysqlhosting.net/sql6140009'\napp.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False\napp.config['SECRET_KEY'] = 'hard to guess string'\n\napp.config['MAIL_SERVER'] = 'smtp.googlemail.com'\napp.config['MAIL_PORT'] = 587\napp.config['MAIL_USE_TLS'] = True\napp.config['MAIL_USERNAME'] = os.environ.get('MAIL_USERNAME')\napp.config['MAIL_PASSWORD'] = os.environ.get('MAIL_PASSWORD')\n\nmanager = Manager(app)\nbootstrap = Bootstrap()\ndb = SQLAlchemy(app)\nmail = Mail(app)\nmoment = Moment(app)\nsocketio = SocketIO(app)\ngravatar = Gravatar(app)\n\nlogin_manager = LoginManager()\nlogin_manager.session_protection = 'strong'\nlogin_manager.login_view = 'auth.login'\n# app.config['SECRET_KEY'] = 'hard to guess string'\n# app.config['SQLALCHEMY_COMMIT_ON_TEARDOWN'] = True\n#app = create_app('DEVELOPMENT')\n\nbootstrap.init_app(app)\n#db.init_app(app)\nlogin_manager.init_app(app)\n\nfrom app import models\n\n@app.route('/')\ndef index():\n    return render_template('index.html')\n\nfrom app.auth.views import admin\napp.register_blueprint(auth.views.admin,url_prefix = '/authentication')\n\nfrom app.main.views import welcome\napp.register_blueprint(main.views.welcome,url_prefix = '/welcome')\n\nfrom app.twitterAPI.views import api\napp.register_blueprint(twitterAPI.views.api,url_prefix = '/api')\n", "meta": {"content_hash": "a9735eefc6ff4807441825a5f2811599", "timestamp": "", "source": "github", "line_count": 58, "max_line_length": 117, "avg_line_length": 32.62068965517241, "alnum_prop": 0.7563424947145877, "repo_name": "sumedh123/debatify", "id": "89d78b1a48e585a5353b33fa5344659ba9f8770a", "size": "1892", "binary": false, "copies": "1", "ref": "refs/heads/UI", "path": "app/__init__.py", "mode": "33188", "license": "mit", "language": [{"name": "C", "bytes": "5939"}, {"name": "CSS", "bytes": "347155"}, {"name": "HTML", "bytes": "102503"}, {"name": "JavaScript", "bytes": "608373"}, {"name": "Python", "bytes": "8393673"}, {"name": "Shell", "bytes": "3298"}]}}
{"text": "/*\n *  String hash computation (interning).\n */\n\n#include \"duk_internal.h\"\n\n/* constants for duk_hashstring() */\n#define STRING_HASH_SHORTSTRING   4096\n#define STRING_HASH_MEDIUMSTRING  (256 * 1024)\n#define STRING_HASH_BLOCKSIZE     256\n\nduk_uint32_t duk_heap_hashstring(duk_heap *heap, duk_uint8_t *str, duk_size_t len) {\n\t/*\n\t *  Sampling long strings by byte skipping (like Lua does) is potentially\n\t *  a cache problem.  Here we do 'block skipping' instead for long strings:\n\t *  hash an initial part, and then sample the rest of the string with\n\t *  reasonably sized chunks.\n\t *\n\t *  Skip should depend on length and bound the total time to roughly\n\t *  logarithmic.\n\t *\n\t *  With current values:\n\t *\n\t *    1M string => 256 * 241 = 61696 bytes (0.06M) of hashing\n\t *    1G string => 256 * 16321 = 4178176 bytes (3.98M) of hashing\n\t *\n\t *  After an initial part has been hashed, an offset is applied before\n\t *  starting the sampling.  The initial offset is computed from the\n\t *  hash of the initial part of the string.  The idea is to avoid the\n\t *  case that all long strings have certain offset ranges that are never\n\t *  sampled.\n\t */\n\t\n\t/* note: mixing len into seed improves hashing when skipping */\n\tduk_uint32_t str_seed = heap->hash_seed ^ len;\n\n\tif (len <= STRING_HASH_SHORTSTRING) {\n\t\treturn duk_util_hashbytes(str, len, str_seed);\n\t} else {\n\t\tduk_uint32_t hash;\n\t\tduk_size_t off;\n\t\tduk_size_t skip;\n\n\t\tif (len <= STRING_HASH_MEDIUMSTRING) {\n\t\t\tskip = (duk_size_t) (16 * STRING_HASH_BLOCKSIZE + STRING_HASH_BLOCKSIZE);\n\t\t} else {\n\t\t\tskip = (duk_size_t) (256 * STRING_HASH_BLOCKSIZE + STRING_HASH_BLOCKSIZE);\n\t\t}\n\n\t\thash = duk_util_hashbytes(str, (duk_size_t) STRING_HASH_SHORTSTRING, str_seed);\n\t\toff = STRING_HASH_SHORTSTRING + (skip * (hash % 256)) / 256;\n\n\t\t/* FIXME: inefficient loop */\n\t\twhile (off < len) {\n\t\t\tduk_size_t left = len - off;\n\t\t\tduk_size_t now = (duk_size_t) (left > STRING_HASH_BLOCKSIZE ? STRING_HASH_BLOCKSIZE : left);\n\t\t\thash ^= duk_util_hashbytes(str + off, now, str_seed);\n\t\t\toff += skip;\n\t\t}\n\n\t\treturn hash;\n\t}\n}\n\n", "meta": {"content_hash": "bab3317c67f40063ff7a69f3bcc74bb0", "timestamp": "", "source": "github", "line_count": 64, "max_line_length": 95, "avg_line_length": 32.140625, "alnum_prop": 0.6684491978609626, "repo_name": "JoshEngebretson/duktape", "id": "29411796cbb56b7d91920771a24db254493ccfc8", "size": "2057", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "src/duk_heap_hashstring.c", "mode": "33188", "license": "mit", "language": [{"name": "C", "bytes": "1972812"}, {"name": "C++", "bytes": "20922"}, {"name": "CoffeeScript", "bytes": "895"}, {"name": "JavaScript", "bytes": "15926045"}, {"name": "Objective-C", "bytes": "6054"}, {"name": "Python", "bytes": "136104"}, {"name": "Shell", "bytes": "12610"}]}}
{"text": "--TEST--\nRunkit_Sandbox_Parent Class -- Echo\n--SKIPIF--\n<?php if(!extension_loaded(\"runkit\") || !RUNKIT_FEATURE_SANDBOX) print \"skip\"; \n      /* May not be available due to lack of TSRM interpreter support */\n      if(!function_exists(\"runkit_sandbox_output_handler\")) print \"skip\"; ?>\n--FILE--\n<?php\n$php = new Runkit_Sandbox();\n$php['output_handler'] = 'test_handler';\n$php['parent_access'] = true;\n$php->ini_set('display_errors', true);\n$php->ini_set('html_errors', false);\n$php->eval('$PARENT = new Runkit_Sandbox_Parent;\n\t\t\techo \"Foo\\n\";\n\t\t\t$PARENT->echo(\"BarBar\\n\");');\n\nfunction test_handler($str) {\n  if (strlen($str) == 0) return NULL; /* flush() */\n  /* Echoing and returning have the same effect here, both go to parent's output chain */\n  echo 'Received string from sandbox: ' . strlen($str) . \" bytes long.\\n\";\n\n  return strtoupper($str);\n}\n--EXPECT--\nReceived string from sandbox: 4 bytes long.\nFOO\nReceived string from sandbox: 149 bytes long.\n\nWARNING: RUNKIT_SANDBOX_PARENT::ECHO(): ACCESS TO ECHO DATA IN THE PARENT CONTEXT IS NOT ENABLED IN UNKNOWN(0) : RUNKIT_SANDBOX EVAL CODE ON LINE 3\n", "meta": {"content_hash": "009fcdd5cf234bb851939760b7bb2bec", "timestamp": "", "source": "github", "line_count": 30, "max_line_length": 147, "avg_line_length": 36.93333333333333, "alnum_prop": 0.6796028880866426, "repo_name": "lzpfmh/runkit", "id": "44237969acec682b89517ba99d074aa575d5c09a", "size": "1108", "binary": false, "copies": "4", "ref": "refs/heads/master", "path": "tests/Runkit_Sandbox_Parent__.echo.access.phpt", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "C", "bytes": "263129"}, {"name": "C++", "bytes": "372"}, {"name": "PHP", "bytes": "141611"}, {"name": "SourcePawn", "bytes": "193"}]}}
{"text": "\npackage org.codehaus.groovy.grails.scaffolding;\n\nimport grails.build.logging.GrailsConsole;\nimport groovy.text.SimpleTemplateEngine;\nimport groovy.text.Template;\n\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.Writer;\nimport java.util.Collections;\nimport java.util.HashMap;\nimport java.util.HashSet;\nimport java.util.Map;\nimport java.util.Set;\n\nimport org.apache.commons.logging.Log;\nimport org.apache.commons.logging.LogFactory;\nimport org.codehaus.groovy.grails.commons.GrailsApplication;\nimport org.codehaus.groovy.grails.commons.GrailsDomainClass;\nimport org.codehaus.groovy.grails.commons.GrailsDomainClassProperty;\nimport org.codehaus.groovy.grails.plugins.GrailsPluginInfo;\nimport org.codehaus.groovy.grails.plugins.GrailsPluginManager;\nimport org.codehaus.groovy.grails.plugins.GrailsPluginUtils;\nimport org.codehaus.groovy.grails.plugins.PluginManagerAware;\nimport org.codehaus.groovy.runtime.IOGroovyMethods;\nimport org.codehaus.groovy.runtime.StringGroovyMethods;\nimport org.springframework.context.ResourceLoaderAware;\nimport org.springframework.core.io.AbstractResource;\nimport org.springframework.core.io.FileSystemResource;\nimport org.springframework.core.io.Resource;\nimport org.springframework.core.io.ResourceLoader;\nimport org.springframework.core.io.support.PathMatchingResourcePatternResolver;\nimport org.springframework.util.Assert;\nimport org.springframework.util.StringUtils;\n\npublic abstract class AbstractGrailsTemplateGenerator implements GrailsTemplateGenerator, ResourceLoaderAware, PluginManagerAware {\n\n\tprotected static final Log log = LogFactory.getLog(AbstractGrailsTemplateGenerator.class);\n\n\tprotected String basedir = \".\";\n\tprotected boolean overwrite = false;\n\tprotected SimpleTemplateEngine engine = new SimpleTemplateEngine();\n\tprotected ResourceLoader resourceLoader;\n\tprotected Template renderEditorTemplate;\n\tprotected String domainSuffix = \"\";\n\tprotected GrailsPluginManager pluginManager;\n\tprotected GrailsApplication grailsApplication;\n\n\tprotected AbstractGrailsTemplateGenerator(ClassLoader classLoader) {\n\t\tengine = new SimpleTemplateEngine(classLoader);\n\t}\n\n\tpublic void generateViews(GrailsDomainClass domainClass, String destDir) throws IOException {\n\t\tAssert.hasText(destDir, \"Argument [destdir] not specified\");\n\n\t\tFile viewsDir = new File(destDir, \"grails-app/views/\" + domainClass.getPropertyName());\n\t\tif (!viewsDir.exists()) {\n\t\t\tviewsDir.mkdirs();\n\t\t}\n\n\t\tfor (String name : getTemplateNames()) {\n            if(log.isInfoEnabled())\n\t\t\t    log.info(\"Generating [\"+name+\"] view for domain class [\"+domainClass.getFullName()+\"]\");\n\t\t\tgenerateView(domainClass, name, viewsDir.getAbsolutePath());\n\t\t}\n\t}\n\n\tpublic void generateController(GrailsDomainClass domainClass, String destDir) throws IOException {\n\t\tAssert.hasText(destDir, \"Argument [destdir] not specified\");\n\n\t\tif (domainClass == null) {\n\t\t\treturn;\n\t\t}\n\n\t\tString fullName = domainClass.getFullName();\n\t\tString pkg = \"\";\n\t\tint pos = fullName.lastIndexOf('.');\n\t\tif (pos != -1) {\n\t\t\t// Package name with trailing '.'\n\t\t\tpkg = fullName.substring(0, pos + 1);\n\t\t}\n\n\t\tFile destFile = new File(destDir, \"grails-app/controllers/\" + pkg.replace('.', '/') + domainClass.getShortName() + \"Controller.groovy\");\n\t\tif (canWrite(destFile)) {\n\t\t\tdestFile.getParentFile().mkdirs();\n\n\t\t\tBufferedWriter writer = null;\n\t\t\ttry {\n\t\t\t\twriter = new BufferedWriter(new FileWriter(destFile));\n\t\t\t\tgenerateController(domainClass, writer);\n\t\t\t\ttry {\n\t\t\t\t\twriter.flush();\n\t\t\t\t}\n\t\t\t\tcatch (IOException ignored) {}\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tIOGroovyMethods.closeQuietly(writer);\n\t\t\t}\n\n\t\t\tlog.info(\"Controller generated at [\"+destFile+\"]\");\n\t\t}\n\t}\n\n    @Override\n    public void generateAsyncController(GrailsDomainClass domainClass, String destDir) throws IOException {\n        Assert.hasText(destDir, \"Argument [destdir] not specified\");\n\n        if (domainClass == null) {\n            return;\n        }\n\n        String fullName = domainClass.getFullName();\n        String pkg = \"\";\n        int pos = fullName.lastIndexOf('.');\n        if (pos != -1) {\n            // Package name with trailing '.'\n            pkg = fullName.substring(0, pos + 1);\n        }\n\n        File destFile = new File(destDir, \"grails-app/controllers/\" + pkg.replace('.', '/') + domainClass.getShortName() + \"Controller.groovy\");\n        if (canWrite(destFile)) {\n            destFile.getParentFile().mkdirs();\n\n            BufferedWriter writer = null;\n            try {\n                writer = new BufferedWriter(new FileWriter(destFile));\n                generateAsyncController(domainClass, writer);\n                try {\n                    writer.flush();\n                }\n                catch (IOException ignored) {}\n            }\n            finally {\n                IOGroovyMethods.closeQuietly(writer);\n            }\n\n            log.info(\"Controller generated at [\"+destFile+\"]\");\n        }\n    }\n\n    public void generateView(GrailsDomainClass domainClass, String viewName, Writer out) throws IOException {\n\t\tString templateText = getTemplateText(viewName + \".gsp\");\n\n\t\tif (!StringUtils.hasLength(templateText)) {\n\t\t\treturn;\n\t\t}\n\n\t\tGrailsDomainClassProperty multiPart = null;\n\t\tfor (GrailsDomainClassProperty property : domainClass.getProperties()) {\n\t\t\tif (property.getType() == Byte[].class || property.getType() == byte[].class) {\n\t\t\t\tmultiPart = property;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tString packageName = StringUtils.hasLength(domainClass.getPackageName()) ? \"<%@ page import=\\\"\" + domainClass.getFullName() + \"\\\" %>\" : \"\";\n\t\tMap<String, Object> binding = createBinding(domainClass);\n\t\tbinding.put(\"packageName\", packageName);\n\t\tbinding.put(\"multiPart\", multiPart);\n\t\tbinding.put(\"propertyName\", getPropertyName(domainClass));\n\n\t\tgenerate(templateText, binding, out);\n\t}\n\n\tprotected abstract Object getRenderEditor();\n\n\tpublic void generateView(GrailsDomainClass domainClass, String viewName, String destDir) throws IOException {\n\t\tFile destFile = new File(destDir, viewName + \".gsp\");\n\t\tif (!canWrite(destFile)) {\n\t\t\treturn;\n\t\t}\n\n\t\tBufferedWriter writer = null;\n\t\ttry {\n\t\t\twriter = new BufferedWriter(new FileWriter(destFile));\n\t\t\tgenerateView(domainClass, viewName, writer);\n\t\t\ttry {\n\t\t\t\twriter.flush();\n\t\t\t}\n\t\t\tcatch (IOException ignored) {}\n\t\t}\n\t\tfinally {\n\t\t\tIOGroovyMethods.closeQuietly(writer);\n\t\t}\n\t}\n\n\tpublic void generateController(GrailsDomainClass domainClass, Writer out) throws IOException {\n\t\tString templateText = getTemplateText(\"Controller.groovy\");\n\n\t\tMap<String, Object> binding = createBinding(domainClass);\n\t\tbinding.put(\"packageName\", domainClass.getPackageName());\n\t\tbinding.put(\"propertyName\", getPropertyName(domainClass));\n\n\t\tgenerate(templateText, binding, out);\n\t}\n\n    public void generateAsyncController(GrailsDomainClass domainClass, Writer out) throws IOException {\n        String templateText = getTemplateText(\"AsyncController.groovy\");\n\n        Map<String, Object> binding = createBinding(domainClass);\n        binding.put(\"packageName\", domainClass.getPackageName());\n        binding.put(\"propertyName\", getPropertyName(domainClass));\n\n        generate(templateText, binding, out);\n    }\n\n    @Override\n    public void generateAsyncTest(GrailsDomainClass domainClass, String destDir) throws IOException {\n        generateTest(domainClass, destDir, \"AsyncSpec.groovy\");\n    }\n\n\tpublic void generateTest(GrailsDomainClass domainClass, String destDir) throws IOException {\n        generateTest(domainClass, destDir, \"Spec.groovy\");\n\t}\n\n    private void generateTest(GrailsDomainClass domainClass, String destDir, String templateName) throws IOException {\n        File destFile = new File(destDir, domainClass.getPackageName().replace('.', '/') + '/' + domainClass.getShortName() + \"ControllerSpec.groovy\");\n        if (!canWrite(destFile)) {\n            return;\n        }\n\n        String templateText = getTemplateText(templateName);\n\n        Map<String, Object> binding = createBinding(domainClass);\n        binding.put(\"packageName\", domainClass.getPackageName());\n        binding.put(\"propertyName\", domainClass.getLogicalPropertyName());\n        binding.put(\"modelName\", getPropertyName(domainClass));\n\n        destFile.getParentFile().mkdirs();\n        BufferedWriter writer = null;\n        try {\n            writer = new BufferedWriter(new FileWriter(destFile));\n            generate(templateText, binding, writer);\n            try {\n                writer.flush();\n            }\n            catch (IOException ignored) {}\n        }\n        finally {\n            IOGroovyMethods.closeQuietly(writer);\n        }\n    }\n\n\n    @SuppressWarnings(\"deprecation\")\n    protected Map<String, Object> createBinding(GrailsDomainClass domainClass) {\n\t\tboolean hasHibernate = pluginManager.hasGrailsPlugin(\"hibernate\") || pluginManager.hasGrailsPlugin(\"hibernate4\");\n\n\t\tMap<String, Object> binding = new HashMap<String, Object>();\n\t\tbinding.put(\"pluginManager\", pluginManager);\n\t\tbinding.put(\"domainClass\", domainClass);\n\t\tbinding.put(\"className\", domainClass.getShortName());\n\t\tbinding.put(\"renderEditor\", getRenderEditor());\n\t\tbinding.put(\"comparator\", hasHibernate ? DomainClassPropertyComparator.class : SimpleDomainClassPropertyComparator.class);\n\t\treturn binding;\n\t}\n\n\tprotected void generate(String templateText, Map<String, Object> binding, Writer out) {\n\t\ttry {\n\t\t\tengine.createTemplate(templateText).make(binding).writeTo(out);\n\t\t}\n\t\tcatch (ClassNotFoundException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t\tcatch (IOException e) {\n\t\t\tthrow new RuntimeException(e);\n\t\t}\n\t}\n\n\tprotected String getPropertyName(GrailsDomainClass domainClass) {\n\t\treturn domainClass.getPropertyName() + domainSuffix;\n\t}\n\n\tprotected String getTemplateText(String template) throws IOException {\n\t\tInputStream inputStream = null;\n\t\tif (resourceLoader != null && grailsApplication.isWarDeployed()) {\n\t\t\tinputStream = resourceLoader.getResource(\"/WEB-INF/templates/scaffolding/\" + template).getInputStream();\n\t\t}\n\t\telse {\n\t\t\tAbstractResource templateFile = getTemplateResource(template);\n\t\t\tif (templateFile.exists()) {\n\t\t\t\tinputStream = templateFile.getInputStream();\n\t\t\t}\n\t\t}\n\n\t\treturn inputStream == null ? null : IOGroovyMethods.getText(inputStream);\n\t}\n\n\tprotected AbstractResource getTemplateResource(String template) throws IOException {\n\t\tString name = \"src/templates/scaffolding/\" + template;\n\t\tAbstractResource templateFile = new FileSystemResource(new File(basedir, name).getAbsoluteFile());\n\t\tif (!templateFile.exists()) {\n\t\t\ttemplateFile = new FileSystemResource(new File(getPluginDir(), name).getAbsoluteFile());\n\t\t}\n\n\t\treturn templateFile;\n\t}\n\n\tprotected File getPluginDir() throws IOException {\n\t\tGrailsPluginInfo info = GrailsPluginUtils.getPluginBuildSettings().getPluginInfoForName(\"scaffolding\");\n\t\treturn info.getDescriptor().getFile().getParentFile();\n\t}\n\n\tprotected boolean canWrite(File testFile) {\n\t\tif (overwrite || !testFile.exists()) {\n\t\t\treturn true;\n\t\t}\n\n\t\ttry {\n\t\t\tString relative = makeRelativeIfPossible(testFile.getAbsolutePath(), basedir);\n\t\t\tString response = GrailsConsole.getInstance().userInput(\n\t\t\t\t\t\"File \" + relative + \" already exists. Overwrite?\", new String[] { \"y\", \"n\", \"a\" });\n\t\t\toverwrite = overwrite || \"a\".equals(response);\n\t\t\treturn overwrite || \"y\".equals(response);\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t// failure to read from standard in means we're probably running from an automation tool like a build server\n\t\t\treturn true;\n\t\t}\n\t}\n\n\tprotected String makeRelativeIfPossible(String fileName, String base) throws IOException {\n\t\tif (StringUtils.hasLength(base)) {\n\t\t\tfileName = StringGroovyMethods.minus(fileName, new File(base).getCanonicalPath());\n\t\t}\n\t\treturn fileName;\n\t}\n\n\tprotected Set<String> getTemplateNames() throws IOException {\n\n\t\tif (resourceLoader != null && grailsApplication.isWarDeployed()) {\n\t\t\ttry {\n\t\t\t\tPathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver(resourceLoader);\n\t\t\t\treturn extractNames(resolver.getResources(\"/WEB-INF/templates/scaffolding/*.gsp\"));\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\treturn Collections.emptySet();\n\t\t\t}\n\t\t}\n\n\t\tPathMatchingResourcePatternResolver resolver = new PathMatchingResourcePatternResolver();\n\t\tSet<String> resources = new HashSet<String>();\n\n\t\tString templatesDirPath = basedir + \"/src/templates/scaffolding\";\n\t\tResource templatesDir = new FileSystemResource(templatesDirPath);\n\t\tif (templatesDir.exists()) {\n\t\t\ttry {\n\t\t\t\tresources.addAll(extractNames(resolver.getResources(\"file:\" + templatesDirPath + \"/*.gsp\")));\n\t\t\t}\n\t\t\tcatch (Exception e) {\n\t\t\t\tlog.error(\"Error while loading views from \" + basedir, e);\n\t\t\t}\n\t\t}\n\n\t\tFile pluginDir = getPluginDir();\n\t\ttry {\n\t\t\tresources.addAll(extractNames(resolver.getResources(\"file:\" + pluginDir + \"/src/templates/scaffolding/*.gsp\")));\n\t\t}\n\t\tcatch (Exception e) {\n\t\t\t// ignore\n\t\t\tlog.error(\"Error locating templates from \" + pluginDir + \": \" + e.getMessage(), e);\n\t\t}\n\n\t\treturn resources;\n\t}\n\n\tprotected Set<String> extractNames(Resource[] resources) {\n\t\tSet<String> names = new HashSet<String>();\n\t\tfor (Resource resource : resources) {\n\t\t\tString name = resource.getFilename();\n\t\t\tnames.add(name.substring(0, name.length() - 4));\n\t\t}\n\t\treturn names;\n\t}\n\n\tpublic void setGrailsApplication(GrailsApplication ga) {\n\t\tgrailsApplication = ga;\n\t\tObject suffix = ga.getFlatConfig().get(\"grails.scaffolding.templates.domainSuffix\");\n\t\tif (suffix instanceof CharSequence) {\n\t\t\tdomainSuffix = suffix.toString();\n\t\t}\n\t}\n\n\tpublic void setResourceLoader(ResourceLoader rl) {\n        if(log.isInfoEnabled())\n\t\t    log.info(\"Scaffolding template generator set to use resource loader [\"+rl+\"]\");\n\t\tresourceLoader = rl;\n\t}\n\n\tpublic void setPluginManager(GrailsPluginManager gpm) {\n\t\tpluginManager = gpm;\n\t}\n\n\tpublic void setOverwrite(boolean shouldOverwrite) {\n\t\toverwrite = shouldOverwrite;\n\t}\n}\n", "meta": {"content_hash": "8970b7709bd54fcfed5f3a9952916ba2", "timestamp": "", "source": "github", "line_count": 401, "max_line_length": 151, "avg_line_length": 34.53366583541147, "alnum_prop": 0.7154823801270942, "repo_name": "eptresmo/dbMigrationTest", "id": "e723c197e0218138ec76d778e67165fef6866c91", "size": "14445", "binary": false, "copies": "5", "ref": "refs/heads/master", "path": "dbMigrationTest/target/work/plugins/scaffolding-2.0.1/src/java/org/codehaus/groovy/grails/scaffolding/AbstractGrailsTemplateGenerator.java", "mode": "33188", "license": "apache-2.0", "language": []}}
{"text": "// --------------------------------------------------------------------------------------------\r\n// <copyright file=\"EffortProviderFactory.cs\" company=\"Effort Team\">\r\n//     Copyright (C) 2011-2014 Effort Team\r\n//\r\n//     Permission is hereby granted, free of charge, to any person obtaining a copy\r\n//     of this software and associated documentation files (the \"Software\"), to deal\r\n//     in the Software without restriction, including without limitation the rights\r\n//     to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\n//     copies of the Software, and to permit persons to whom the Software is\r\n//     furnished to do so, subject to the following conditions:\r\n//\r\n//     The above copyright notice and this permission notice shall be included in\r\n//     all copies or substantial portions of the Software.\r\n//\r\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\n//     IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\n//     AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\n//     OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\n//     THE SOFTWARE.\r\n// </copyright>\r\n// --------------------------------------------------------------------------------------------\r\n\r\nnamespace Effort.Provider\r\n{\r\n    using System;\r\n    using System.Data;\r\n    using System.Data.Common;\r\n#if !EFOLD\r\n    using System.Data.Entity.Core.Common;\r\n#endif\r\n\r\n    /// <summary>\r\n    ///     Represents a set of methods for creating instances of the \r\n    /// <see cref=\"N:Effort.Provider\"/> provider's implementation of the data source classes.\r\n    /// </summary>\r\n    public class EffortProviderFactory : DbProviderFactory, IServiceProvider\r\n    {\r\n        /// <summary>\r\n        ///     Provides a singleton instance of the <see cref=\"EffortProviderFactory\"/> class.\r\n        /// </summary>\r\n        public static readonly EffortProviderFactory Instance = new EffortProviderFactory();\r\n\r\n        /// <summary>\r\n        ///     Prevents a default instance of the <see cref=\"EffortProviderFactory\" /> class\r\n        ///     from being created.\r\n        /// </summary>\r\n        private EffortProviderFactory()\r\n        {\r\n        }\r\n\r\n        /// <summary>\r\n        ///     Returns a new instance of the <see cref=\"T:EffortConnection\" /> class.\r\n        /// </summary>\r\n        /// <returns>\r\n        ///     A new instance of <see cref=\"T:EffortConnection\" />.\r\n        /// </returns>\r\n        public override DbConnection CreateConnection()\r\n        {\r\n            return new EffortConnection();\r\n        }\r\n\r\n        /// <summary>\r\n        ///     Gets the service object of the specified type.\r\n        /// </summary>\r\n        /// <param name=\"serviceType\">\r\n        ///     An object that specifies the type of service object to get.\r\n        /// </param>\r\n        /// <returns>\r\n        ///     A service object of type <paramref name=\"serviceType\" />.-or- null if there is\r\n        ///     no service object of type <paramref name=\"serviceType\" />.\r\n        /// </returns>\r\n        public object GetService(Type serviceType)\r\n        {\r\n            if (serviceType == typeof(DbProviderServices))\r\n            {\r\n                return EffortProviderServices.Instance;\r\n            }\r\n\r\n            return null;\r\n        }\r\n    }\r\n}\r\n", "meta": {"content_hash": "767841cdd80110458b083c02f09c4e70", "timestamp": "", "source": "github", "line_count": 84, "max_line_length": 96, "avg_line_length": 42.023809523809526, "alnum_prop": 0.5781869688385269, "repo_name": "wertzui/effort", "id": "62bcbbc5cb1dad86155bd8a97196855269b6d236", "size": "3532", "binary": false, "copies": "3", "ref": "refs/heads/develop", "path": "Main/Source/Effort/Provider/EffortProviderFactory.cs", "mode": "33188", "license": "mit", "language": [{"name": "Batchfile", "bytes": "1104"}, {"name": "C#", "bytes": "2446943"}]}}
{"text": "import { VGrid } from '../v-grid';\nimport { BindingContextInterface, OverrideContextInterface } from '../../interfaces';\nexport declare class VGridAttributesImageFix {\n    private vGrid;\n    private element;\n    private value;\n    private bindingContext;\n    private overrideContext;\n    constructor(element: HTMLImageElement, vGrid: VGrid);\n    valueChanged(newValue: string): void;\n    bind(bindingContext: BindingContextInterface, overrideContext: OverrideContextInterface): void;\n}\n", "meta": {"content_hash": "288050943bddd389f02d6c1488f7c9da", "timestamp": "", "source": "github", "line_count": 12, "max_line_length": 99, "avg_line_length": 40.5, "alnum_prop": 0.7551440329218106, "repo_name": "vegarringdal/vGrid", "id": "7a892151b3f517aeff4464ab7de2c01ac475f8d0", "size": "486", "binary": false, "copies": "4", "ref": "refs/heads/dev-rebuild", "path": "dist/es2015/grid/attributes/v-image.d.ts", "mode": "33188", "license": "mit", "language": [{"name": "CSS", "bytes": "24447"}, {"name": "HTML", "bytes": "19771"}, {"name": "JavaScript", "bytes": "7057"}, {"name": "TypeScript", "bytes": "1639454"}]}}
{"text": "layout: page\ntitle: Cliffs Tech Executive Retreat\ndate: 2016-05-24\nauthor: Beverly Snyder\ntags: weekly links, java\nstatus: published\nsummary: Vivamus sed ligula quis mi cursus venenatis sed sed nunc.\nbanner: images/banner/people.jpg\nbooking:\n  startDate: 05/29/2018\n  endDate: 05/31/2018\n  ctyhocn: HSTFLHX\n  groupCode: CTER\npublished: true\n---\nMauris id odio eget libero fermentum egestas vel vitae ligula. Suspendisse vestibulum ipsum sem, vel ornare ex lacinia ac. Etiam a sem auctor, dignissim tellus vitae, consequat arcu. Cras rutrum lorem metus, sed lacinia nunc sollicitudin non. Praesent quam mi, aliquet ut lorem at, dictum faucibus ante. Vivamus sit amet ligula vulputate, sollicitudin arcu at, ullamcorper elit. Aenean aliquet molestie tincidunt. Nulla sed lectus diam. Donec gravida enim ut lorem blandit, sed ultricies arcu auctor. Donec odio ante, fringilla id lacus vel, sagittis dignissim elit. Duis mattis turpis tellus, at pulvinar leo commodo at. Etiam in lectus odio. Curabitur ipsum nisi, tincidunt eu ligula ac, cursus pellentesque lacus. Quisque enim sem, tempor non convallis maximus, semper id nisl. Donec eu sapien vel sapien posuere semper. Cras nisi justo, rhoncus ac urna at, cursus scelerisque libero.\n\n1 Proin bibendum tortor at ipsum commodo, vel gravida elit pretium\n1 Phasellus tincidunt lorem vitae elit ultrices, id volutpat mi fermentum\n1 Nunc interdum orci vel lobortis sodales.\n\nPraesent at risus ipsum. Morbi mattis blandit mauris, in fermentum nibh condimentum ut. In mattis risus et diam sagittis euismod. Sed vel dolor id dui dapibus viverra. Praesent efficitur ut quam et auctor. Sed venenatis convallis ex, nec vulputate est tincidunt vitae. In pulvinar faucibus odio, eu viverra tortor pharetra iaculis. Nunc cursus sagittis mauris, at blandit nisi auctor eget. Sed mollis diam eu volutpat pulvinar. In a luctus felis. Integer lobortis purus id lacus porta rutrum. Etiam sit amet lobortis magna. Nulla id libero convallis, luctus lorem ac, fermentum orci. Integer vel maximus sapien, non blandit sapien. Vivamus a tempus purus.\n", "meta": {"content_hash": "43f9f6179677a71fbbce864c5125cf6a", "timestamp": "", "source": "github", "line_count": 22, "max_line_length": 887, "avg_line_length": 94.31818181818181, "alnum_prop": 0.8043373493975904, "repo_name": "KlishGroup/prose-pogs", "id": "6f3c04ea1edb8b269359b353872dd5964911f4eb", "size": "2079", "binary": false, "copies": "1", "ref": "refs/heads/gh-pages", "path": "pogs/H/HSTFLHX/CTER/index.md", "mode": "33188", "license": "mit", "language": []}}
{"text": "namespace igl\n{\n  // Subdivide a mesh without moving vertices: loop subdivision but odd\n  // vertices stay put and even vertices are just edge midpoints\n  // \n  // Templates:\n  //   MatV  matrix for vertex positions, e.g. MatrixXd\n  //   MatF  matrix for vertex positions, e.g. MatrixXi\n  // Inputs:\n  //   V  #V by dim  mesh vertices\n  //   F  #F by 3  mesh triangles\n  // Outputs:\n  //   NV new vertex positions, V is guaranteed to be at top\n  //   NF new list of face indices\n  //\n  // NOTE: V should not be the same as NV,\n  // NOTE: F should not be the same as NF, use other proto\n  //\n  // Known issues:\n  //   - assumes (V,F) is edge-manifold.\n  template <\n    typename DerivedV, \n    typename DerivedF,\n    typename DerivedNV,\n    typename DerivedNF>\n  IGL_INLINE void upsample(\n    const Eigen::PlainObjectBase<DerivedV>& V,\n    const Eigen::PlainObjectBase<DerivedF>& F,\n    Eigen::PlainObjectBase<DerivedNV>& NV,\n    Eigen::PlainObjectBase<DerivedNF>& NF);\n  // Virtually in place wrapper\n  template <\n    typename MatV, \n    typename MatF>\n  IGL_INLINE void upsample(\n    MatV& V,\n    MatF& F);\n}\n\n#ifndef IGL_STATIC_LIBRARY\n#  include \"upsample.cpp\"\n#endif\n\n#endif\n", "meta": {"content_hash": "a1cdb7cff1bb173dd9cbbff48005f1e2", "timestamp": "", "source": "github", "line_count": 44, "max_line_length": 71, "avg_line_length": 26.772727272727273, "alnum_prop": 0.6612903225806451, "repo_name": "FabianRepository/SinusProject", "id": "5ca05336dfac2db8a87a07b48ee4c4d7219d853e", "size": "1710", "binary": false, "copies": "6", "ref": "refs/heads/master", "path": "Code/include/igl/upsample.h", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "C", "bytes": "1822674"}, {"name": "C++", "bytes": "11420706"}, {"name": "CMake", "bytes": "20858"}, {"name": "Makefile", "bytes": "4050"}, {"name": "Objective-C", "bytes": "11880"}, {"name": "Shell", "bytes": "15321"}]}}
{"text": "/*___Generated_by_IDEA___*/\n\npackage com.grafixartist.androidn;\n\n/* This stub is only used by the IDE. It is NOT the BuildConfig class actually packed into the APK */\npublic final class BuildConfig {\n  public final static boolean DEBUG = Boolean.parseBoolean(null);\n}", "meta": {"content_hash": "26542977f302c1033ce570a5d275b19c", "timestamp": "", "source": "github", "line_count": 8, "max_line_length": 101, "avg_line_length": 33.375, "alnum_prop": 0.7490636704119851, "repo_name": "Suleiman19/Android-N-Sample", "id": "3f2817dcd993334f72e2c9570e2c1671e560df79", "size": "267", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "gen/com/grafixartist/androidn/BuildConfig.java", "mode": "33188", "license": "mit", "language": [{"name": "Java", "bytes": "10473"}]}}
{"text": "<?php\n\nnamespace Molajo\\Query\\Builder;\n\nuse CommonApi\\Fieldhandler\\FieldhandlerInterface;\nuse DateTime;\n\n/**\n * Query Builder Sql Class\n *\n * External API - all other class methods are called by this class\n * DB-specific adapters extend this class\n *\n * Sql - BuildSql - BuildSqlElements - BuildSqlGroups - SetData - EditData - FilterData - Base\n *\n * @package  Molajo\n * @license  http://www.opensource.org/licenses/mit-license.html MIT License\n * @since    1.0\n */\nabstract class Sql extends BuildSql\n{\n    /**\n     * Constructor\n     *\n     * @since  1.0.0\n     */\n    public function __construct(\n        FieldhandlerInterface $fieldhandler,\n        $database_prefix\n    ) {\n        $this->fieldhandler    = $fieldhandler;\n        $this->database_prefix = $database_prefix;\n    }\n\n    /**\n     * Get SQL\n     *\n     * At this point, all values have been input, filtered and set in element-specific item arrays\n     * Now, generate the full SQL statement, building the SQL statement and quoting/escaping data\n     *\n     * @param   null|string $sql\n     *\n     * @return  string\n     * @since   1.0.0\n     */\n    public function getSql($sql = null)\n    {\n        if ($sql === null || trim($sql) === '') {\n            $this->generateSql();\n        } else {\n            $this->sql = '';\n            $this->getExternalSql($sql);\n        }\n\n        return $this->sql;\n    }\n\n    /**\n     * Get the current value (or default) of the specified property\n     *\n     * @param   string $key `````\n     * @param   mixed  $default\n     *\n     * @return  mixed\n     * @since   1.0.0\n     */\n    public function get($key, $default = null)\n    {\n        if ($this->$key === null) {\n            $this->$key = $default;\n        }\n\n        return $this->$key;\n    }\n\n    /**\n     * Clear Query String\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function clearQuery()\n    {\n        $this->query_type        = 'select';\n        $this->distinct          = false;\n        $this->columns           = array();\n        $this->update_columns    = array();\n        $this->values            = array();\n        $this->from              = array();\n        $this->insert_into_table = null;\n        $this->where_group       = array();\n        $this->where             = array();\n        $this->group_by          = array();\n        $this->having_group      = array();\n        $this->having            = array();\n        $this->query_object      = 'list';\n        $this->order_by          = array();\n        $this->use_pagination    = 0;\n        $this->offset            = 0;\n        $this->limit             = 0;\n        $this->sql               = '';\n\n        return $this;\n    }\n\n    /**\n     * Set Query Type\n     *\n     * @param   string $query_type\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function setType($query_type = 'select')\n    {\n        if (in_array(strtolower($query_type), $this->query_type_array)) {\n            $this->query_type = strtolower($query_type);\n        } else {\n            $this->query_type = 'select';\n        }\n\n        return $this;\n    }\n\n    /**\n     * Retrieves the current date and time formatted in a manner compliant with the database driver\n     *\n     * @return  string\n     * @since   1.0.0\n     */\n    public function getDate()\n    {\n        $date = new DateTime();\n\n        return $date->format($this->date_format);\n    }\n\n    /**\n     * Returns a value for null date that is compliant with the database driver\n     *\n     * @return  string\n     * @since   1.0.0\n     */\n    public function getNullDate()\n    {\n        return $this->null_date;\n    }\n\n    /**\n     * Retrieves the PHP date format compliant with the database driver\n     *\n     * @return  string\n     * @since   1.0.0\n     */\n    public function getDateFormat()\n    {\n        return $this->date_format;\n    }\n\n    /**\n     * Set Distinct Indicator\n     *\n     * @param   boolean $distinct\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function setDistinct($distinct = false)\n    {\n        if ($distinct === true) {\n            $this->distinct = true;\n        } else {\n            $this->distinct = false;\n        }\n\n        return $this;\n    }\n\n    /**\n     * Used for select, insert, and update to specify column name, alias (optional)\n     *  For Insert and Update, only, value and data_type\n     *\n     * @param   string      $column_name\n     * @param   null|string $alias\n     * @param   null|mixed  $value\n     * @param   null|string $data_type\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function select($column_name, $alias = null, $value = null, $data_type = null)\n    {\n        $this->editRequired('column_name', $column_name);\n\n        if ($data_type === 'special') {\n        } else {\n            if ($value === null) {\n                $data_type = 'column';\n            }\n        }\n\n        $this->columns[$column_name]\n            = $this->setItem($column_name, $data_type, $value, $alias, null, false);\n\n        return $this;\n    }\n\n    /**\n     * Set From table name and optional value for alias\n     *\n     * @param   string      $table_name\n     * @param   null|string $alias\n     * @param   boolean     $primary\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function from($table_name, $alias = null, $primary = false)\n    {\n        $this->editRequired('table_name', $table_name);\n\n        $key = $this->setFromKey($table_name, $alias);\n\n        $this->from[$key] = $this->setItem($table_name, 'string', null, $alias, null, false);\n\n        if ($this->findFromPrimary() === true && $primary === false) {\n            return $this;\n        }\n\n        $this->setFromPrimary($key);\n\n        return $this;\n    }\n\n    /**\n     * Set Insert Into Table Name\n     *\n     * @param   string $table_name\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function setInsertInto($table_name)\n    {\n        $this->editRequired('table_name', $table_name);\n\n        $this->insert_into_table = (string)$table_name;\n\n        return $this;\n    }\n\n    /**\n     * Set From table key\n     *\n     * @param   string      $table_name\n     * @param   null|string $alias\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function setFromKey($table_name, $alias = null)\n    {\n        return ($table_name . ' ' . $alias);\n    }\n\n    /**\n     * Create a grouping for 'and' or 'or' groups of where conditions\n     *\n     * @param   string $group\n     * @param   string $group_connector\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function whereGroup($group, $group_connector = 'AND')\n    {\n        $this->where_group\n            = $this->setGroup($group, $group_connector, 'where', $this->where_group);\n\n        return $this;\n    }\n\n    /**\n     * Create a grouping for 'and' or 'or' groups of having conditions\n     *\n     * @param   string $group\n     * @param   string $group_connector\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function havingGroup($group, $group_connector = 'AND')\n    {\n        $this->having_group\n            = $this->setGroup($group, $group_connector, 'having', $this->having_group);\n\n        return $this;\n    }\n\n    /**\n     * Set Where Conditions for Query\n     *\n     * @param   string      $left_filter\n     * @param   string      $left\n     * @param   string      $condition\n     * @param   string      $right_filter\n     * @param   string      $right\n     * @param   string      $connector\n     * @param   null|string $group\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function where(\n        $left_filter = 'column',\n        $left = '',\n        $condition = '',\n        $right_filter = 'column',\n        $right = '',\n        $connector = 'and',\n        $group = null\n    ) {\n        $item = $this->setLeftRightConditionals(\n            $left_filter,\n            $left,\n            $condition,\n            $right_filter,\n            $right,\n            $connector,\n            $group\n        );\n\n        $this->where[] = $item;\n\n        return $this;\n    }\n\n    /**\n     * Set Having Conditions for Query\n     *\n     * @param   string      $left_filter\n     * @param   string      $left\n     * @param   string      $condition\n     * @param   string      $right_filter\n     * @param   string      $right\n     * @param   string      $connector\n     * @param   null|string $group\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function having(\n        $left_filter = 'column',\n        $left = '',\n        $condition = '',\n        $right_filter = 'column',\n        $right = '',\n        $connector = 'and',\n        $group = null\n    ) {\n        $item = $this->setLeftRightConditionals(\n            $left_filter,\n            $left,\n            $condition,\n            $right_filter,\n            $right,\n            $connector,\n            $group\n        );\n\n        $this->having[] = $item;\n\n        return $this;\n    }\n\n    /**\n     * Group By column name\n     *\n     * @param   string $column_name\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function groupBy($column_name)\n    {\n        $this->group_by[] = $this->setGroupByOrderBy($column_name, 'group by');\n\n        return $this;\n    }\n\n    /**\n     * Order By column name\n     *\n     * @param   string      $column_name\n     * @param   null|string $direction\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function orderBy($column_name, $direction = 'ASC')\n    {\n        $this->order_by[] = $this->setGroupByOrderBy($column_name, 'order by', $direction);\n\n        return $this;\n    }\n\n    /**\n     * Offset and Limit\n     *\n     * @param   int $offset\n     * @param   int $limit\n     *\n     * @return  $this\n     * @since   1.0.0\n     */\n    public function setOffsetAndLimit($offset = 0, $limit = 0)\n    {\n        $this->setOffsetOrLimit($offset, $type = 'offset');\n        $this->setOffsetOrLimit($limit, $type = 'limit');\n\n        return $this;\n    }\n}\n", "meta": {"content_hash": "4cba7c7b8d58f8f451db992b967927b1", "timestamp": "", "source": "github", "line_count": 423, "max_line_length": 99, "avg_line_length": 23.6903073286052, "alnum_prop": 0.4923660313341982, "repo_name": "Molajo/Query", "id": "35418dea65445de82454beeae6395b58c24ef1b5", "size": "10218", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "Source/Query/Builder/Sql.php", "mode": "33188", "license": "mit", "language": [{"name": "PHP", "bytes": "512092"}]}}
{"text": "\n\npackage org.apache.beam.sdk.extensions.sql.impl.interpreter.operator.math;\n\nimport java.math.BigDecimal;\nimport java.util.ArrayList;\nimport java.util.List;\nimport org.apache.beam.sdk.extensions.sql.impl.interpreter.BeamSqlFnExecutorTestBase;\nimport org.apache.beam.sdk.extensions.sql.impl.interpreter.operator.BeamSqlExpression;\nimport org.apache.beam.sdk.extensions.sql.impl.interpreter.operator.BeamSqlPrimitive;\nimport org.apache.calcite.sql.type.SqlTypeName;\nimport org.junit.Assert;\nimport org.junit.Test;\n\n/**\n * Test for {@link BeamSqlMathUnaryExpression}.\n */\npublic class BeamSqlMathUnaryExpressionTest extends BeamSqlFnExecutorTestBase {\n\n  @Test public void testForGreaterThanOneOperands() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // operands more than 1 not allowed\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.INTEGER, 2));\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.INTEGER, 4));\n    Assert.assertFalse(new BeamSqlAbsExpression(operands).accept());\n  }\n\n  @Test public void testForOperandsType() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // varchar operand not allowed\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.VARCHAR, \"2\"));\n    Assert.assertFalse(new BeamSqlAbsExpression(operands).accept());\n  }\n\n  @Test public void testForUnaryExpressions() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for sqrt function\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n\n    // test for abs function\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.BIGINT, -28965734597L));\n    Assert.assertEquals(28965734597L,\n        new BeamSqlAbsExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForLnExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for LN function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.log(2),\n        new BeamSqlLnExpression(operands).evaluate(record, null).getValue());\n\n    // test for LN function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert\n        .assertEquals(Math.log(2.4),\n            new BeamSqlLnExpression(operands).evaluate(record, null).getValue());\n    // test for LN function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.log(2.56),\n        new BeamSqlLnExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForLog10Expression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for log10 function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.log10(2),\n        new BeamSqlLogExpression(operands).evaluate(record, null).getValue());\n    // test for log10 function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.log10(2.4),\n        new BeamSqlLogExpression(operands).evaluate(record, null).getValue());\n    // test for log10 function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.log10(2.56),\n        new BeamSqlLogExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForExpExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.exp(2),\n        new BeamSqlExpExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.exp(2.4),\n        new BeamSqlExpExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.exp(2.56),\n        new BeamSqlExpExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForAcosExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Double.NaN,\n        new BeamSqlAcosExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 0.45));\n    Assert.assertEquals(Math.acos(0.45),\n        new BeamSqlAcosExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(-0.367)));\n    Assert.assertEquals(Math.acos(-0.367),\n        new BeamSqlAcosExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForAsinExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type double\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 0.45));\n    Assert.assertEquals(Math.asin(0.45),\n        new BeamSqlAsinExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(-0.367)));\n    Assert.assertEquals(Math.asin(-0.367),\n        new BeamSqlAsinExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForAtanExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type double\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 0.45));\n    Assert.assertEquals(Math.atan(0.45),\n        new BeamSqlAtanExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(-0.367)));\n    Assert.assertEquals(Math.atan(-0.367),\n        new BeamSqlAtanExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForCosExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type double\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 0.45));\n    Assert.assertEquals(Math.cos(0.45),\n        new BeamSqlCosExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(-0.367)));\n    Assert.assertEquals(Math.cos(-0.367),\n        new BeamSqlCosExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForCotExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type double\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, .45));\n    Assert.assertEquals(1.0d / Math.tan(0.45),\n        new BeamSqlCotExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(-.367)));\n    Assert.assertEquals(1.0d / Math.tan(-0.367),\n        new BeamSqlCotExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForDegreesExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.toDegrees(2),\n        new BeamSqlDegreesExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.toDegrees(2.4),\n        new BeamSqlDegreesExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.toDegrees(2.56),\n        new BeamSqlDegreesExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForRadiansExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.toRadians(2),\n        new BeamSqlRadiansExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.toRadians(2.4),\n        new BeamSqlRadiansExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.toRadians(2.56),\n        new BeamSqlRadiansExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForSinExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.sin(2),\n        new BeamSqlSinExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.sin(2.4),\n        new BeamSqlSinExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.sin(2.56),\n        new BeamSqlSinExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForTanExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals(Math.tan(2),\n        new BeamSqlTanExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(Math.tan(2.4),\n        new BeamSqlTanExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(Math.tan(2.56),\n        new BeamSqlTanExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForSignExpression() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n\n    // test for exp function with operand type smallint\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.SMALLINT, Short.valueOf(\"2\")));\n    Assert.assertEquals((short) 1\n        , new BeamSqlSignExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type double\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.4));\n    Assert.assertEquals(1.0, new BeamSqlSignExpression(operands).evaluate(record, null).getValue());\n    // test for exp function with operand type decimal\n    operands.clear();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DECIMAL, BigDecimal.valueOf(2.56)));\n    Assert.assertEquals(BigDecimal.ONE,\n        new BeamSqlSignExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForPi() {\n    Assert.assertEquals(Math.PI, new BeamSqlPiExpression().evaluate(record, null).getValue());\n  }\n\n  @Test public void testForCeil() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.68687979));\n    Assert.assertEquals(Math.ceil(2.68687979),\n        new BeamSqlCeilExpression(operands).evaluate(record, null).getValue());\n  }\n\n  @Test public void testForFloor() {\n    List<BeamSqlExpression> operands = new ArrayList<>();\n    operands.add(BeamSqlPrimitive.of(SqlTypeName.DOUBLE, 2.68687979));\n    Assert.assertEquals(Math.floor(2.68687979),\n        new BeamSqlFloorExpression(operands).evaluate(record, null).getValue());\n  }\n\n}\n", "meta": {"content_hash": "0f912d403eeb23eb9c577b43291462b1", "timestamp": "", "source": "github", "line_count": 296, "max_line_length": 100, "avg_line_length": 44.7195945945946, "alnum_prop": 0.72675077434464, "repo_name": "wangyum/beam", "id": "d80a67071e9aebc3146dcaa4f1479f5802c1f00f", "size": "14042", "binary": false, "copies": "6", "ref": "refs/heads/master", "path": "sdks/java/extensions/sql/src/test/java/org/apache/beam/sdk/extensions/sql/impl/interpreter/operator/math/BeamSqlMathUnaryExpressionTest.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Go", "bytes": "109377"}, {"name": "Groovy", "bytes": "84452"}, {"name": "Java", "bytes": "14117162"}, {"name": "Python", "bytes": "3165393"}, {"name": "Shell", "bytes": "55385"}]}}
{"text": "set -e\ngit clone https://github.com/nanomsg/nnpy.git\n# top of tree won't install\ncd nnpy\ngit checkout c7e718a5173447c85182dc45f99e2abcf9cd4065\nsudo pip install cffi\nsudo pip install .\ncd ..\n", "meta": {"content_hash": "2df4b09d1debc62ee0178e0ebf554c12", "timestamp": "", "source": "github", "line_count": 8, "max_line_length": 53, "avg_line_length": 23.75, "alnum_prop": 0.7947368421052632, "repo_name": "hanw/behavioral-model", "id": "77a7d63afe47a1741d549f97580015fe9cbc31ca", "size": "200", "binary": false, "copies": "3", "ref": "refs/heads/master", "path": "travis/install-nnpy.sh", "mode": "33188", "license": "apache-2.0", "language": [{"name": "C", "bytes": "93627"}, {"name": "C++", "bytes": "2126481"}, {"name": "M4", "bytes": "69750"}, {"name": "Makefile", "bytes": "44234"}, {"name": "P4", "bytes": "37531"}, {"name": "Python", "bytes": "271835"}, {"name": "Ruby", "bytes": "5182"}, {"name": "Shell", "bytes": "11424"}, {"name": "Thrift", "bytes": "25904"}]}}
{"text": "\npackage au.net.zeus.rmi.tls;\n\nimport java.net.Socket;\nimport java.security.AccessController;\nimport java.security.GeneralSecurityException;\nimport java.security.NoSuchAlgorithmException;\nimport java.security.NoSuchProviderException;\nimport java.security.Principal;\nimport java.security.cert.CertPath;\nimport java.security.cert.CertificateException;\nimport java.security.cert.X509Certificate;\nimport java.util.ArrayList;\nimport java.util.Collection;\nimport java.util.Collections;\nimport java.util.List;\nimport java.util.Set;\nimport java.util.logging.Level;\nimport java.util.logging.Logger;\nimport javax.security.auth.Subject;\nimport javax.security.auth.x500.X500PrivateCredential;\nimport net.jini.io.UnsupportedConstraintException;\nimport net.jini.security.AuthenticationPermission;\nimport org.apache.river.logging.Levels;\n\n/**\n *\n * @author peter\n */\nclass ClientSubjectKeyManager extends SubjectKeyManager {\n    /** Client logger */\n    private static final Logger logger = CLIENT_LOGGER;\n   \n    \n    /** Returns the client logger */\n    Logger getLogger() {\n\treturn logger;\n    }\n    \n    ClientSubjectKeyManager(Subject subject) throws NoSuchAlgorithmException, NoSuchProviderException {\n\tsuper(subject);\n    }\n\n    @Override\n    public String[] getClientAliases(String keyType, Principal[] issuers) {\n\tList certPaths = getCertificateChains(getSubject());\n\tif (certPaths == null) {\n\t    return null;\n\t}\n\tCollection result = null;\n\tfor (int i = certPaths.size(); --i >= 0;) {\n\t    CertPath chain = (CertPath) certPaths.get(i);\n\t    Exception exception;\n\t    try {\n\t\tif (checkChain(chain, keyType, issuers) != null) {\n\t\t    if (result == null) {\n\t\t\tresult = new ArrayList(certPaths.size());\n\t\t    }\n\t\t    result.add(getCertificateName(firstX509Cert(chain)));\n\t\t}\n\t\tcontinue;\n\t    } catch (SecurityException e) {\n\t\texception = e;\n\t    } catch (GeneralSecurityException ex) {\n\t\texception = ex;\n\t    }\n\t    Logger logger = Logger.getLogger(SubjectKeyManager.class.getName());\n\t    if (logger.isLoggable(Levels.HANDLED)) {\n\t\tlogger.log(Levels.HANDLED, \"Swallowed SecurityException thrown\", exception);\n\t    }\n\t}\n\tif (result == null) {\n\t    return null;\n\t} else {\n\t    return (String[]) result.toArray(new String[result.size()]);\n\t}\n    }\n\n    @Override\n    public synchronized String chooseClientAlias(String[] keyTypes, Principal[] issuers, Socket socket) {\n\t/*\n\t * Only choose new client credentials for the first handshake.\n\t * Otherwise, just use the previous client credentials.\n\t */\n\tif (clientCredential == null) {\n\t    for (String keyType : keyTypes) {\n\t\ttry {\n\t\t    if (exceptionMap.get(keyType) != null) {\n\t\t\t// Prior exception found for keytype\n\t\t\treturn null;\n\t\t    }\n\n\t\t    clientCredential = chooseCredential(keyType, issuers);\n\t\t    if (clientCredential != null) {\n                        // clientCredential found\n\t\t\texceptionMap.put(keyType, null);\n\t\t\tbreak;\n                        \n                    } else {\n\t\t\texceptionMap.put(keyType,\n                            new GeneralSecurityException(\"Credentials not found\"));\n\t\t    }\n\t\t    continue;\n                    \n\t\t} catch (GeneralSecurityException e) {\n\t\t    exceptionMap.put(keyType, e);\n\t\t} catch (SecurityException e) {\n\t\t    exceptionMap.put(keyType, e);\n\t\t}\n\t    }\n\t    if (clientCredential == null) {\n\t\treturn null;\n\t    }\n\t}\n        \n\tX509Certificate cert = clientCredential.getCertificate();\n\tclientPrincipal = cert.getSubjectX500Principal();\n\tcredentialsValidUntil = Math.min(credentialsValidUntil, certificatesValidUntil(getCertificateChain(getSubject(), cert)));\n\tauthenticationPermission = getAuthenticationPermission(cert);\n\tString result = getCertificateName(clientCredential.getCertificate());\n\t\tif (logger.isLoggable(Level.FINE)) {\n\t\t    logger.log(\n\t\t\tLevel.FINE,\n\t\t\t\"choose client alias for key types {0}\\nand issuers {1}\\n\" +\n\t\t\t\"returns {2}\",\n\t\t\tnew Object[] { toString(keyTypes), toString(issuers), result });\n\t\t}\n\treturn result;\n    }\n\n    /* -- X500TrustManager -- */\n    /**\n     * Override this X509TrustManager method in order to cache the server\n     * principal and to continue to choose the same one.\n     */\n    @Override\n    public synchronized void checkServerTrusted(X509Certificate[] chain, String authType) throws CertificateException {\n\tsuper.checkServerTrusted(chain, authType);\n\tif (serverPrincipal == null) {\n\t    serverCredential = chain[0];\n\t    serverPrincipal = serverCredential.getSubjectX500Principal();\n\t    setPermittedRemotePrincipals(Collections.singleton(serverPrincipal));\n\t    credentialsValidUntil = certificatesValidUntil(chain);\n\t} else if (!serverCredential.equals(chain[0])) {\n\t    throw new CertificateException(\"Server credentials changed\");\n\t}\n    }\n\n    @Override\n    public String[] getServerAliases(String arg0, Principal[] arg1) {\n\treturn null;\n    }\n\n    @Override\n    public String chooseServerAlias(String arg0, Principal[] arg1, Socket arg2) {\n\treturn null;\n    }\n\n    /**\n     * Returns the permission needed to connect to the last server principal\n     * with the specified client certificate.\n     */\n    AuthenticationPermission getAuthenticationPermission(X509Certificate cert) {\n\tSet client = Collections.singleton(cert.getSubjectX500Principal());\n\tSet server = (serverPrincipal == null) ? null : Collections.singleton(serverPrincipal);\n\treturn new AuthenticationPermission(client, server, \"connect\");\n    }\n\n    /**\n     * Gets the private credential for the specified X.509 certificate,\n     * checking for AuthenticationPermission to connect with the last server\n     * principal.\n     *\n     * @param cert the certificate for the local principal\n     * @return the associated private credential or null if not found\n     * @throws SecurityException if the access control context does not have\n     *\t       the proper AuthenticationPermission\n     */\n    @Override\n    synchronized X500PrivateCredential getPrivateCredential(X509Certificate cert) {\n\treturn getPrivateCredential(cert, getAuthenticationPermission(cert));\n    }\n\n    /**\n     * Gets the private credential for the specified X.509 certificate,\n     * checking for the specified AuthenticationPermission.\n     *\n     * @param cert the certificate for the local principal\n     * @param ap the permission needed to connect to the peer\n     * @return the associated private credential or null if not found\n     * @throws SecurityException if the access control context does not have\n     *\t       the proper AuthenticationPermission\n     */\n    protected X500PrivateCredential getPrivateCredential(X509Certificate cert, AuthenticationPermission ap) {\n\tSubject subject = getSubject();\n\tif (subject == null) {\n\t    return null;\n\t}\n\tSecurityManager sm = System.getSecurityManager();\n\tif (sm != null) {\n\t    sm.checkPermission(ap);\n\t}\n\treturn (X500PrivateCredential) AccessController.doPrivileged(new GetPrivateCredentialAction(subject, cert));\n    }\n    \n    \n    /**\n     * Checks if the subject still contains the proper credentials, and the\n     * current access control context has the proper AuthenticationPermission,\n     * to use the current session.  Callers should only call this method if\n     * client authentication is being used.\n     *\n     * @throws SecurityException if the access control context does not have\n     *\t       the proper AuthenticationPermission\n     * @throws UnsupportedConstraintException if the subject does not contain\n     *\t       the proper credentials\n     */\n    synchronized void checkAuthentication()\n\tthrows GeneralSecurityException\n    {\n\tif (clientCredential == null) {\n\t    throw new GeneralSecurityException(\n\t\t\"Client is not authenticated\");\n\t} else if (clientCredential.isDestroyed()) {\n\t    throw new GeneralSecurityException(\n\t\t\"Private credentials are destroyed\");\n\t} else if (System.currentTimeMillis() > credentialsValidUntil) {\n\t    throw new GeneralSecurityException(\n\t\t\"Certificates are no longer valid\");\n\t}\n\tif (subjectIsReadOnly) {\n\t    SecurityManager sm = System.getSecurityManager();\n\t    if (sm != null) {\n\t\tsm.checkPermission(authenticationPermission);\n\t    }\n\t} else {\n\t    Subject subject = getSubject();\n\t    X509Certificate cert = clientCredential.getCertificate();\n\t    if (getPrincipal(subject, cert) == null) {\n\t\tthrow new GeneralSecurityException(\"Missing principal\");\n\t    }\n\t    CertPath chain =\n\t\tgetCertificateChain(subject, cert);\n\t    if (chain == null) {\n\t\tthrow new GeneralSecurityException(\n\t\t    \"Missing public credentials\");\n\t    }\n\t    X500PrivateCredential pc = getPrivateCredential(\n\t\tcert, authenticationPermission);\n\t    if (pc == null) {\n\t\tthrow new GeneralSecurityException(\n\t\t    \"Missing private credentials\");\n\t    } else if (!equalPrivateCredentials(clientCredential, pc)) {\n\t\tthrow new GeneralSecurityException(\n\t\t    \"Wrong private credentials\");\n\t    }\n\t}\n    }\n}\n", "meta": {"content_hash": "527a69c207200fca5e44fa300086269f", "timestamp": "", "source": "github", "line_count": 259, "max_line_length": 122, "avg_line_length": 33.87258687258687, "alnum_prop": 0.7045480451384931, "repo_name": "pfirmstone/river-internet", "id": "01c4d486d5a17fffaaacedcc4db47435ee148cca", "size": "9363", "binary": false, "copies": "2", "ref": "refs/heads/trunk", "path": "JGDMS/jgdms-rmi-tls/src/main/java/au/net/zeus/rmi/tls/ClientSubjectKeyManager.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "CSS", "bytes": "2047"}, {"name": "Groff", "bytes": "863"}, {"name": "Groovy", "bytes": "35711"}, {"name": "HTML", "bytes": "4398920"}, {"name": "Java", "bytes": "33660467"}, {"name": "Makefile", "bytes": "3046"}, {"name": "Shell", "bytes": "69126"}]}}
{"text": "(function(root) {\n\n//------------------------------------------------------------------//\n// Compatibility\n//------------------------------------------------------------------//\n\nvar emptyFn  = function() {};\nvar console  = root.console || {};\nvar document = root.document;\n\nconsole.error = console.error || emptyFn;\n\nroot.GLOBAL = root;\n\n//------------------------------------------------------------------//\n// Base64 encoding\n//------------------------------------------------------------------//\n\nfunction toBase64Digit(value) {\n\tvar digits =\n\t\t'ABCDEFGHIJKLMNOPQRSTUVWXYZ' +\n\t\t'abcdefghijklmnopqrstuvwxyz' +\n\t\t'0123456789+/';\n\treturn digits[value & 0x3F];\n}\n\nfunction strToUTF8Base64(str) {\n\n\tfunction decodeSurrogatePair(hi, lo) {\n\t\tvar resultChar = 0x010000;\n\t\tresultChar += lo - 0xDC00;\n\t\tresultChar += (hi - 0xD800) << 10;\n\t\treturn resultChar;\n\t}\n\n\tvar bytes = [0, 0, 0];\n\tvar byteIndex = 0;\n\tvar result = [];\n\n\tfunction output(s) {\n\t\tresult.push(s);\n\t}\n\n\tfunction emitBase64() {\n\n\t\tvar toDigit = toBase64Digit;\n\n\t\t// --Byte 0--    --Byte 1--    --Byte 2--\n\t\t// 1111  1122    2222  3333    3344  4444\n\n\t\tvar d1 = toDigit(bytes[0] >> 2);\n\t\tvar d2 = toDigit(\n\t\t\t((bytes[0] & 0x03) << 4) |\n\t\t\t(bytes[1] >> 4));\n\t\tvar d3 = toDigit(\n\t\t\t((bytes[1] & 0x0F) << 2) |\n\t\t\t(bytes[2] >> 6));\n\t\tvar d4 = toDigit(\n\t\t\tbytes[2] & 0x3F);\n\n\t\tif (byteIndex === 1) {\n\t\t\toutput(d1 + d2 + '==');\n\t\t}\n\t\telse if (byteIndex === 2) {\n\t\t\toutput(d1 + d2 + d3 + '=');\n\t\t}\n\t\telse {\n\t\t\toutput(d1 + d2 + d3 + d4);\n\t\t}\n\t}\n\n\tfunction emit(chr) {\n\t\tbytes[byteIndex++] = chr;\n\t\tif (byteIndex === 3) {\n\t\t\temitBase64();\n\t\t\tbytes[0] = 0;\n\t\t\tbytes[1] = 0;\n\t\t\tbytes[2] = 0;\n\t\t\tbyteIndex = 0;\n\t\t}\n\t}\n\n\tfunction emitLast() {\n\t\tif (byteIndex > 0) {\n\t\t\temitBase64();\n\t\t}\n\t}\n\n\t// Converts the string to UTF8:\n\n\tvar i, chr;\n\tvar hi, lo;\n\tfor (i = 0; i < str.length; i++) {\n\t\tchr = str.charCodeAt(i);\n\n\t\t// Test and decode surrogate pairs in the string\n\t\tif (chr >= 0xD800 && chr <= 0xDBFF) {\n\t\t\thi = chr;\n\t\t\tlo = str.charCodeAt(i + 1);\n\t\t\tif (lo >= 0xDC00 && lo <= 0xDFFF) {\n\t\t\t\tchr = decodeSurrogatePair(hi, lo);\n\t\t\t\ti++;\n\t\t\t}\n\t\t}\n\n\t\t// Encode the character as UTF-8.\n\t\tif (chr < 0x80) {\n\t\t\temit(chr);\n\t\t}\n\t\telse if (chr < 0x0800) {\n\t\t\temit((chr >> 6) | 0xC0);\n\t\t\temit(((chr >> 0) & 0x3F) | 0x80);\n\t\t}\n\t\telse if (chr < 0x10000) {\n\t\t\temit((chr >> 12) | 0xE0);\n\t\t\temit(((chr >>  6) & 0x3F) | 0x80);\n\t\t\temit(((chr >>  0) & 0x3F) | 0x80);\n\t\t}\n\t\telse if (chr < 0x110000) {\n\t\t\temit((chr >> 18) | 0xF0);\n\t\t\temit(((chr >> 12) & 0x3F) | 0x80);\n\t\t\temit(((chr >>  6) & 0x3F) | 0x80);\n\t\t\temit(((chr >>  0) & 0x3F) | 0x80);\n\t\t}\n\t}\n\n\temitLast();\n\n\treturn result.join('');\n}\n\n// VLQ Base64 encoding used in source maps\n\nfunction toVLQ(value) {\n\n\tvar vlq, result, digit;\n\n\t// The LSB in the encoded result is used to indicate the sign of\n\t// the original value\n\tvlq = value < 0 ? ((-value) << 1) + 1 : (value << 1);\n\n\t// Digits are encoded least significant first.\n\n\tresult = '';\n\tdo {\n\t\t// Each Base64 digit encodes 5 bits. The sixth bit is a\n\t\t// continuation bit.\n\t\tdigit = vlq & 0x1F;\n\t\tvlq = vlq >> 5;\n\t\tdigit = digit | (vlq > 0 ? 0x20 : 0);\n\t\tresult += toBase64Digit(digit);\n\t}\n\twhile (vlq > 0);\n\n\treturn result;\n}\n\n//------------------------------------------------------------------//\n// Source maps\n//------------------------------------------------------------------//\n\nfunction getSourceMap(file, source, lineOffset) {\n\tvar mappings = [];\n\tvar lineCount = source.split(/\\r\\n?|\\n/).length;\n\tvar map;\n\tvar curLine, i;\n\n\tvar lastOriginalLine = 0;\n\tfunction addLineMapping(originalLine) {\n\t\tvar generatedColumn = 0;\n\t\tvar sourceIndex = 0;\n\t\tvar originalColumn = 0;\n\t\tvar segment = [\n\t\t\ttoVLQ(generatedColumn),\n\t\t\ttoVLQ(sourceIndex),\n\t\t\ttoVLQ(originalLine - lastOriginalLine),\n\t\t\ttoVLQ(originalColumn)\n\t\t].join('');\n\t\tlastOriginalLine = originalLine;\n\t\tmappings.push(segment);\n\t}\n\n\tfor (i = 0; i < lineOffset; i++) {\n\t\tmappings.push('');\n\t}\n\n\tfor (i = 0; i < lineCount; i++) {\n\t\taddLineMapping(i);\n\t}\n\n\tmap = [\n\t\t'{',\n\t\t'\"version\":3,',\n\t\t'\"sources\":[',\n\t\tJSON.stringify(file),\n\t\t'],',\n\t\t'\"names\":[],',\n\t\t'\"mappings\":',\n\t\tJSON.stringify(mappings.join(';')),\n\t\t',',\n\t\t'\"sourcesContent\":[',\n\t\tJSON.stringify(source),\n\t\t']',\n\t\t'}'\n\t].join('');\n\n\treturn map;\n}\n\n//------------------------------------------------------------------//\n// Path manipulation\n//------------------------------------------------------------------//\n\nvar basePath = window.location.pathname.replace(/\\/[^\\/]*$/, '');\nvar hrefOrigin = window.location.origin;\n\nfunction concatPath(basePath, path) {\n\tvar baseParts, pathParts, i, it;\n\tvar result = [];\n\n\t// If path is absolute, ignore the base path.\n\tif (path[0] === '/') {\n\t\t// Run the concatPath to normalize path.\n\t\treturn concatPath(path, '');\n\t}\n\n\t// Remove leading and trailing slashes and split the base path.\n\t// Note that basePath is always handled as absolute.\n\tbaseParts = basePath.replace(/^\\/|\\/$/g, '').split('/');\n\n\t// Remove any trailing slash and split the path.\n\tpathParts = path.replace(/^\\/$/, '').split('/');\n\n\t// Append the parts of basePath to the result, solving . and ..\n\t// in the path.\n\tfor (i = 0; i < baseParts.length; i++) {\n\t\tit = baseParts[i];\n\t\tif (it === '.' || (i === 0 && it === '')) {\n\t\t\t// Ignore '.' or an empty part (result of an empty\n\t\t\t// basePath).\n\t\t\tcontinue;\n\t\t}\n\t\telse if (it === '..') {\n\t\t\tresult.pop();\n\t\t}\n\t\telse {\n\t\t\tresult.push(it);\n\t\t}\n\t}\n\n\t// Append the parts of path to the result, again solving . and ..\n\tfor (i = 0; i < pathParts.length; i++) {\n\t\tit = pathParts[i];\n\t\tif (it === '.' || it === '') {\n\t\t\t// Ignore '.' or an empty part (result of an empty path).\n\t\t\tcontinue;\n\t\t}\n\t\telse if (it === '..') {\n\t\t\tresult.pop();\n\t\t}\n\t\telse {\n\t\t\tresult.push(it);\n\t\t}\n\t}\n\n\treturn '/' + result.join('/');\n}\n\nfunction solvePossiblePaths(path, relativeTo) {\n\tvar isRelative = /^(\\.){0,2}\\//.test(path);\n\tvar possiblePaths = [];\n\tvar basePath, curPath;\n\n\tif (!/\\.js/i.test(path)) {\n\t\tpath += '.js';\n\t}\n\n\tif (isRelative) {\n\t\tcurPath = concatPath(relativeTo, path);\n\t\tpossiblePaths.push(curPath);\n\t}\n\telse {\n\t\tbasePath = relativeTo;\n\t\twhile (true) {\n\t\t\tcurPath = concatPath(basePath, 'node_modules');\n\t\t\tcurPath = concatPath(curPath, path);\n\t\t\tif (possiblePaths.indexOf(curPath) >= 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpossiblePaths.push(curPath);\n\t\t\t}\n\t\t\tbasePath = concatPath(basePath, '..');\n\t\t}\n\t}\n\n\treturn possiblePaths;\n}\n\n//------------------------------------------------------------------//\n// Ajax request\n//------------------------------------------------------------------//\n\nvar requestCache = {};\nvar pendingRequests = {};\n\nfunction sendRequest(path, callback) {\n\tvar request, pending;\n\n\t// Check for a cached result\n\tif (requestCache[path]) {\n\t\tsetTimeout(function() {\n\t\t\tcallback(requestCache[path]);\n\t\t}, 0);\n\t\treturn;\n\t}\n\telse if (pendingRequests[path]) {\n\t\tpendingRequests[path].callbacks.push(callback);\n\t\treturn;\n\t}\n\n\t// If the request is not on the cache, makes the Ajax request:\n\n\tif (root.XMLHttpRequest) {\n\t\trequest = new root.XMLHttpRequest();\n\t}\n\telse if (root.ActiveXObject) {\n\t\trequest = new root.ActiveXObject('Microsoft.XMLHTTP');\n\t}\n\n\tpending = pendingRequests[path] = { callbacks: [callback] };\n\n\trequest.onreadystatechange = function() {\n\t\tvar response, callbacks, i, cb;\n\t\tif (request.readyState === 4) {\n\t\t\trequestCache[path] = response = parseResponse(request);\n\t\t\tresponse.originPath = path;\n\t\t\tcallbacks = pendingRequests[path].callbacks;\n\t\t\tdelete pendingRequests[path];\n\t\t\tfor (i = 0; i < callbacks.length; i++) {\n\t\t\t\tcb = callbacks[i];\n\t\t\t\tcb(response);\n\t\t\t}\n\t\t}\n\t};\n\n\trequest.open('GET', path, true);\n\trequest.send(null);\n}\n\nfunction parseResponse(request) {\n\tvar result = {};\n\tif (request.status === 200) {\n\t\tresult.success = true;\n\t\tresult.source  = request.responseText;\n\t}\n\telse if (request.status === 404) {\n\t\tresult.success  = false;\n\t\tresult.notFound = true;\n\t\tresult.error = 'Not found (404)';\n\t}\n\telse {\n\t\tresult.success = false;\n\t\tresult.error = 'Server error (' + request.status + ')';\n\t}\n\treturn result;\n}\n\n//------------------------------------------------------------------//\n// Module loading\n//------------------------------------------------------------------//\n\nvar pending = [];\nvar moduleMap = {};\nvar moduleError = {};\nvar execOrder = [];\n\nfunction getRequires(source) {\n\tvar len;\n\tvar lines;\n\tvar i, it, match;\n\tvar requires = [];\n\n\t// Strips multiline comments from source.\n\tdo {\n\t\tlen = source.length;\n\t\tsource = source.replace(/\\/\\*([^\\*]|\\*(?!\\/))*(\\*\\/|$)/, '');\n\t}\n\twhile (len !== source.length);\n\n\tlines = source.split(/\\r\\n?|\\n/);\n\tfor (i = 0; i < lines.length; i++) {\n\t\tit = lines[i];\n\t\tit = it.replace(/^\\s*((?:var)?\\s*(?:\\w+\\s*=))?\\s*/, '');\n\t\tmatch = it.match(\n\t\t\t/^require\\s*\\(\\s*(\\'|\\\")((?:(?!\\1).)+)\\1\\s*\\)\\s*(;|$)/);\n\t\tif (match) {\n\t\t\trequires.push(match[2]);\n\t\t}\n\t}\n\n\treturn requires;\n}\n\nfunction loadModule(response, request, callback) {\n\tvar originPath = response.originPath;\n\tvar pendingIndex = pending.indexOf(request);\n\tvar module;\n\tvar requireCount = 0;\n\tvar requires, i, it;\n\n\tfunction callCallbackWhenOver() {\n\t\tif (requireCount <= 0 && typeof callback === 'function') {\n\t\t\tcallback(module, request);\n\t\t}\n\t}\n\n\tfunction onRequiredLoaded(depModule, depRequest) {\n\t\tmodule.dependencies.push(depModule.path);\n\t\tmodule.requireMap[depRequest.path] = depModule.path;\n\t\trequireCount -= 1;\n\t\tcallCallbackWhenOver();\n\t}\n\n\tpending.splice(pendingIndex, 1);\n\n\tmodule = moduleMap[originPath];\n\tif (!module) {\n\t\tmodule = moduleMap[originPath] = {\n\t\t\tpath:         originPath,\n\t\t\tbasePath:     concatPath(originPath, '..'),\n\t\t\terror:        response.success ? false : response.error,\n\t\t\trequest:      request,\n\t\t\tresponse:     response,\n\t\t\tsource:       response.source,\n\t\t\tdependencies: [],\n\t\t\trequireMap:   {},\n\t\t\tmoduleObject: {\n\t\t\t\texports: {}\n\t\t\t}\n\t\t};\n\n\t\tif (!module.error) {\n\t\t\trequires = module.requires = getRequires(module.source);\n\t\t\trequireCount = requires.length;\n\n\t\t\tfor (i = 0; i < requires.length; i++) {\n\t\t\t\tit = requires[i];\n\t\t\t\tloadFile(it, module.basePath, module.path, onRequiredLoaded);\n\t\t\t}\n\n\t\t\tcallCallbackWhenOver();\n\t\t}\n\t\telse {\n\t\t\tcallCallbackWhenOver();\n\t\t}\n\t}\n\telse {\n\t\tcallCallbackWhenOver();\n\t}\n}\n\nfunction loadFile(path, relativeTo, requestedBy, callback) {\n\n\tvar requestInfo = {\n\t\tpath: path,\n\t\tbasePath: relativeTo,\n\t\tsolvedPaths: solvePossiblePaths(path, relativeTo),\n\t\tnextIndex: 0\n\t};\n\n\tpending.push(requestInfo);\n\n\tfunction onSuccess(response) {\n\t\tloadModule(response, requestInfo, callback);\n\t}\n\n\tfunction onError(response) {\n\t\tconsole.error(\n\t\t\t\t'Failed to load `' + path +\n\t\t\t\t'` requested by `' + requestedBy +\n\t\t\t\t'`: ' + response.error);\n\t\tloadModule(response, requestInfo, callback);\n\t}\n\n\tfunction tryLoadNext() {\n\t\tvar nextPath = requestInfo.solvedPaths[requestInfo.nextIndex++];\n\t\tvar isLast = requestInfo.nextIndex >= requestInfo.solvedPaths.length;\n\n\t\t// Send the request for the next possible path.\n\t\tsendRequest(nextPath, function(response) {\n\t\t\tif (response.success) {\n\t\t\t\t// The file was successfully loaded, process the\n\t\t\t\t// result.\n\t\t\t\tonSuccess(response);\n\t\t\t}\n\t\t\telse if (response.notFound && !isLast) {\n\t\t\t\t// The file was not found, but there are other\n\t\t\t\t// possible paths, so continue trying.\n\t\t\t\ttryLoadNext();\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// The request failed or the last possible path was\n\t\t\t\t// not found. Generate an error.\n\t\t\t\tonError(response);\n\t\t\t}\n\t\t});\n\t}\n\n\t// Try load the first possible path.\n\ttryLoadNext();\n}\n\n//------------------------------------------------------------------//\n// Module execution\n//------------------------------------------------------------------//\n\nfunction getModule(modulePath) {\n\tvar module = moduleMap[modulePath];\n\tif (!module) {\n\t\tthrow new Error('Module `' + modulePath + '` not loaded');\n\t}\n\treturn module;\n}\n\nfunction getLoadingOrder(module) {\n\tvar result = [];\n\tvar deps, i, it, subResult;\n\tif (module && !module.visited) {\n\t\tmodule.visited = true;\n\t\tdeps = module.dependencies;\n\t\tfor (i = 0; i < deps.length; i++) {\n\t\t\tit = getModule(deps[i]);\n\t\t\tsubResult = getLoadingOrder(it);\n\t\t\tresult = result.concat(subResult);\n\t\t}\n\t\tresult.push(module);\n\t}\n\treturn result;\n}\n\nfunction beforeModuleLoading(module) {\n}\n\nfunction afterModuleLoading(module) {\n\tif (!axloader._moduleFn) {\n\t\t// Assume a syntax error.\n\t\tmodule.syntaxError = true;\n\t}\n\tmodule.moduleFunction = axloader._moduleFn;\n\tmodule.executed = false;\n\tdelete axloader._moduleFn;\n}\n\nfunction executeModule(module, afterCallback) {\n\tvar order = getLoadingOrder(module);\n\n\tfunction loadNext() {\n\t\tvar nextModule = order.shift();\n\t\tvar script, source, sourceMap;\n\t\tif (nextModule && !nextModule.error) {\n\t\t\tbeforeModuleLoading(nextModule);\n\n\t\t\tsource = 'axloader._moduleFn = (' +\n\t\t\t\t'function(require, module, exports, global) { // ' +\n\t\t\t\tnextModule.path + '\\n' +\n\t\t\t\tnextModule.source +\n\t\t\t\t'\\n})';\n\t\t\tsource += '\\n//# sourceMappingURL=' +\n\t\t\t\t'data:application/json;charset=utf-8;base64,';\n\t\t\tsourceMap = getSourceMap(\n\t\t\t\threfOrigin + nextModule.path, nextModule.source, 1);\n\t\t\tsource += strToUTF8Base64(sourceMap);\n\n\t\t\tscript = document.createElement('script');\n\t\t\tscript.id = nextModule.path;\n\t\t\tscript.type = 'text/javascript';\n\t\t\tscript.src =\n\t\t\t\t'data:text/javascript;charset=utf-8;base64,' +\n\t\t\t\tstrToUTF8Base64(source);\n\t\t\tscript.innerHTML = source;\n\t\t\tscript.onload = function() {\n\t\t\t\tafterModuleLoading(nextModule);\n\t\t\t\tsetTimeout(loadNext, 0);\n\t\t\t};\n\t\t\tdocument.head.appendChild(script);\n\t\t}\n\t\telse if (nextModule) {\n\t\t\tnextModule.notFound = true;\n\t\t\tsetTimeout(loadNext, 0);\n\t\t}\n\t\telse {\n\t\t\tdoExecute(module);\n\t\t\tif (typeof afterCallback === 'function') {\n\t\t\t\tafterCallback();\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction doExecute(theModule) {\n\n\t\tfunction require(path) {\n\t\t\tvar solvedPath = theModule.requireMap[path];\n\t\t\tvar requiredModule = solvedPath && getModule(solvedPath);\n\t\t\tif (!requiredModule) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'require: the module `' + path + '` was not preloaded');\n\t\t\t}\n\t\t\telse if (requiredModule.notFound) {\n\t\t\t\tthrow new Error('Cannot find module \\'' + path + '\\'');\n\t\t\t}\n\t\t\telse if (requiredModule.error) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'require: the module `' + path + '` could not be loaded: ' +\n\t\t\t\t\trequiredModule.error);\n\t\t\t}\n\n\t\t\tif (!requiredModule.executed && !requiredModule.executing) {\n\t\t\t\tdoExecute(requiredModule);\n\t\t\t}\n\n\t\t\treturn requiredModule.moduleObject.exports;\n\t\t}\n\n\t\tvar fn = theModule.moduleFunction;\n\t\tvar moduleObject = theModule.moduleObject;\n\t\tvar moduleExports = moduleObject.exports;\n\n\t\tif (theModule.syntaxError) {\n\t\t\tthrow new SyntaxError(theModule.path);\n\t\t}\n\t\telse if (theModule.notFound) {\n\t\t\tthrow new Error('module not found: ' + theModule.path);\n\t\t}\n\n\t\ttry {\n\t\t\ttheModule.executing = true;\n\t\t\tfn.call(root, require, moduleObject, moduleExports, root);\n\t\t}\n\t\tfinally {\n\t\t\ttheModule.executing = false;\n\t\t}\n\t\ttheModule.executed = true;\n\t}\n\n\tloadNext();\n}\n\n//------------------------------------------------------------------//\n// Public API\n//------------------------------------------------------------------//\n\nvar axloader = {};\n\naxloader.require = function require(path, afterCallback) {\n\tloadFile(path, basePath, 'axloader.require', function(module) {\n\t\texecuteModule(module, afterCallback);\n\t});\n};\n\naxloader.getPending = function getPending() {\n\treturn pending;\n};\n\naxloader.getModuleMap = function getModuleMap() {\n\treturn moduleMap;\n};\n\nroot.axloader = axloader;\n\n}(this));\n", "meta": {"content_hash": "4743262d432c18a51e55f21bb8262f7e", "timestamp": "", "source": "github", "line_count": 671, "max_line_length": 71, "avg_line_length": 22.758569299552907, "alnum_prop": 0.5774998362910091, "repo_name": "ricardobm/ax-loader", "id": "26a7854d505d1e5992646f05b596e9df22dda295", "size": "15271", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "src/ax-loader.js", "mode": "33188", "license": "mit", "language": [{"name": "JavaScript", "bytes": "21108"}]}}
{"text": "package jugsaar12.nio.networking;\n\nimport java.net.ServerSocket;\nimport java.net.Socket;\nimport java.util.concurrent.ExecutorService;\nimport java.util.concurrent.Executors;\n\n/**\n * TODO MAX_POOL_SIZE to 1000\n * <p/>\n * TODO show RejectedExecutionHandler -> Default AbortPolicy, CallerRunsPolicy\n */\npublic class C_ExecutorServiceMultiThreadedEchoServer {\n\n  public static void main(String[] args) throws Exception {\n\n    System.out.println(\"C_ExecutorServiceMultiThreadedEchoServer running\");\n\n    ExecutorService es = Executors.newCachedThreadPool();\n\n    try (ServerSocket ss = new ServerSocket(1337)) {\n\n      while (true) {\n\n        Socket s = ss.accept(); // blocking-call, never returns null!\n        es.submit(() -> Util.process(s));\n      }\n    }\n  }\n}", "meta": {"content_hash": "35befc48d23f03d692415d764e21ff48", "timestamp": "", "source": "github", "line_count": 30, "max_line_length": 78, "avg_line_length": 25.333333333333332, "alnum_prop": 0.7144736842105263, "repo_name": "jugsaar/jugsaar-meeting-12", "id": "aec0332d325665aa4bb0aec3abf2abd31679f07c", "size": "760", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "java-nio-networking/code/jugsaar12-java-nio-networking/src/main/java/jugsaar12/nio/networking/C_ExecutorServiceMultiThreadedEchoServer.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Java", "bytes": "17468"}]}}
{"text": "import pyxb.binding.generate\nimport pyxb.utils.domutils\nfrom xml.dom import Node\n\nimport os.path\nschema_path = os.path.abspath(os.path.join(os.path.dirname(__file__),\n                        '../schemas/po1.xsd'))\ncode = pyxb.binding.generate.GeneratePython(schema_location=schema_path)\n\n#file('code.py', 'w').write(code)\nrv = compile(code, 'test', 'exec')\neval(rv)\n\nfrom pyxb.exceptions_ import *\n\nfrom pyxb.utils import domutils\n\ndef ToDOM (instance, tag=None, dom_support=None):\n    return instance.toDOM(dom_support).documentElement\n\nimport unittest\n\nclass TestPO1 (unittest.TestCase):\n    street_content = '''95 Main St.\nAnytown, AS  12345-6789'''\n    street_xml = '<street>%s</street>' % (street_content,)\n    street_dom = pyxb.utils.domutils.StringToDOM(street_xml).documentElement\n\n    address1_xml = '<name>Customer</name><street>95 Main St</street>'\n    address2_xml = '<name>Sugar Mama</name><street>24 E. Dearling Ave.</street>'\n\n    def tearDown (self):\n        pyxb.RequireValidWhenGenerating(True)\n        pyxb.RequireValidWhenParsing(True)\n\n    def testPythonElementSimpleContent (self):\n        elt = USAddress._ElementMap['street'].elementBinding()(self.street_content)\n        self.assertEqual(self.street_content, elt)\n        self.assertEqual(ToDOM(elt).toxml(\"utf-8\"), self.street_xml)\n\n    def testDOMElementSimpleContent (self):\n        elt = USAddress._ElementMap['street'].elementBinding().createFromDOM(self.street_dom)\n        self.assertEqual(ToDOM(elt).toxml(\"utf-8\"), self.street_xml)\n\n    def testPythonElementComplexContent_Element (self):\n        addr = USAddress(name='Customer', street='95 Main St')\n        self.assertEqual('95 Main St', addr.street)\n        addr = USAddress('Customer', '95 Main St')\n        self.assertEqual('95 Main St', addr.street)\n        addr.street = '43 West Oak'\n        self.assertEqual('43 West Oak', addr.street)\n        #self.assertEqual('<s>%s</s>' % (self.address1_xml,), ToDOM(addr, tag='s').toxml(\"utf-8\"))\n\n    def testDOM_CTD_element (self):\n        # NB: USAddress is a CTD, not an element.\n        xml = '<shipTo>%s</shipTo>' % (self.address1_xml,)\n        dom = pyxb.utils.domutils.StringToDOM(xml)\n        addr2 = USAddress.Factory(_dom_node=dom.documentElement)\n        #self.assertEqual(xml, ToDOM(addr2, tag='shipTo').toxml(\"utf-8\"))\n\n    def testPurchaseOrder (self):\n        po = purchaseOrder(shipTo=USAddress(name='Customer', street='95 Main St'),\n                           billTo=USAddress(name='Sugar Mama', street='24 E. Dearling Ave'),\n                           comment='Thanks!')\n        xml = ToDOM(po).toxml(\"utf-8\")\n        xml1 = '<ns1:purchaseOrder xmlns:ns1=\"http://www.example.com/PO1\"><shipTo><name>Customer</name><street>95 Main St</street></shipTo><billTo><name>Sugar Mama</name><street>24 E. Dearling Ave</street></billTo><ns1:comment>Thanks!</ns1:comment></ns1:purchaseOrder>'\n        self.assertEqual(xml, xml1)\n\n        dom = pyxb.utils.domutils.StringToDOM(xml)\n        po2 = purchaseOrder.createFromDOM(dom.documentElement)\n        self.assertEqual(xml1, ToDOM(po2).toxml(\"utf-8\"))\n        loc = po2.shipTo._location()\n        self.assertTrue((not isinstance(loc, pyxb.utils.utility.Locatable_mixin)) or (58 == loc.columnNumber))\n        loc = po2.billTo.name._location()\n        self.assertTrue((not isinstance(loc, pyxb.utils.utility.Locatable_mixin)) or (131 == loc.columnNumber))\n\n        po2 = CreateFromDocument(xml)\n        self.assertEqual(xml1, ToDOM(po2).toxml(\"utf-8\"))\n        loc = po2.shipTo._location()\n        self.assertTrue((not isinstance(loc, pyxb.utils.utility.Locatable_mixin)) or (58 == loc.columnNumber))\n        loc = po2.billTo.name._location()\n        self.assertTrue((not isinstance(loc, pyxb.utils.utility.Locatable_mixin)) or (131 == loc.columnNumber))\n\n\n        xml2 = '<purchaseOrder xmlns=\"http://www.example.com/PO1\"><shipTo><name>Customer</name><street>95 Main St</street></shipTo><billTo><name>Sugar Mama</name><street>24 E. Dearling Ave</street></billTo><comment>Thanks!</comment></purchaseOrder>'\n        bds = pyxb.utils.domutils.BindingDOMSupport()\n        bds.setDefaultNamespace(Namespace)\n        self.assertEqual(xml2, ToDOM(po2, dom_support=bds).toxml(\"utf-8\"))\n\n    def testGenerationValidation (self):\n        ship_to = USAddress('Robert Smith', 'General Delivery')\n        po = purchaseOrder(ship_to)\n        self.assertEqual('General Delivery', po.shipTo.street)\n        self.assertTrue(po.billTo is None)\n\n        self.assertTrue(pyxb.RequireValidWhenGenerating())\n        self.assertRaises(pyxb.DOMGenerationError, po.toxml)\n        try:\n            pyxb.RequireValidWhenGenerating(False)\n            self.assertFalse(pyxb.RequireValidWhenGenerating())\n            xmls = po.toxml(\"utf-8\", root_only=True)\n            self.assertEqual('<ns1:purchaseOrder xmlns:ns1=\"http://www.example.com/PO1\"><shipTo><street>General Delivery</street><name>Robert Smith</name></shipTo></ns1:purchaseOrder>', xmls)\n        finally:\n            pyxb.RequireValidWhenGenerating(True)\n        self.assertRaises(pyxb.UnrecognizedContentError, CreateFromDocument, xmls)\n        self.assertTrue(pyxb.RequireValidWhenParsing())\n        try:\n            pyxb.RequireValidWhenParsing(False)\n            self.assertFalse(pyxb.RequireValidWhenParsing())\n            po2 = CreateFromDocument(xmls)\n        finally:\n            pyxb.RequireValidWhenParsing(True)\n        self.assertEqual('General Delivery', po2.shipTo.street)\n        self.assertTrue(po2.billTo is None)\n\nif __name__ == '__main__':\n    unittest.main()\n    \n        \n", "meta": {"content_hash": "919acf526bf392f33f5376056b08089f", "timestamp": "", "source": "github", "line_count": 119, "max_line_length": 269, "avg_line_length": 46.739495798319325, "alnum_prop": 0.6650485436893204, "repo_name": "jonfoster/pyxb1", "id": "bf3c9d2f0c5635eae42a36b08b6241bea6e6e94f", "size": "5562", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "tests/drivers/test-po1.py", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Python", "bytes": "1564427"}, {"name": "Shell", "bytes": "18946"}]}}
{"text": "using System;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Threading.Tasks;\nusing Newtonsoft.Json;\n\nnamespace VJeek.Microdata.Intangible.StructuredValue\n{\n\tpublic partial class OpeningHoursSpecification : StructuredValue\n\t{\n\t\t[JsonProperty(\"closes\")]\n\t\tpublic TimeSpan Closes { get; set; }\n\n\t\t[JsonProperty(\"dayOfWeek\")]\n\t\tpublic DayOfWeek DayOfWeek { get; set; }\n\n\t\t[JsonProperty(\"opens\")]\n\t\tpublic TimeSpan Opens { get; set; }\n\n\t\t[JsonProperty(\"validFrom\")]\n\t\tpublic DateTime ValidFrom { get; set; }\n\n\t\t[JsonProperty(\"validThrough\")]\n\t\tpublic DateTime ValidThrough { get; set; }\n\t}\n}\n", "meta": {"content_hash": "ebe952e1b2b29a2152f4caea184b6845", "timestamp": "", "source": "github", "line_count": 27, "max_line_length": 65, "avg_line_length": 23.22222222222222, "alnum_prop": 0.7384370015948963, "repo_name": "vjeek/microdata", "id": "eee2c6ba0e8520d9bd949baba07a99f7c5b3b95c", "size": "629", "binary": false, "copies": "1", "ref": "refs/heads/development", "path": "Sources/VJeek.Microdata/Intangible/StructuredValue/OpeningHoursSpecification.cs", "mode": "33188", "license": "mit", "language": [{"name": "Batchfile", "bytes": "746"}, {"name": "C#", "bytes": "19991"}, {"name": "PowerShell", "bytes": "95259"}]}}
{"text": "The GraphQL module allows client applications to query the content handled by an Orchard website.  \nIt enables the GraphiQL Explorer view to test GraphQL queries, and provides HTTP endpoints to send client queries.\n\n## HTTP Methods, Headers, and Body\n\n### GET request\n\nWhen receiving an HTTP GET request, the GraphQL query should be specified in the \"query\" query string. For example, if we wanted to execute the following GraphQL query:\n\n```graphql\n{\n  me {\n    name\n  }\n}\n```\n\nThis request could be sent via an HTTP GET like so:\n\n`http://myapi/graphql?query={me{name}}`\n\nQuery variables can be sent as a JSON-encoded string in an additional query parameter called variables. If the query contains several named operations, an operationName query parameter can be used to control which one should be executed.\n\n### POST request \n\n#### application/json content type\n\nA standard GraphQL POST request should use the `application/json` content-type header, and include a JSON-encoded body of the following form:\n\n```graphql\n{\n  \"query\": \"...\",\n  \"operationName\": \"...\",\n  \"variables\": { \"myVariable\": \"someValue\", ... }\n}\n```\n\n`operationName` and `variables` are optional fields. `operationName` is only required if multiple operations are present in the query.\n\n#### application/graphql content type\n\nAnother option is to use the `application/graphql` content-type header, and the HTTP POST body contents is treated as the GraphQL query string.\n\n#### query string\n\nIn addition to the above, If the \"query\" query string parameter is present (as in the GET example above), it will be parsed and handled in the same way as the HTTP GET case.\n\n### Response\n\nRegardless of the method by which the query and variables were sent, the response is returned in the body of the request in JSON format.  \nA query might result in some data and some errors, and those are returned in a JSON object of the form:\n\n```json\n{\n  \"data\": { ... },\n  \"errors\": [ ... ]\n}\n```\n\nIf there were no errors returned, the \"errors\" field is not present on the response. \nIf no data is returned the \"data\" field is only included if the error occurred during execution.\n\n## Authentication\n\nExecuting a GraphQL query requires the issuer to have the `ExecuteGraphQL` permission. Like any other API in Orchard Core, the GraphQL API supports \ncookie and OAuth 2.0 authentication. This means it's compatible with the OpenId module and supports JSON Web Token (JWT).\n\nBy default anonymous users are not able to execute a GraphQL query.\n\n## Configuration\n\nIt's possible to configure graphql options for exposing exceptions and max depth, max complexity and field impact.\n\nConfiguration is done via the standard shell configuration, as follows.\n\n```json\n{\n  \"OrchardCore\": {\n    \"OrchardCore_Apis_GraphQL\": {\n      \"ExposeExceptions\": true,\n      \"MaxDepth\": 50, \n      \"MaxComplexity\": 100, \n      \"FieldImpact\": 2.0,\n      \"DefaultNumberOfResults\": 100,\n      \"MaxNumberOfResults\": 1000,\n      \"MaxNumberOfResultsValidationMode\": \"Default\"\n    }\n  }\n}\n```\n\n*ExposeExceptions (bool, Default: false for production, true for development)*\n\nIf set to true stack traces are exposed to graphql clients\n\n*DefaultNumberOfResults (int, Default: 100)*\nThe default number of results returned by all paged fields/types.\n\n*MaxNumberOfResults (int, Default: 1000)*\nThe maximum number of results returned by all paged fields/types.\n\n*MaxNumberOfResultsValidationMode (enum, Values: Default|Enabled|Disabled, Default: Default)()*\nSpecify the validation behaviour if the max number of results is exceeded in a pager parameter\n\n* Default - In production info will be logged and only the max number of results will be returned. In development a graphql validation error will be raised.\n* Enabled - a graphql validation error will be raised\n* Disabled - Info will be logged and only the max number of results will be returned\n\n*MaxDepth (int?, Default: 20)*\n\nEnforces the total maximum nesting across all queries in a request.\n\n*MaxComplexity (int?, Default: null)*\n\n*FieldImpact (double?, Default: null)*\n\nFor more information on MaxDepth, MaxComplexity, FieldImpact & protecting against malicious queries view the graphql-dot-net documentation at <https://graphql-dotnet.github.io/docs/getting-started/malicious-queries/>\n", "meta": {"content_hash": "8ee80330a70b8aded11c89b2578ddc87", "timestamp": "", "source": "github", "line_count": 117, "max_line_length": 237, "avg_line_length": 36.43589743589744, "alnum_prop": 0.7522871217452498, "repo_name": "xkproject/Orchard2", "id": "2a44f43220f1cc656cf5d84f218eeb9a33797940", "size": "4308", "binary": false, "copies": "3", "ref": "refs/heads/master_PCCOM", "path": "src/docs/reference/modules/Apis.GraphQL/README.md", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "C#", "bytes": "7779422"}, {"name": "CSS", "bytes": "2900240"}, {"name": "Dockerfile", "bytes": "424"}, {"name": "HTML", "bytes": "1472436"}, {"name": "JavaScript", "bytes": "2184254"}, {"name": "Liquid", "bytes": "43273"}, {"name": "PHP", "bytes": "2484"}, {"name": "PowerShell", "bytes": "142165"}, {"name": "Pug", "bytes": "55503"}, {"name": "SCSS", "bytes": "215570"}, {"name": "TypeScript", "bytes": "41644"}]}}
{"text": "Namespace Ribbons.Document.Create\n\n    Public Class FromProfile\n        Inherits RibbonButtonBase\n\n        Public Sub New()\n            _Image = \"\"\n            _Order = 1\n            _Text = \"From Profile\"\n            _ToolTip = \"\"\n        End Sub\n\n        Protected Friend Overrides Sub OnClick()\n\n        End Sub\n\n        Protected Friend Overrides Sub OnIsEnabled()\n\n        End Sub\n\n    End Class\n\nEnd Namespace\n\n", "meta": {"content_hash": "81adc258cf3c3d2de8198ac49cb880ff", "timestamp": "", "source": "github", "line_count": 24, "max_line_length": 52, "avg_line_length": 17.375, "alnum_prop": 0.5539568345323741, "repo_name": "nublet/DMS", "id": "51e57b874a4c962bdaa2f2ba00ff815d1485c81b", "size": "417", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "DMS.Forms/Ribbons/Items/Document/Create/FromProfile.vb", "mode": "33188", "license": "mit", "language": [{"name": "Visual Basic", "bytes": "2291940"}]}}
{"text": "package com.dfyy.bussiness;\n\nimport java.io.Serializable;\nimport java.util.Date;\n\nimport javax.persistence.Column;\nimport javax.persistence.Entity;\nimport javax.persistence.FetchType;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.Id;\nimport javax.persistence.JoinColumn;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.Table;\nimport javax.xml.bind.annotation.XmlAccessType;\nimport javax.xml.bind.annotation.XmlAccessorType;\nimport javax.xml.bind.annotation.XmlElement;\nimport javax.xml.bind.annotation.XmlRootElement;\nimport javax.xml.bind.annotation.XmlTransient;\nimport javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;\n\nimport org.hibernate.annotations.GenericGenerator;\n\nimport com.dfyy.util.JaxbDateSerializer;\n\n@Entity\n@Table(name = \"user\")\n@XmlRootElement\n@XmlAccessorType(XmlAccessType.NONE)\npublic class User implements Serializable {\n\tprivate static final long serialVersionUID = 8517308475246169441L;\n\n\t@Id\n\t@Column(name = \"id\")\n\t@GenericGenerator(name = \"idGenerator\", strategy = \"assigned\")\n\t@GeneratedValue(generator = \"idGenerator\")\n\t@XmlElement\n\tprivate String id;\n\n\t@Column(name = \"phone\")\n\t@XmlElement\n\tprivate String phone;\n\n\t@Column(name = \"password\")\n\t@XmlTransient\n\tprivate String password;\n\n\t@Column(name = \"alias\")\n\t@XmlElement\n\tprivate String alias;\n\n\t@Column(name = \"thumbnail\")\n\t@XmlElement\n\tprivate String thumbnail;\n\n\t@Column(name = \"address\")\n\t@XmlElement\n\tprivate String address;\n\n\t@Column(name = \"point\")\n\t@XmlElement\n\tprivate Integer point;\n\n\t@Column(name = \"description\")\n\t@XmlElement\n\tprivate String description;\n\n\t@Column(name = \"status\")\n\t@XmlElement\n\tprivate Integer status;\n\n\t@Column(name = \"x\")\n\t@XmlElement\n\tprivate Double x;\n\n\t@Column(name = \"y\")\n\t@XmlElement\n\tprivate Double y;\n\n\t@Column(name = \"currency\")\n\t@XmlElement\n\tprivate Integer currency;\n\t\n\t\n\t@Column(name = \"money\")\n\t@XmlElement\n\tprivate Integer money;\n\n\t@Column(name = \"scoring\")\n\t@XmlElement\n\tprivate Double scoring;\n\n\t@Column(name = \"tjcode\")\n\t@XmlElement\n\tprivate String tjcode;\n\t\n\t@Column(name = \"tjcoin\")\n\t@XmlElement\n\tprivate Integer tjcoin;\n\t\n\t\n\t@Column(name = \"time\")\n\t@XmlJavaTypeAdapter(JaxbDateSerializer.class)\n\tprivate Date time;\n\n\t@ManyToOne(fetch = FetchType.EAGER)\n\t@JoinColumn(name = \"level\")\n\t@XmlElement\n\tprivate UserLevel level;\n\n\t@ManyToOne(fetch = FetchType.EAGER)\n\t@JoinColumn(name = \"aid\")\n\t@XmlElement\n\tprivate Area area;\n\t\n\t@Column(name = \"activity\")\n\tprivate Integer activity;\n\t\n\t@Column(name = \"teamwork\")\n\t@XmlElement\n\tprivate boolean teamwork;\n\t\n\t\n\t@Column(name = \"acceptcoupon\")\n\t@XmlElement\n\tprivate boolean acceptCoupon;\n\n\tpublic User() {\n\n\t}\n\n\tpublic String getId() {\n\t\treturn id;\n\t}\n\n\tpublic void setId(String id) {\n\t\tthis.id = id;\n\t}\n\n\tpublic String getPhone() {\n\t\treturn phone;\n\t}\n\n\tpublic void setPhone(String phone) {\n\t\tthis.phone = phone;\n\t}\n\n\tpublic String getPassword() {\n\t\treturn password;\n\t}\n\n\tpublic void setPassword(String password) {\n\t\tthis.password = password;\n\t}\n\n\tpublic String getAlias() {\n\t\treturn alias;\n\t}\n\n\tpublic void setAlias(String alias) {\n\t\tthis.alias = alias;\n\t}\n\n\tpublic String getThumbnail() {\n\t\treturn thumbnail;\n\t}\n\n\tpublic void setThumbnail(String thumbnail) {\n\t\tthis.thumbnail = thumbnail;\n\t}\n\n\tpublic String getAddress() {\n\t\treturn address;\n\t}\n\n\tpublic void setAddress(String address) {\n\t\tthis.address = address;\n\t}\n\n\tpublic Integer getPoint() {\n\t\treturn point;\n\t}\n\n\tpublic void setPoint(Integer point) {\n\t\tthis.point = point;\n\t}\n\n\tpublic String getDescription() {\n\t\treturn description;\n\t}\n\n\tpublic void setDescription(String description) {\n\t\tthis.description = description;\n\t}\n\n\tpublic Integer getStatus() {\n\t\treturn status;\n\t}\n\n\tpublic void setStatus(Integer status) {\n\t\tthis.status = status;\n\t}\n\n\tpublic Double getX() {\n\t\treturn x;\n\t}\n\n\tpublic void setX(Double x) {\n\t\tthis.x = x;\n\t}\n\n\tpublic Double getY() {\n\t\treturn y;\n\t}\n\n\tpublic void setY(Double y) {\n\t\tthis.y = y;\n\t}\n\n\tpublic Integer getCurrency() {\n\t\treturn currency;\n\t}\n\n\tpublic void setCurrency(Integer currency) {\n\t\tthis.currency = currency;\n\t}\n\n\tpublic Double getScoring() {\n\t\treturn scoring;\n\t}\n\n\tpublic void setScoring(Double scoring) {\n\t\tthis.scoring = scoring;\n\t}\n\n\tpublic Date getTime() {\n\t\treturn time;\n\t}\n\n\tpublic void setTime(Date time) {\n\t\tthis.time = time;\n\t}\n\n\tpublic UserLevel getLevel() {\n\t\treturn level;\n\t}\n\n\tpublic void setLevel(UserLevel level) {\n\t\tthis.level = level;\n\t}\n\n\tpublic Area getArea() {\n\t\treturn area;\n\t}\n\n\tpublic void setArea(Area area) {\n\t\tthis.area = area;\n\t}\n\n\tpublic String getTjcode() {\n\t\treturn tjcode;\n\t}\n\n\tpublic void setTjcode(String tjcode) {\n\t\tthis.tjcode = tjcode;\n\t}\n\t\n\tpublic Integer getActivity() {\n\t\treturn activity;\n\t}\n\n\tpublic void setActivity(Integer activity) {\n\t\tthis.activity = activity;\n\t}\n\n\t@XmlElement\n\tpublic String getIdentifier() {\n\t\tif (activity == null) {\n\t\t\treturn \"\u65b0\u4eba\";\n\t\t} else if (activity >= 2000) {\n\t\t\treturn \"\u7279\u7ea7\";\n\t\t} else if (activity >= 1000 && activity <= 1999) {\n\t\t\treturn \"\u9ad8\u7ea7\";\n\t\t} else if (activity >= 500 && activity <= 999) {\n\t\t\treturn \"\u4e2d\u7ea7\";\n\t\t} else if (activity >= 200 && activity <= 499) {\n\t\t\treturn \"\u521d\u7ea7\";\n\t\t}\n\t\treturn \"\u65b0\u4eba\";\n\t}\n\n\tpublic boolean isTeamwork() {\n\t\treturn teamwork;\n\t}\n\n\tpublic void setTeamwork(boolean teamwork) {\n\t\tthis.teamwork = teamwork;\n\t}\n\t\n\tpublic Integer getTjcoin() {\n\t\treturn tjcoin;\n\t}\n\n\tpublic void setTjcoin(Integer tjcoin) {\n\t\tthis.tjcoin = tjcoin;\n\t}\n\n\tpublic boolean isAcceptCoupon() {\n\t\treturn acceptCoupon;\n\t}\n\n\tpublic void setAcceptCoupon(boolean acceptCoupon) {\n\t\tthis.acceptCoupon = acceptCoupon;\n\t}\n\n\tpublic Integer getMoney() {\n\t\treturn money;\n\t}\n\n\tpublic void setMoney(Integer money) {\n\t\tthis.money = money;\n\t}\n\t\n}\n", "meta": {"content_hash": "09961152c255dd2b8ffd2e6fccc1ddbc", "timestamp": "", "source": "github", "line_count": 323, "max_line_length": 67, "avg_line_length": 17.340557275541794, "alnum_prop": 0.7064809855382967, "repo_name": "secondflying/dfyy", "id": "b7211ffdebc40d47216eaaef59f1a68cb1ada1fc", "size": "5625", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "src/main/java/com/dfyy/bussiness/User.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "ActionScript", "bytes": "70896"}, {"name": "Batchfile", "bytes": "113"}, {"name": "CSS", "bytes": "215364"}, {"name": "Java", "bytes": "2098669"}, {"name": "JavaScript", "bytes": "1312338"}, {"name": "PHP", "bytes": "1193"}]}}
{"text": "In order to translate the labels of the families and attributes, as well as some few other things, you only need to\ncreate a standard Symfony translation file with the proper syntax.\n\n| WARNING |\n| ------- |\n| Data translation is done using [*EAV* context](09-context.md) |\n\n### Translating Families\n\nThe label of a family can be directly provided in the configuration of the family by setting the \"label\" configuration\nkey. This is not recommended as it will not allow you to translate the attribute in multiple languages.\n\nThe translation system will look for this keys in order to translate a family:\n\n````yml\neav:\n    family:\n        <family_code>:\n            label: <label>\n````\n\n### Translating Attributes\n\nThe label of an attribute can be directly provided in the configuration of the attribute by setting the \"label\"\nconfiguration key. This is not recommended as it will not allow you to translate the attribute in multiple languages.\n\nThe translation system will first look for this keys in order to translate an attribute:\n\n````yml\neav:\n    family:\n        <family_code>:\n            attribute:\n                <attribute_code>:\n                    label: <label>\n````\n\nHowever, if your attribute exists in multiple families and has the same label, you can use this syntax instead:\n\n````yml\neav:\n    attribute:\n        <attribute_code>:\n            label: <label>\n````\n\n### Translating error messages\n\nThe following keys will be tested:\n\n````yml\neav:\n    family:\n        <family_code>:\n            attribute:\n                <attribute_code>:\n                    validation:\n                        <type>: <error_msg>\neav:\n    attribute:\n        <attribute_code>:\n            validation:\n                <type>: <error_msg>\neav:\n    validation:\n        <type>: <error_msg>\n````\n\nThe following translations parameters will be available:\n- ````%attribute%````: The translated label of the attribute.\n- ````%family%````: The translated label of the family.\n", "meta": {"content_hash": "f8a0e815459eb9d1844470c45af1fd57", "timestamp": "", "source": "github", "line_count": 71, "max_line_length": 118, "avg_line_length": 27.690140845070424, "alnum_prop": 0.6495422177009156, "repo_name": "VincentChalnot/SidusEAVModelBundle", "id": "ca512ca1b4e7c65e4b2965c9ea74f21843dfcb63", "size": "1997", "binary": false, "copies": "1", "ref": "refs/heads/v1.2-dev", "path": "Documentation/08-translate.md", "mode": "33188", "license": "mit", "language": [{"name": "HTML", "bytes": "14277"}, {"name": "PHP", "bytes": "371627"}]}}
{"text": "<html>\n<body>\n<xml:namespace ns=\"urn:schemas-microsoft-com:vml\" prefix=\"v\" />\n<!-- Include the VML behavior -->\n<style>v\\: * { behavior:url(#default#VML); display:inline-block }</style>\n<!--p-->\n<v:shape id=\"rect01\" style=\"HEIGHT:50px; LEFT:1px; TOP:1px; WIDTH:50px\"\n         coordsize = \"200,200\" fillcolor = \"green\" strokecolor = \"green\"\n         path = \"m1,1l1,200,200,200,200,1xe\"/>\n<!--/p-->\n<script language=\"JavaScript\" type=\"text/javascript\">\n<!--\n\n//document.getElementById(\"rect01\").onmouseover = Change;\n\n  function Change() {\n    rect01.fillColor = (rect01.fillColor == \"red\") ? \"green\" :\n                       (rect01.fillColor == \"green\") ? \"blue\" : \"red\";\n  }\n-->\n</script>\n</body>\n</html>\n\n\n", "meta": {"content_hash": "441a77285ee46cfe558d617a3a512135", "timestamp": "", "source": "github", "line_count": 25, "max_line_length": 73, "avg_line_length": 28.32, "alnum_prop": 0.6031073446327684, "repo_name": "doubleblacktech/learn-plumb", "id": "110cc3191991610eecc4e02c1f52bbf5f0a6e9f5", "size": "708", "binary": false, "copies": "18", "ref": "refs/heads/master", "path": "tests/miscellaneous/ie6-vml-mouseover.html", "mode": "33261", "license": "mit", "language": [{"name": "JavaScript", "bytes": "65950687"}]}}
{"text": "\npackage org.vaadin.spring.i18n;\n\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.InputStreamReader;\nimport java.io.Reader;\nimport java.io.UnsupportedEncodingException;\nimport java.text.MessageFormat;\nimport java.util.Locale;\nimport java.util.MissingResourceException;\nimport java.util.PropertyResourceBundle;\nimport java.util.ResourceBundle;\n\n/**\n * Implementation of {@link org.vaadin.spring.i18n.MessageProvider} that reads messages\n * from {@link java.util.ResourceBundle}s with a specific base name.\n *\n * @author Petter Holmstr\u00f6m (petter@vaadin.com)\n */\npublic class ResourceBundleMessageProvider implements MessageProvider {\n\n    private static final Logger LOGGER = LoggerFactory.getLogger(ResourceBundleMessageProvider.class);\n\n    private final String baseName;\n    private final String encoding;\n\n    /**\n     * Creates a new {@code ResourceBundleMessageProvider} with the given base name and UTF-8 encoding.\n     *\n     * @param baseName the base name to use, must not be {@code null}.\n     */\n    public ResourceBundleMessageProvider(String baseName) {\n        this(baseName, \"UTF-8\");\n    }\n\n    /**\n     * Creates a new {@code ResourceBundleMessageProvider} with the given base name and encoding.\n     *\n     * @param baseName the base name to use, must not be {@code null}.\n     * @param encoding the encoding to use when reading the resource bundle, must not be {@code null}.\n     */\n    public ResourceBundleMessageProvider(String baseName, String encoding) {\n        this.baseName = baseName;\n        this.encoding = encoding;\n    }\n\n    @Override\n    public MessageFormat resolveCode(String s, Locale locale) {\n        final ResourceBundle resourceBundle = getResourceBundle(locale);\n        final String message = getString(resourceBundle, s);\n        return getMessageFormat(message, locale);\n    }\n\n    private ResourceBundle getResourceBundle(Locale locale) {\n        try {\n            return ResourceBundle.getBundle(baseName, locale, new MessageControl());\n        } catch (MissingResourceException ex) {\n            LOGGER.warn(\"No message bundle with basename [{}] found for locale [{}]\", baseName, locale);\n            return null;\n        }\n    }\n\n    private String getString(ResourceBundle bundle, String s) {\n        if (bundle == null) {\n            return null;\n        }\n        try {\n            return bundle.getString(s);\n        } catch (MissingResourceException ex) {\n            return null;\n        }\n    }\n\n    private MessageFormat getMessageFormat(String message, Locale locale) {\n        if (message == null) {\n            return null;\n        }\n        return new MessageFormat(message, locale);\n    }\n\n    private class MessageControl extends ResourceBundle.Control {\n        @Override\n        public ResourceBundle newBundle(String baseName, Locale locale, String format, ClassLoader loader, boolean reload) throws IllegalAccessException, InstantiationException, IOException {\n            if (\"java.properties\".equals(format)) {\n                final String resourceName = toResourceName(toBundleName(baseName, locale), \"properties\");\n                final InputStream stream = loader.getResourceAsStream(resourceName);\n                if (stream == null) {\n                \treturn null; // Not found\n                }\n                Reader reader = null;\n                try {\n                \treader = new InputStreamReader(stream, encoding);\n                \treturn new PropertyResourceBundle(reader);\n                } catch (UnsupportedEncodingException ex) {\n                \tstream.close();\n                \tthrow ex;\n                } finally {\n                \tif (reader != null) {\n                \t\treader.close();\n                \t}\n                }\n            } else {\n                return super.newBundle(baseName, locale, format, loader, reload);\n            }\n        }\n    }\n}\n", "meta": {"content_hash": "02b7a0c49ffcee61d1c511f616cd85bd", "timestamp": "", "source": "github", "line_count": 111, "max_line_length": 191, "avg_line_length": 35.4054054054054, "alnum_prop": 0.6399491094147582, "repo_name": "GJRTimmer/vaadin4spring", "id": "4ecee6be5a613a67d1526d5bbe902c27d847beca", "size": "4532", "binary": false, "copies": "4", "ref": "refs/heads/master", "path": "addons/i18n/src/main/java/org/vaadin/spring/i18n/ResourceBundleMessageProvider.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "CSS", "bytes": "665"}, {"name": "Java", "bytes": "353774"}]}}
{"text": "\r\n#include \"../Precompiled.h\"\r\n\r\n#include \"../Math/MathDefs.h\"\r\n#include \"../Math/StringHash.h\"\r\n\r\n#include <cstdio>\r\n\r\n#include \"../DebugNew.h\"\r\n\r\nnamespace Urho3D\r\n{\r\n\r\nconst StringHash StringHash::ZERO;\r\n\r\nStringHash::StringHash(const char* str) noexcept :\r\n    value_(Calculate(str))\r\n{\r\n}\r\n\r\nStringHash::StringHash(const String& str) noexcept :\r\n    value_(Calculate(str.CString()))\r\n{\r\n}\r\n\r\nunsigned StringHash::Calculate(const char* str, unsigned hash)\r\n{\r\n    if (!str)\r\n        return hash;\r\n\r\n    while (*str)\r\n    {\r\n        // Perform the actual hashing as case-insensitive\r\n        char c = *str;\r\n        hash = SDBMHash(hash, (unsigned char)tolower(c));\r\n        ++str;\r\n    }\r\n\r\n    return hash;\r\n}\r\n\r\nString StringHash::ToString() const\r\n{\r\n    char tempBuffer[CONVERSION_BUFFER_LENGTH];\r\n    sprintf(tempBuffer, \"%08X\", value_);\r\n    return String(tempBuffer);\r\n}\r\n\r\n}\r\n", "meta": {"content_hash": "0fcd3d919b139550937694076bcb75e2", "timestamp": "", "source": "github", "line_count": 49, "max_line_length": 62, "avg_line_length": 18.122448979591837, "alnum_prop": 0.6081081081081081, "repo_name": "victorholt/Urho3D", "id": "7a30f2e214ef14ac1b11dffc3f48ea0c807b8192", "size": "2037", "binary": false, "copies": "6", "ref": "refs/heads/master", "path": "Source/Urho3D/Math/StringHash.cpp", "mode": "33188", "license": "mit", "language": [{"name": "AngelScript", "bytes": "1435828"}, {"name": "Batchfile", "bytes": "16483"}, {"name": "C++", "bytes": "8325877"}, {"name": "CMake", "bytes": "446542"}, {"name": "GLSL", "bytes": "154112"}, {"name": "HLSL", "bytes": "178063"}, {"name": "HTML", "bytes": "1375"}, {"name": "Java", "bytes": "78624"}, {"name": "Lua", "bytes": "568614"}, {"name": "MAXScript", "bytes": "94704"}, {"name": "Objective-C", "bytes": "6539"}, {"name": "Ruby", "bytes": "65069"}, {"name": "Shell", "bytes": "27373"}]}}
{"text": "//\t\tThis file was generated  by St4mpede.Poco 2016-06-08 22:18:52\n\n\n/* \t\t\t\nReading xml C:\\DATA\\PROJEKT\\St4mpede\\St4mpede\\St4mpede\\RdbSchema\\St4mpede.RdbSchema.xml.\nRead database with tables: Customer, Project, User.\nIncluded classes are:\nName=Customer\nName=Project\nName=User\nWriting the output file C:\\DATA\\PROJEKT\\St4mpede\\St4mpede\\St4mpede\\Poco\\PocoGenerator.xml.\nWriting 3 classes in C:\\DATA\\PROJEKT\\St4mpede\\St4mpede\\St4mpede\\..\\..\\TheDAL\\Poco.\n*/\n\n//\n//\n//\n//\n//\n//\n//\n//\n", "meta": {"content_hash": "928c42c20fba38c6343e5ad8317a1a9f", "timestamp": "", "source": "github", "line_count": 22, "max_line_length": 90, "avg_line_length": 21.727272727272727, "alnum_prop": 0.7364016736401674, "repo_name": "LosManos/St4mpede", "id": "d431056b37b6b1b0534e5cbceb4481788390d7fb", "size": "480", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "St4mpede/St4mpede/St4mpede.Poco.cs", "mode": "33188", "license": "apache-2.0", "language": [{"name": "C#", "bytes": "111411"}]}}
{"text": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <title>classical-realizability: Not compatible</title>\n    <link rel=\"shortcut icon\" type=\"image/png\" href=\"../../../../../favicon.png\" />\n    <link href=\"../../../../../bootstrap.min.css\" rel=\"stylesheet\">\n    <link href=\"../../../../../bootstrap-custom.css\" rel=\"stylesheet\">\n    <link href=\"//maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css\" rel=\"stylesheet\">\n    <script src=\"../../../../../moment.min.js\"></script>\n    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->\n    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->\n    <!--[if lt IE 9]>\n      <script src=\"https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js\"></script>\n      <script src=\"https://oss.maxcdn.com/respond/1.4.2/respond.min.js\"></script>\n    <![endif]-->\n  </head>\n  <body>\n    <div class=\"container\">\n      <div class=\"navbar navbar-default\" role=\"navigation\">\n        <div class=\"container-fluid\">\n          <div class=\"navbar-header\">\n            <a class=\"navbar-brand\" href=\"../../../../..\"><i class=\"fa fa-lg fa-flag-checkered\"></i> Coq bench</a>\n          </div>\n          <div id=\"navbar\" class=\"collapse navbar-collapse\">\n            <ul class=\"nav navbar-nav\">\n              <li><a href=\"../..\">clean / released</a></li>\n              <li class=\"active\"><a href=\"\">8.5.1 / classical-realizability - 8.7.0</a></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div class=\"article\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <a href=\"../..\">\u00ab Up</a>\n            <h1>\n              classical-realizability\n              <small>\n                8.7.0\n                <span class=\"label label-info\">Not compatible</span>\n              </small>\n            </h1>\n            <p><em><script>document.write(moment(\"2020-07-19 14:21:56 +0000\", \"YYYY-MM-DD HH:mm:ss Z\").fromNow());</script> (2020-07-19 14:21:56 UTC)</em><p>\n            <h2>Context</h2>\n            <pre># Packages matching: installed\n# Name              # Installed # Synopsis\nbase-bigarray       base\nbase-num            base        Num library distributed with the OCaml compiler\nbase-threads        base\nbase-unix           base\ncamlp5              7.12        Preprocessor-pretty-printer of OCaml\nconf-findutils      1           Virtual package relying on findutils\ncoq                 8.5.1       Formal proof management system.\nnum                 0           The Num library for arbitrary-precision integer and rational arithmetic\nocaml               4.05.0      The OCaml compiler (virtual package)\nocaml-base-compiler 4.05.0      Official 4.05.0 release\nocaml-config        1           OCaml Switch Configuration\n# opam file:\nopam-version: &quot;2.0&quot;\nmaintainer: &quot;Hugo.Herbelin@inria.fr&quot;\nhomepage: &quot;https://github.com/coq-contribs/classical-realizability&quot;\nlicense: &quot;BSD&quot;\nbuild: [make &quot;-j%{jobs}%&quot;]\ninstall: [make &quot;install&quot;]\nremove: [&quot;rm&quot; &quot;-R&quot; &quot;%{lib}%/coq/user-contrib/ClassicalRealizability&quot;]\ndepends: [\n  &quot;ocaml&quot;\n  &quot;coq&quot; {&gt;= &quot;8.7&quot; &amp; &lt; &quot;8.8~&quot;}\n]\ntags: [ &quot;keyword: classical realizability&quot; &quot;keyword: Krivine&#39;s realizability&quot; &quot;keyword: primitive datatype&quot; &quot;keyword: non determinism&quot; &quot;keyword: quote&quot; &quot;keyword: axiom of countable choice&quot; &quot;keyword: real numbers&quot; &quot;category: Mathematics/Logic/Foundations&quot; ]\nauthors: [ &quot;Lionel Rieg &lt;lionel.rieg@ens-lyon.org&gt;&quot; ]\nbug-reports: &quot;https://github.com/coq-contribs/classical-realizability/issues&quot;\ndev-repo: &quot;git+https://github.com/coq-contribs/classical-realizability.git&quot;\nsynopsis: &quot;Krivine&#39;s classical realizability&quot;\ndescription: &quot;&quot;&quot;\nThe aim of this Coq library is to provide a framework for checking\nproofs in Krivine&#39;s classical realizability for second-order Peano arithmetic.\nIt is designed to be as extensible as the original theory by Krivine and to\nsupport on-the-fly extensions by new instructions with their evaluation\nrules.&quot;&quot;&quot;\nflags: light-uninstall\nurl {\n  src:\n    &quot;https://github.com/coq-contribs/classical-realizability/archive/v8.7.0.tar.gz&quot;\n  checksum: &quot;md5=6299c2ee7d52c1535eece3376983263c&quot;\n}\n</pre>\n            <h2>Lint</h2>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>true</code></dd>\n              <dt>Return code</dt>\n              <dd>0</dd>\n            </dl>\n            <h2>Dry install</h2>\n            <p>Dry install with the current Coq version:</p>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>opam install -y --show-action coq-classical-realizability.8.7.0 coq.8.5.1</code></dd>\n              <dt>Return code</dt>\n              <dd>5120</dd>\n              <dt>Output</dt>\n              <dd><pre>[NOTE] Package coq is already installed (current version is 8.5.1).\nThe following dependencies couldn&#39;t be met:\n  - coq-classical-realizability -&gt; coq &gt;= 8.7\nYour request can&#39;t be satisfied:\n  - No available version of coq satisfies the constraints\nNo solution found, exiting\n</pre></dd>\n            </dl>\n            <p>Dry install without Coq/switch base, to test if the problem was incompatibility with the current Coq/OCaml version:</p>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>opam remove -y coq; opam install -y --show-action --unlock-base coq-classical-realizability.8.7.0</code></dd>\n              <dt>Return code</dt>\n              <dd>0</dd>\n            </dl>\n            <h2>Install dependencies</h2>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>true</code></dd>\n              <dt>Return code</dt>\n              <dd>0</dd>\n              <dt>Duration</dt>\n              <dd>0 s</dd>\n            </dl>\n            <h2>Install</h2>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>true</code></dd>\n              <dt>Return code</dt>\n              <dd>0</dd>\n              <dt>Duration</dt>\n              <dd>0 s</dd>\n            </dl>\n            <h2>Installation size</h2>\n            <p>No files were installed.</p>\n            <h2>Uninstall</h2>\n            <dl class=\"dl-horizontal\">\n              <dt>Command</dt>\n              <dd><code>true</code></dd>\n              <dt>Return code</dt>\n              <dd>0</dd>\n              <dt>Missing removes</dt>\n              <dd>\n                none\n              </dd>\n              <dt>Wrong removes</dt>\n              <dd>\n                none\n              </dd>\n            </dl>\n          </div>\n        </div>\n      </div>\n      <hr/>\n      <div class=\"footer\">\n        <p class=\"text-center\">\n          <small>Sources are on <a href=\"https://github.com/coq-bench\">GitHub</a>. \u00a9 Guillaume Claret.</small>\n        </p>\n      </div>\n    </div>\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js\"></script>\n    <script src=\"../../../../../bootstrap.min.js\"></script>\n  </body>\n</html>\n", "meta": {"content_hash": "6953417c96203c08c70ca885216d50c6", "timestamp": "", "source": "github", "line_count": 168, "max_line_length": 340, "avg_line_length": 43.81547619047619, "alnum_prop": 0.5651406058959381, "repo_name": "coq-bench/coq-bench.github.io", "id": "7a2fb7424f897c58b824ccbe499d4bd7f93f33f2", "size": "7363", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "clean/Linux-x86_64-4.05.0-2.0.6/released/8.5.1/classical-realizability/8.7.0.html", "mode": "33188", "license": "mit", "language": []}}
{"text": "import React from 'react'\nimport '!style!css!react-loading-bar/dist/index.css'\nexport default function Loading() {\n  return (\n    <div>\n      <span className=\"fa fa-cog fa-spin fa-3x fa-fw\" />\n      <span className=\"sr-only\" aria-hidden=\"true\">Loading...</span>\n    </div>\n  )\n}\n", "meta": {"content_hash": "79f42d9ca7021bd62d432c1472260f62", "timestamp": "", "source": "github", "line_count": 10, "max_line_length": 68, "avg_line_length": 27.9, "alnum_prop": 0.6415770609318996, "repo_name": "moimikey/react-boilerplate", "id": "0c6503845d209715b51d2b93dbf7650d78360700", "size": "279", "binary": false, "copies": "1", "ref": "refs/heads/redux", "path": "src/app/components/Loading.js", "mode": "33188", "license": "mit", "language": [{"name": "CSS", "bytes": "4797"}, {"name": "HTML", "bytes": "3946"}, {"name": "JavaScript", "bytes": "29033"}]}}
{"text": "from __future__ import unicode_literals\nfrom django.conf import settings\nfrom django.contrib.contenttypes import generic\nfrom django.contrib.contenttypes.models import ContentType\nfrom django.db import models\nfrom django.dispatch.dispatcher import receiver\nfrom model_utils.models import TimeStampedModel\nfrom registration.signals import user_registered\n\n_all = [\"Asset\", \"Profile\", \"user_registered_callback\"]\n__author__ = \"pmeier82\"\n\n\n# PROFILE\n\nclass Profile(models.Model):\n    \"\"\"user profile model\"\"\"\n\n    class Meta:\n        app_label = \"base\"\n\n    user = models.OneToOneField(\n        settings.AUTH_USER_MODEL,\n        unique=True)\n    title = models.CharField(\n        max_length=255,\n        default=\"\",\n    )\n    affiliation = models.CharField(\n        max_length=255,\n        default=\"\",\n    )\n    research_area = models.TextField(\n        default=\"\"\n    )\n    # TODO: build a meaningful profile\n\n    # special\n    def __str__(self):\n        return self.user.username\n\n    def __unicode__(self):\n        return unicode(self.__str__())\n\n\ndef user_registered_callback(user, request, **kwargs):\n    profile, is_new = Profile.objects.get_or_create(user=user)\n    profile.title = request.POST.get(\"title\", \"test\")\n    profile.save()\n\n\nuser_registered.connect(user_registered_callback)\n\n# ASSET\n\ndef UPLOAD_TO_HANDLER(obj, fname):\n    folder = getattr(obj, \"kind\", \"default\")\n    return \"{}/{}\".format(folder, fname)\n\n\nclass Asset(TimeStampedModel):\n    \"\"\"generic file asset model\"\"\"\n\n    class Meta:\n        app_label = \"base\"\n\n    UPLOAD_TO = \"default\"\n\n    # fields\n    name = models.CharField(max_length=255, unique=False)\n    data_orig_name = models.CharField(max_length=255, unique=False)\n    data = models.FileField(upload_to=UPLOAD_TO_HANDLER)\n    kind = models.CharField(max_length=255, unique=False, null=False, default=UPLOAD_TO)\n\n    # generic foreign key\n    content_type = models.ForeignKey(ContentType, null=True)\n    object_id = models.PositiveIntegerField(null=True)\n    content_object = generic.GenericForeignKey()\n\n    # special methods\n    def __unicode__(self):\n        return unicode(\"{}: {}\".format(self.__class__.__name__, self.name))\n\n    # django special methods\n    @models.permalink\n    def get_absolute_url(self):\n        return \"asset:serve\", (self.pk,), {}\n\n    @models.permalink\n    def get_delete_url(self):\n        return \"asset:delete\", (self.pk,), {}\n\n    # interface\n    def save(self, *args, **kwargs):\n        super(Asset, self).save(*args, **kwargs)\n\n    def delete(self, *args, **kwargs):\n        super(Asset, self).delete(*args, **kwargs)\n\n\n@receiver(models.signals.pre_delete, sender=Asset)\ndef asset_file_delete(sender, instance, **kwargs):\n    instance.data.delete()\n\n\nif __name__ == \"__main__\":\n    pass\n", "meta": {"content_hash": "85f7dee85ba6de3d5a267ea68a913604", "timestamp": "", "source": "github", "line_count": 107, "max_line_length": 88, "avg_line_length": 25.757009345794394, "alnum_prop": 0.6556603773584906, "repo_name": "pmeier82/spike_gnode", "id": "2411abbf4b4c2c62fd144aaa9261d587c405219b", "size": "2781", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "base/models.py", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "CSS", "bytes": "11360"}, {"name": "HTML", "bytes": "56070"}, {"name": "JavaScript", "bytes": "734"}, {"name": "Nginx", "bytes": "4758"}, {"name": "Python", "bytes": "37001"}, {"name": "Shell", "bytes": "2475"}]}}
{"text": "\npackage org.eclipse.lsp4j;\n\nimport java.util.List;\nimport org.eclipse.lsp4j.Position;\nimport org.eclipse.lsp4j.TextDocumentIdentifier;\nimport org.eclipse.lsp4j.WorkDoneProgressAndPartialResultParams;\nimport org.eclipse.lsp4j.jsonrpc.validation.NonNull;\nimport org.eclipse.lsp4j.util.Preconditions;\nimport org.eclipse.xtext.xbase.lib.Pure;\nimport org.eclipse.xtext.xbase.lib.util.ToStringBuilder;\n\n/**\n * A parameter literal used in selection range requests.\n * <p>\n * Since 3.15.0\n */\n@SuppressWarnings(\"all\")\npublic class SelectionRangeParams extends WorkDoneProgressAndPartialResultParams {\n  /**\n   * The text document.\n   */\n  @NonNull\n  private TextDocumentIdentifier textDocument;\n  \n  /**\n   * The positions inside the text document.\n   */\n  @NonNull\n  private List<Position> positions;\n  \n  public SelectionRangeParams() {\n  }\n  \n  public SelectionRangeParams(@NonNull final TextDocumentIdentifier textDocument, @NonNull final List<Position> positions) {\n    this.textDocument = Preconditions.<TextDocumentIdentifier>checkNotNull(textDocument, \"textDocument\");\n    this.positions = Preconditions.<List<Position>>checkNotNull(positions, \"positions\");\n  }\n  \n  /**\n   * The text document.\n   */\n  @Pure\n  @NonNull\n  public TextDocumentIdentifier getTextDocument() {\n    return this.textDocument;\n  }\n  \n  /**\n   * The text document.\n   */\n  public void setTextDocument(@NonNull final TextDocumentIdentifier textDocument) {\n    this.textDocument = Preconditions.checkNotNull(textDocument, \"textDocument\");\n  }\n  \n  /**\n   * The positions inside the text document.\n   */\n  @Pure\n  @NonNull\n  public List<Position> getPositions() {\n    return this.positions;\n  }\n  \n  /**\n   * The positions inside the text document.\n   */\n  public void setPositions(@NonNull final List<Position> positions) {\n    this.positions = Preconditions.checkNotNull(positions, \"positions\");\n  }\n  \n  @Override\n  @Pure\n  public String toString() {\n    ToStringBuilder b = new ToStringBuilder(this);\n    b.add(\"textDocument\", this.textDocument);\n    b.add(\"positions\", this.positions);\n    b.add(\"workDoneToken\", getWorkDoneToken());\n    b.add(\"partialResultToken\", getPartialResultToken());\n    return b.toString();\n  }\n  \n  @Override\n  @Pure\n  public boolean equals(final Object obj) {\n    if (this == obj)\n      return true;\n    if (obj == null)\n      return false;\n    if (getClass() != obj.getClass())\n      return false;\n    if (!super.equals(obj))\n      return false;\n    SelectionRangeParams other = (SelectionRangeParams) obj;\n    if (this.textDocument == null) {\n      if (other.textDocument != null)\n        return false;\n    } else if (!this.textDocument.equals(other.textDocument))\n      return false;\n    if (this.positions == null) {\n      if (other.positions != null)\n        return false;\n    } else if (!this.positions.equals(other.positions))\n      return false;\n    return true;\n  }\n  \n  @Override\n  @Pure\n  public int hashCode() {\n    final int prime = 31;\n    int result = super.hashCode();\n    result = prime * result + ((this.textDocument== null) ? 0 : this.textDocument.hashCode());\n    return prime * result + ((this.positions== null) ? 0 : this.positions.hashCode());\n  }\n}\n", "meta": {"content_hash": "1fc19c21c3959ccaf37336d3bc383346", "timestamp": "", "source": "github", "line_count": 116, "max_line_length": 124, "avg_line_length": 27.396551724137932, "alnum_prop": 0.6913152926368785, "repo_name": "smarr/SOMns-vscode", "id": "ca95621514251184457f1372dec09436068539dd", "size": "3598", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "server/org.eclipse.lsp4j-gen/org/eclipse/lsp4j/SelectionRangeParams.java", "mode": "33188", "license": "mit", "language": [{"name": "ANTLR", "bytes": "12820"}, {"name": "Java", "bytes": "1782848"}, {"name": "Shell", "bytes": "182"}, {"name": "Slash", "bytes": "241"}, {"name": "TypeScript", "bytes": "26804"}, {"name": "Vim Script", "bytes": "3730"}, {"name": "Xtend", "bytes": "197426"}]}}
{"text": "package com.github.mortido.extra.behavioral.nullObject;\n\npublic class NullUser extends User {\n    @Override\n    public String getName() {\n        return \"User doesn't exist\";\n    }\n\n    @Override\n    public int getId() {\n        return -1;\n    }\n}\n", "meta": {"content_hash": "13680e8fb0ec1fd4f5088b9f8c0ac55a", "timestamp": "", "source": "github", "line_count": 13, "max_line_length": 55, "avg_line_length": 19.076923076923077, "alnum_prop": 0.625, "repo_name": "mortido/DesignPatterns-Java", "id": "56cf92ed5e528869f70fcc4d8bd985ba8f3b2836", "size": "248", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "src/com/github/mortido/extra/behavioral/nullObject/NullUser.java", "mode": "33188", "license": "mit", "language": [{"name": "Java", "bytes": "72591"}]}}
{"text": "import { Arr, Optional } from '@ephox/katamari';\nimport { SugarElement } from '@ephox/sugar';\n\nimport * as Structs from '../api/Structs';\nimport * as GridRow from '../model/GridRow';\nimport { CellElement, CompElm } from '../util/TableTypes';\n\ntype Subst = () => SugarElement<HTMLTableCellElement>;\n\n// substitution: () -> item\nconst merge = (grid: Structs.RowCells[], bounds: Structs.Bounds, comparator: CompElm, substitution: Subst): Structs.RowCells[] => {\n  const rows = GridRow.extractGridDetails(grid).rows;\n  // Mutating. Do we care about the efficiency gain?\n  if (rows.length === 0) {\n    return grid;\n  }\n  for (let i = bounds.startRow; i <= bounds.finishRow; i++) {\n    for (let j = bounds.startCol; j <= bounds.finishCol; j++) {\n      // We can probably simplify this again now that we aren't reusing merge.\n      const row = rows[i];\n      const isLocked = GridRow.getCell(row, j).isLocked;\n      GridRow.mutateCell(row, j, Structs.elementnew(substitution(), false, isLocked));\n    }\n  }\n  return grid;\n};\n\n// substitution: () -> item\nconst unmerge = (grid: Structs.RowCells[], target: SugarElement<HTMLElement>, comparator: CompElm, substitution: Subst): Structs.RowCells[] => {\n  const rows = GridRow.extractGridDetails(grid).rows;\n  // Mutating. Do we care about the efficiency gain?\n  let first = true;\n  // tslint:disable-next-line:prefer-for-of\n  for (let i = 0; i < rows.length; i++) {\n    for (let j = 0; j < GridRow.cellLength(rows[0]); j++) {\n      const row = rows[i];\n      const currentCell = GridRow.getCell(row, j);\n      const currentCellElm = currentCell.element;\n      const isToReplace = comparator(currentCellElm, target);\n\n      if (isToReplace && !first) {\n        GridRow.mutateCell(row, j, Structs.elementnew(substitution(), true, currentCell.isLocked));\n      } else if (isToReplace) {\n        first = false;\n      }\n    }\n  }\n  return grid;\n};\n\nconst uniqueCells = <T extends CellElement>(row: Structs.ElementNew<T>[], comparator: CompElm): Structs.ElementNew<T>[] => {\n  return Arr.foldl(row, (rest, cell) => {\n    return Arr.exists(rest, (currentCell) => {\n      return comparator(currentCell.element, cell.element);\n    }) ? rest : rest.concat([ cell ]);\n  }, [] as Structs.ElementNew<T>[]);\n};\n\nconst splitCols = (grid: Structs.RowCells[], index: number, comparator: CompElm, substitution: Subst): Structs.RowCells[] => {\n  // We don't need to split rows if we're inserting at the first or last row of the old table\n  if (index > 0 && index < grid[0].cells.length) {\n    Arr.each(grid, (row) => {\n      const prevCell = row.cells[index - 1];\n      let offset = 0;\n      const substitute = substitution();\n\n      while (row.cells.length > index + offset && comparator(prevCell.element, row.cells[index + offset].element)) {\n        GridRow.mutateCell(row, index + offset, Structs.elementnew(substitute, true, row.cells[index + offset].isLocked));\n        offset++;\n      }\n    });\n  }\n\n  return grid;\n};\n\nconst splitRows = (grid: Structs.RowCells[], index: number, comparator: CompElm, substitution: Subst): Structs.RowCells[] => {\n  // We don't need to split rows if we're inserting at the first or last row of the old table\n  const rows = GridRow.extractGridDetails(grid).rows;\n  if (index > 0 && index < rows.length) {\n    const rowPrevCells = rows[index - 1].cells;\n    const cells = uniqueCells(rowPrevCells, comparator);\n    Arr.each(cells, (cell) => {\n      // only make a sub when we have to\n      let replacement = Optional.none<SugarElement<HTMLTableCellElement>>();\n      for (let i = index; i < rows.length; i++) {\n        for (let j = 0; j < GridRow.cellLength(rows[0]); j++) {\n          const row = rows[i];\n          const current = GridRow.getCell(row, j);\n          const isToReplace = comparator(current.element, cell.element);\n\n          if (isToReplace) {\n            if (replacement.isNone()) {\n              replacement = Optional.some(substitution());\n            }\n            replacement.each((sub) => {\n              GridRow.mutateCell(row, j, Structs.elementnew(sub, true, current.isLocked));\n            });\n          }\n        }\n      }\n    });\n  }\n\n  return grid;\n};\n\nexport {\n  merge,\n  unmerge,\n  splitCols,\n  splitRows\n};\n", "meta": {"content_hash": "ca65adc511ae0aedbdd6e75bf700d63b", "timestamp": "", "source": "github", "line_count": 113, "max_line_length": 144, "avg_line_length": 37.13274336283186, "alnum_prop": 0.6348903717826502, "repo_name": "tinymce/tinymce", "id": "98e0abc2909ea0a3267c1a8d7d87f92f13e3584d", "size": "4196", "binary": false, "copies": "1", "ref": "refs/heads/develop", "path": "modules/snooker/src/main/ts/ephox/snooker/operate/MergingOperations.ts", "mode": "33188", "license": "mit", "language": [{"name": "CSS", "bytes": "9733"}, {"name": "HTML", "bytes": "183264"}, {"name": "JavaScript", "bytes": "117530"}, {"name": "Less", "bytes": "182379"}, {"name": "TypeScript", "bytes": "11764279"}]}}
{"text": "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<config version=\"1\" xmlns=\"http://skynav.com/ns/ttv\"/>\n", "meta": {"content_hash": "6b3dadea3ba647025bc678e04d6487e0", "timestamp": "", "source": "github", "line_count": 2, "max_line_length": 54, "avg_line_length": 47.0, "alnum_prop": 0.648936170212766, "repo_name": "RBMHTechnology/ttt", "id": "af62bb6ae91ead9584202716b1b01ca7703b5c03", "size": "94", "binary": false, "copies": "4", "ref": "refs/heads/master", "path": "ttt-ttv/src/main/resources/com/skynav/ttv/app/config.xml", "mode": "33188", "license": "bsd-2-clause", "language": [{"name": "CSS", "bytes": "22996"}, {"name": "HTML", "bytes": "2348"}, {"name": "Java", "bytes": "2833329"}, {"name": "Shell", "bytes": "2808"}, {"name": "XSLT", "bytes": "5232"}]}}
{"text": "from __future__ import print_function\nfrom __future__ import unicode_literals\nfrom __future__ import division\n\nimport json\n\nfrom django.conf import settings\nfrom django.contrib.gis.geos import Polygon\nfrom django.core.urlresolvers import reverse\nfrom django.db import transaction\nfrom django.db.models import Q\nfrom django.http import HttpResponseRedirect, HttpResponseForbidden, Http404\nfrom django.shortcuts import get_object_or_404\nfrom django.utils.timezone import now\n\nfrom libs.data import merge\nfrom libs.formatters import humanize_bytes\nfrom libs.pdf_maps import create_event_map_pdf\nfrom libs.sql import get_group_tree_count\n\nfrom apps.core.helpers import (user_is_group_admin,\n                               user_is_eligible_to_become_trusted_mapper)\nfrom apps.core.decorators import group_request\nfrom apps.core.models import Group\n\nfrom apps.mail.views import notify_group_mapping_approved\n\nfrom apps.users.models import Follow, TrustedMapper\nfrom apps.users.forms import GroupSettingsForm\n\nfrom apps.survey.models import Territory, Survey, Blockface\nfrom apps.survey.layer_context import (get_context_for_territory_layer,\n                                       get_context_for_territory_admin_layer)\n\nfrom apps.event.models import Event, EventRegistration\nfrom apps.event.event_list import EventList\n\nGROUP_EVENTS_ID = 'group-events'\nGROUP_EDIT_EVENTS_TAB_ID = 'events'\n\n\ndef group_list_page(request):\n    # TODO: pagination\n    groups = Group.objects.filter(is_active=True).order_by('name')\n    group_ids = Follow.objects.filter(user_id=request.user.id) \\\n        .values_list('group_id', flat=True)\n    user_is_following = [group.id in group_ids for group in groups]\n\n    group_infos = zip(groups, user_is_following)\n    return {\n        'groups': group_infos,\n        'groups_count': len(group_infos),\n    }\n\n\n@group_request\ndef _group_events(request):\n    qs = Event.objects.filter(group=request.group, is_private=False)\n    user_can_edit_group = user_is_group_admin(request.user,\n                                              request.group)\n    extra_context = {'user_can_edit_group': user_can_edit_group,\n                     'group_slug': request.group.slug}\n    return qs, extra_context\n\n\ngroup_detail_events = EventList(\n    _group_events,\n    name=\"group_detail_events\",\n    template_path='groups/partials/detail_event_list.html')\n\n\ngroup_edit_events = EventList(\n    _group_events,\n    name=\"group_edit_events\",\n    template_path='groups/partials/edit_event_list.html')\n\n\ndef group_detail(request):\n    user = request.user\n    group = request.group\n\n    if not user_is_group_admin(user, group) and not request.group.is_active:\n        raise Http404('Must be a group admin to view an inactive group')\n\n    event_list = (group_detail_events\n                  .configure(chunk_size=2,\n                             active_filter=EventList.Filters.CURRENT,\n                             filterset_name=EventList.chronoFilters)\n                  .as_context(request, group_slug=group.slug))\n    user_is_following = Follow.objects.filter(user_id=request.user.id,\n                                              group=group).exists()\n\n    show_mapper_request = user_is_eligible_to_become_trusted_mapper(user,\n                                                                    group)\n\n    follow_count = Follow.objects.filter(group=group).count()\n    tree_count = get_group_tree_count(group)\n\n    group_blocks = Territory.objects \\\n        .filter(group=group) \\\n        .values_list('blockface_id', flat=True)\n\n    group_blocks_count = group_blocks.count()\n\n    if group_blocks_count > 0:\n        completed_blocks = Survey.objects \\\n            .filter(blockface_id__in=group_blocks) \\\n            .distinct('blockface')\n        block_percent = \"{:.1%}\".format(\n            float(completed_blocks.count()) / float(group_blocks.count()))\n    else:\n        block_percent = \"0.0%\"\n\n    events_held = Event.objects.filter(group=group, ends_at__lt=now())\n    num_events_held = events_held.count()\n\n    num_event_attendees = EventRegistration.objects \\\n        .filter(event__in=events_held) \\\n        .filter(did_attend=True) \\\n        .count()\n\n    return {\n        'group': group,\n        'event_list': event_list,\n        'user_is_following': user_is_following,\n        'edit_url': reverse('group_edit', kwargs={'group_slug': group.slug}),\n        'show_mapper_request': show_mapper_request,\n        'counts': {\n            'tree': tree_count,\n            'block': block_percent,\n            'event': num_events_held,\n            'attendees': num_event_attendees,\n            'follows': follow_count\n        },\n        'group_events_id': GROUP_EVENTS_ID,\n        'layer': get_context_for_territory_layer(request, request.group.id),\n        'territory_bounds': _group_territory_bounds(request.group),\n        'render_follow_button_without_count': request.POST.get(\n            'render_follow_button_without_count', False)\n    }\n\n\ndef redirect_to_group_detail(request):\n    return HttpResponseRedirect(\n        reverse('group_detail', kwargs={\n            'group_slug': request.group.slug\n        }))\n\n\ndef _group_territory_bounds(group):\n    blockfaces = Blockface.objects \\\n        .filter(territory__group=group) \\\n        .collect()\n\n    if blockfaces:\n        return list(blockfaces.extent)\n    else:\n        return None\n\n\ndef edit_group(request, form=None):\n    group = request.group\n    if not form:\n        form = GroupSettingsForm(instance=request.group, label_suffix='')\n    event_list = (group_edit_events\n                  .configure(chunk_size=2,\n                             active_filter=EventList.Filters.CURRENT,\n                             filterset_name=EventList.chronoFilters)\n                  .as_context(request, group_slug=group.slug))\n    pending_mappers = TrustedMapper.objects.filter(group=request.group,\n                                                   is_approved__isnull=True)\n    all_mappers = TrustedMapper.objects.filter(group=request.group,\n                                               is_approved__isnull=False)\n    return {\n        'group': group,\n        'event_list': event_list,\n        'form': form,\n        'group_slug': group.slug,\n        'max_image_size': humanize_bytes(\n            settings.MAX_GROUP_IMAGE_SIZE_IN_BYTES, 0),\n        'pending_mappers': pending_mappers,\n        'all_mappers': all_mappers,\n        'group_edit_events_tab_id': GROUP_EDIT_EVENTS_TAB_ID,\n    }\n\n\ndef update_group_settings(request):\n    form = GroupSettingsForm(request.POST, request.FILES,\n                             instance=request.group)\n    if form.is_valid():\n        form.save()\n        return HttpResponseRedirect(request.group.get_absolute_url())\n    else:\n        return edit_group(request, form=form)\n\n\ndef follow_group(request):\n    Follow.objects.get_or_create(user_id=request.user.id, group=request.group)\n    return group_detail(request)\n\n\ndef unfollow_group(request):\n    Follow.objects.filter(user_id=request.user.id, group=request.group) \\\n        .delete()\n    return group_detail(request)\n\n\ndef start_group_map_print_job(request):\n    # TODO: implement\n    pass\n\n\ndef give_user_mapping_priveleges(request, username):\n    mapper_context = _grant_mapping_access(request.group, username,\n                                           is_approved=True)\n    mail_context = notify_group_mapping_approved(request, request.group,\n                                                 username)\n    return merge(mapper_context, mail_context)\n\n\ndef remove_user_mapping_priveleges(request, username):\n    return _grant_mapping_access(request.group, username, is_approved=False)\n\n\ndef _grant_mapping_access(group, username, is_approved):\n    mapper, created = TrustedMapper.objects.update_or_create(\n        group=group,\n        user__username=username,\n        defaults={'is_approved': is_approved})\n    return {\n        'mapper': mapper\n    }\n\n\ndef request_mapper_status(request):\n    user, group = request.user, request.group\n    if not user_is_eligible_to_become_trusted_mapper(user, group):\n        return HttpResponseForbidden()\n    mapper, created = TrustedMapper.objects.update_or_create(\n        group=group, user=user)\n    return {\n        'success': True\n    }\n\n\ndef group_unmapped_territory_geojson(request, group_id):\n    # Get unmapped blockfaces\n    blockfaces = Blockface.objects.filter(is_available=True)\n\n    my_territory_q = Q(territory__group_id=group_id)\n\n    if request.body:\n        # Get potentially selectable blockfaces in polygon\n        # (those in my territory or unclaimed)\n        point_list = json.loads(request.body)\n        point_list.append(point_list[0])  # Close the polygon\n        polygon = Polygon((point_list))\n\n        no_reservations_q = \\\n            Q(blockfacereservation__isnull=True) \\\n            | Q(blockfacereservation__canceled_at__isnull=False) \\\n            | Q(blockfacereservation__expires_at__lt=now())\n        nobodys_territory_q = Q(territory__group_id=None)\n        unclaimed_q = no_reservations_q & nobodys_territory_q\n\n        blockfaces = blockfaces \\\n            .filter(geom__within=polygon) \\\n            .filter(my_territory_q | unclaimed_q) \\\n            .distinct()\n\n        # Return just blockface data\n        # (skipping expensive queries to make tiler URLs)\n        return _make_blockface_data_result(blockfaces)\n\n    else:\n        # Get all blockfaces in group's territory\n        blockfaces = blockfaces.filter(my_territory_q)\n        return _make_blockface_and_tiler_urls_result(\n            request, blockfaces, group_id)\n\n\ndef group_update_territory(request, group_id):\n    group = get_object_or_404(Group, id=group_id)\n\n    _update_territory(group, request)\n\n    # Recreate PDF maps to show updated group territory\n    _update_event_maps(request, group)\n\n    result_blockfaces = Blockface.objects.filter(territory__group=group)\n    return _make_blockface_and_tiler_urls_result(\n        request, result_blockfaces, group_id)\n\n\n@transaction.atomic\ndef _update_territory(group, request):\n    new_block_ids = set([int(id) for id in json.loads(request.body)])\n    old_block_ids = set(Territory.objects\n                        .filter(group=group)\n                        .values_list('blockface_id', flat=True))\n    ids_to_add = new_block_ids - old_block_ids\n    ids_to_kill = old_block_ids - new_block_ids\n    # Make sure no unavailable or already-assigned blocks slipped in\n    filtered_ids_to_add = Blockface.objects \\\n        .filter(id__in=ids_to_add) \\\n        .filter(is_available=True) \\\n        .filter(territory=None) \\\n        .values_list('id', flat=True)\n    new_territory = [Territory(group=group, blockface_id=id)\n                     for id in filtered_ids_to_add]\n    Territory.objects.bulk_create(new_territory)\n    Territory.objects \\\n        .filter(blockface_id__in=ids_to_kill) \\\n        .delete()\n\n\ndef _update_event_maps(request, group):\n    events = Event.objects \\\n        .filter(group_id=group.id, begins_at__gt=now()) \\\n        .select_related('group')\n    for event in events:\n        create_event_map_pdf(request, event)\n\n\ndef _make_blockface_and_tiler_urls_result(request, blockfaces, group_id):\n    result = {\n        'blockDataList': _make_blockface_data_result(blockfaces),\n        'tilerUrls': get_context_for_territory_admin_layer(request, group_id)\n    }\n    return result\n\n\ndef _make_blockface_data_result(blockfaces):\n    block_data_list = [{'id': bf.id, 'geojson': bf.geom.json}\n                       for bf in blockfaces]\n    return block_data_list\n", "meta": {"content_hash": "245a3f944cd4eac948a49263f01aee37", "timestamp": "", "source": "github", "line_count": 336, "max_line_length": 78, "avg_line_length": 34.25595238095238, "alnum_prop": 0.635881841876629, "repo_name": "RickMohr/nyc-trees", "id": "0430d00d3c50a470409f54b8f021ae97848c2ee7", "size": "11534", "binary": false, "copies": "1", "ref": "refs/heads/develop", "path": "src/nyc_trees/apps/users/views/group.py", "mode": "33188", "license": "apache-2.0", "language": [{"name": "CSS", "bytes": "171372"}, {"name": "CartoCSS", "bytes": "878"}, {"name": "HTML", "bytes": "157969"}, {"name": "JavaScript", "bytes": "286316"}, {"name": "Makefile", "bytes": "1524"}, {"name": "PLpgSQL", "bytes": "3210"}, {"name": "Python", "bytes": "404021"}, {"name": "Shell", "bytes": "23399"}]}}
{"text": "function configure() {\n    # List n-application using most space\n    # @param    $1|size  number of biggest application to list\n    # @return    void\n    function du-app() {\n        size=\"${1:-10}\"\n        dpkg-query --show --showformat=\"\\${Package;-50}\\t\\${Installed-Size}\\n\" \\\n        | sort -k 2 -n \\\n        | grep -v deinstall \\\n        | awk '{printf \"%.1f MB \\t %s\\n\", $2/(1024), $1}' \\\n        | tail -n \"$size\"\n    }\n\n    # human-readable sizes\n    function df() { \n        command df \\\n            --human-readable \\\n            --print-type \\\n            --exclude-type squashfs \\\n            --exclude-type tmpfs \\\n            --exclude-type devtmpfs \\\n            \"$@\"\n    }\n\n     # show sizes in MB\n    function free() { command free -m; }\n}\nconfigure\n", "meta": {"content_hash": "73da57189a7a28882b91e1fe9a32a92a", "timestamp": "", "source": "github", "line_count": 28, "max_line_length": 80, "avg_line_length": 27.357142857142858, "alnum_prop": 0.49216710182767626, "repo_name": "edouard-lopez/dotfiles", "id": "4d9fd2c0bf074292bae2b10a9a53a4d841befd56", "size": "787", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "includes/posix/monitoring.bash", "mode": "33188", "license": "mit", "language": [{"name": "Python", "bytes": "63"}, {"name": "Shell", "bytes": "38660"}, {"name": "Vim Script", "bytes": "5525"}]}}
{"text": "\npackage org.ops4j.pax.exam.sample2.model;\n\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport javax.persistence.Lob;\nimport javax.persistence.ManyToOne;\nimport javax.persistence.Table;\n\n@Entity\n@Table(name = \"rating\")\npublic class Rating {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private int id;\n\n    private int stars;\n\n    @Lob\n    private String comment;\n\n    @ManyToOne\n    private User user;\n    @ManyToOne\n    private Movie movie;\n\n    /**\n     * @return the id\n     */\n    public int getId() {\n        return id;\n    }\n\n    /**\n     * @param id\n     *            the id to set\n     */\n    public void setId(int id) {\n        this.id = id;\n    }\n\n    /**\n     * @return the stars\n     */\n    public int getStars() {\n        return stars;\n    }\n\n    /**\n     * @param stars\n     *            the stars to set\n     */\n    public void setStars(int stars) {\n        this.stars = stars;\n    }\n\n    /**\n     * @return the comment\n     */\n    public String getComment() {\n        return comment;\n    }\n\n    /**\n     * @param comment\n     *            the comment to set\n     */\n    public void setComment(String comment) {\n        this.comment = comment;\n    }\n\n    /**\n     * @return the user\n     */\n    public User getUser() {\n        return user;\n    }\n\n    /**\n     * @param user\n     *            the user to set\n     */\n    public void setUser(User user) {\n        this.user = user;\n    }\n\n    /**\n     * @return the movie\n     */\n    public Movie getMovie() {\n        return movie;\n    }\n\n    /**\n     * @param movie\n     *            the movie to set\n     */\n    public void setMovie(Movie movie) {\n        this.movie = movie;\n    }\n}\n", "meta": {"content_hash": "4901789fd2534feffdc9e9d6efb0ceb9", "timestamp": "", "source": "github", "line_count": 104, "max_line_length": 51, "avg_line_length": 17.009615384615383, "alnum_prop": 0.5313736574335783, "repo_name": "bimargulies/org.ops4j.pax.exam2", "id": "0188ac1c47c0896fbf7d103e1a14246e8d489d25", "size": "2379", "binary": false, "copies": "4", "ref": "refs/heads/master", "path": "samples/pax-exam-sample2-model/src/main/java/org/ops4j/pax/exam/sample2/model/Rating.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Java", "bytes": "1271799"}, {"name": "Shell", "bytes": "198"}]}}
{"text": "\n//\n// MODULE: JdbcDebug.cpp\n//\n#include \"org_apache_trafodion_jdbc_t2_JdbcDebug.h\"\n#include \"Debug.h\"\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    getDebugHandle\n * Signature: (I)I\n */\nJNIEXPORT jlong JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_getDebugHandle(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jlong method_name_handle)\n{\n\tjlong handle = 0;\n#if defined(_BENCHMARK)\n\thandle = (jlong) new Benchmark((const char *) method_name_handle);\n#endif /* _BENCHMARK */\n\treturn(handle);\n}\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    getMethodNameHandle\n * Signature: (Ljava/lang/String;)I\n */\nJNIEXPORT jlong JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_getMethodNameHandle(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   jstring method_name)\n{\n\tjlong rc = 0;\n#if defined(_DEBUG) || defined(_BENCHMARK)\n\tif (method_name) rc = (jlong) jenv->GetStringUTFChars(method_name,NULL);\n\tif (rc==0) rc = (jlong) \"Unknown\";\n#endif /* _DEBUG || _BENCHMARK */\n\treturn(rc);\n}\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    methodEntry\n * Signature: (III)V\n */\nJNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodEntry(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   jlong debug_handle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   jint debug_level,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t   jlong method_name_handle)\n{\n#if defined(_DEBUG)\n\tDebugFunctionEntry((const char *) method_name_handle, debug_level, NULL , NULL, 0);\n#endif /* _DEBUG */\n#if defined(_BENCHMARK)\n\t((Benchmark *) debug_handle)->Entry();\n#endif /* _BENCHMARK */\n}\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    methodReturn\n * Signature: (ILjava/lang/String;)V\n */\nJNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodReturn(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjlong debug_handle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjstring comment)\n{\n#if defined(_DEBUG)\n\tconst char *commentStr;\n\tif (comment) commentStr = jenv->GetStringUTFChars(comment,NULL);\n\telse commentStr = NULL;\n\tDebugFunctionReturn(\"JAVA\", commentStr, false, \"RETURNING\", NULL, 0);\n\tif (commentStr) jenv->ReleaseStringUTFChars(comment,commentStr);\n#endif /* _DEBUG */\n}\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    methodExit\n * Signature: (I)V\n */\nJNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_methodExit(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  jlong debug_handle)\n{\n#if defined(_DEBUG)\n\tDebugFunctionReturn(\"JAVA\", NULL, true, \"EXITING\", NULL, 0);\n#endif /* _DEBUG */\n\n#if defined(_BENCHMARK)\n\t((Benchmark *) debug_handle)->Exit();\n#endif /* _BENCHMARK */\n}\n\n/*\n * Class:     org_apache_trafodion_jdbc_t2_JdbcDebug\n * Method:    traceOut\n * Signature: (IILjava/lang/String;)V\n */\nJNIEXPORT void JNICALL Java_org_apache_trafodion_jdbc_t2_JdbcDebug_traceOut(JNIEnv *jenv, jclass jcls,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjlong debug_handle,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjint debug_level,\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tjstring comment)\n{\n#if defined(_DEBUG)\n\tconst char *commentStr;\n\tif (comment) commentStr = jenv->GetStringUTFChars(comment,NULL);\n\telse commentStr = NULL;\n\tif (DebugActive(debug_level,NULL,0)) DebugOutput(commentStr , NULL, 0);\n\tif (commentStr) jenv->ReleaseStringUTFChars(comment,commentStr);\n#endif /* _DEBUG */\n}\n", "meta": {"content_hash": "1abd718dce3bc752ab0955f9348f9b61", "timestamp": "", "source": "github", "line_count": 109, "max_line_length": 114, "avg_line_length": 29.853211009174313, "alnum_prop": 0.6717885679164106, "repo_name": "mashengchen/incubator-trafodion", "id": "25ae2a001185445481545ef9e80b702621cbfedb", "size": "4264", "binary": false, "copies": "3", "ref": "refs/heads/master", "path": "core/conn/jdbc_type2/native/JdbcDebug.cpp", "mode": "33188", "license": "apache-2.0", "language": [{"name": "1C Enterprise", "bytes": "27762"}, {"name": "Awk", "bytes": "20971"}, {"name": "Batchfile", "bytes": "27013"}, {"name": "C", "bytes": "18877152"}, {"name": "C++", "bytes": "68786466"}, {"name": "CSS", "bytes": "99092"}, {"name": "GDB", "bytes": "62692"}, {"name": "Groff", "bytes": "46673"}, {"name": "HTML", "bytes": "4618"}, {"name": "Inno Setup", "bytes": "14579"}, {"name": "Java", "bytes": "12232679"}, {"name": "JavaScript", "bytes": "883279"}, {"name": "LLVM", "bytes": "42952"}, {"name": "Makefile", "bytes": "321639"}, {"name": "Objective-C", "bytes": "637659"}, {"name": "PHP", "bytes": "8438"}, {"name": "PLpgSQL", "bytes": "197622"}, {"name": "Perl", "bytes": "549860"}, {"name": "Protocol Buffer", "bytes": "121282"}, {"name": "Python", "bytes": "330201"}, {"name": "QMake", "bytes": "3622"}, {"name": "Ruby", "bytes": "8053"}, {"name": "SQLPL", "bytes": "60330"}, {"name": "Shell", "bytes": "1999068"}, {"name": "Tcl", "bytes": "2763"}, {"name": "XSLT", "bytes": "6100"}, {"name": "Yacc", "bytes": "1368077"}]}}
{"text": "\npackage com.alibaba.dubbo.common.serialize.support.java;\n\nimport java.io.IOException;\nimport java.io.InputStream;\nimport java.io.OutputStream;\n\nimport com.alibaba.dubbo.common.URL;\nimport com.alibaba.dubbo.common.serialize.ObjectInput;\nimport com.alibaba.dubbo.common.serialize.ObjectOutput;\nimport com.alibaba.dubbo.common.serialize.Serialization;\n\n/**\n * @author ding.lid\n */\npublic class CompactedJavaSerialization implements Serialization {\n\n    public byte getContentTypeId() {\n        return 4;\n    }\n\n    public String getContentType() {\n        return \"x-application/compactedjava\";\n    }\n\n    public ObjectOutput serialize(URL url, OutputStream out) throws IOException {\n        return new JavaObjectOutput(out, true);\n    }\n\n    public ObjectInput deserialize(URL url, InputStream is) throws IOException {\n        return new JavaObjectInput(is, true);\n    }\n\n}", "meta": {"content_hash": "51165a6abb524dd739da671e283beb68", "timestamp": "", "source": "github", "line_count": 34, "max_line_length": 81, "avg_line_length": 25.61764705882353, "alnum_prop": 0.7416762342135477, "repo_name": "kaven12/dubboo", "id": "f0a0f0a249f804c6984b2925e343fb0702f0600c", "size": "1480", "binary": false, "copies": "20", "ref": "refs/heads/master", "path": "dubbo-common/src/main/java/com/alibaba/dubbo/common/serialize/support/java/CompactedJavaSerialization.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "Batchfile", "bytes": "3343"}, {"name": "CSS", "bytes": "18582"}, {"name": "Java", "bytes": "5237817"}, {"name": "JavaScript", "bytes": "63151"}, {"name": "Lex", "bytes": "2077"}, {"name": "Shell", "bytes": "7011"}, {"name": "Thrift", "bytes": "668"}]}}
{"text": "package com.jxd.android.bookinventtory.bean;\n\nimport io.realm.RealmModel;\nimport io.realm.RealmObject;\nimport io.realm.annotations.RealmClass;\n\n/**\n * \u56fe\u4e66\u76d8\u70b9\n * Created by Administrator on 2017/10/17.\n */\n@RealmClass\npublic class ShelfBookScanBean implements RealmModel {\n\n    private String title;\n    private String barcode;\n    private String shelfno;\n    private String updatetime;\n    private String uid;\n    private String callno;\n    private int inshelf;\n    private String status;\n    private String machine_mac;\n\n    /**\n     * \u76d8\u70b9\u72b6\u6001\n     */\n    private String scanStatus;\n\n    public String getTitle() {\n        return title;\n    }\n\n    public void setTitle(String title) {\n        this.title = title;\n    }\n\n    public String getBarcode() {\n        return barcode;\n    }\n\n    public void setBarcode(String barcode) {\n        this.barcode = barcode;\n    }\n\n    public String getShelfno() {\n        return shelfno;\n    }\n\n    public void setShelfno(String shelfno) {\n        this.shelfno = shelfno;\n    }\n\n    public String getUpdatetime() {\n        return updatetime;\n    }\n\n    public void setUpdatetime(String updatetime) {\n        this.updatetime = updatetime;\n    }\n\n    public String getUid() {\n        return uid;\n    }\n\n    public void setUid(String uid) {\n        this.uid = uid;\n    }\n\n    public String getCallno() {\n        return callno;\n    }\n\n    public void setCallno(String callno) {\n        this.callno = callno;\n    }\n\n    public int getInshelf() {\n        return inshelf;\n    }\n\n    public void setInshelf(int inshelf) {\n        this.inshelf = inshelf;\n    }\n\n    public String getMachine_mac() {\n        return machine_mac;\n    }\n\n    public void setMachine_mac(String machine_mac) {\n        this.machine_mac = machine_mac;\n    }\n\n    public String getStatus() {\n        return status;\n    }\n\n    public void setStatus(String status) {\n        this.status = status;\n    }\n\n    public String getScanStatus() {\n        return scanStatus;\n    }\n\n    public void setScanStatus(String scanStatus) {\n        this.scanStatus = scanStatus;\n    }\n\n    public void transfor(BookBean bookBean){\n        this.setBarcode( bookBean.getBarcode() );\n        this.setCallno(bookBean.getCallno());\n        this.setInshelf(bookBean.getInshelf());\n        this.setMachine_mac(bookBean.getMachine_mac());\n        this.setTitle(bookBean.getTitle());\n        this.setUid(bookBean.getUid());\n        this.setShelfno(bookBean.getShelfno());\n        this.setStatus( bookBean.getStatus() );\n        this.setUpdatetime(bookBean.getUpdatetime());\n    }\n\n    @Override\n    public int hashCode() {\n        return super.hashCode();\n    }\n\n    @Override\n    public boolean equals(Object obj) {\n        return super.equals(obj);\n    }\n}\n", "meta": {"content_hash": "1cc8e2853ac762829180de45eeec8132", "timestamp": "", "source": "github", "line_count": 130, "max_line_length": 55, "avg_line_length": 21.0, "alnum_prop": 0.6201465201465202, "repo_name": "jxdong1013/bookinventory", "id": "577e0a27b8901851282783433ef072283019b34b", "size": "2746", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "src/android/bookinventory/app/src/main/java/com/jxd/android/bookinventtory/bean/ShelfBookScanBean.java", "mode": "33188", "license": "apache-2.0", "language": [{"name": "ASP", "bytes": "98"}, {"name": "C#", "bytes": "199875"}, {"name": "CSS", "bytes": "21629"}, {"name": "HTML", "bytes": "6682"}, {"name": "Java", "bytes": "261073"}, {"name": "JavaScript", "bytes": "438316"}, {"name": "PowerShell", "bytes": "112665"}]}}
{"text": "\n\n#include \"../../inc/MarlinConfig.h\"\n\n#if HAS_M206_COMMAND\n\n#include \"../gcode.h\"\n#include \"../../module/motion.h\"\n#include \"../../lcd/marlinui.h\"\n#include \"../../libs/buzzer.h\"\n#include \"../../MarlinCore.h\"\n\nvoid M206_report() {\n  SERIAL_ECHOLNPAIR_P(\n    LIST_N(DOUBLE(LINEAR_AXES),\n      PSTR(\"M206 X\"), home_offset.x,\n      SP_Y_STR, home_offset.y,\n      SP_Z_STR, home_offset.z,\n      SP_I_STR, home_offset.i,\n      SP_J_STR, home_offset.j,\n      SP_K_STR, home_offset.k,\n    )\n  );\n}\n\n/**\n * M206: Set Additional Homing Offset (X Y Z). SCARA aliases T=X, P=Y\n *\n * *** @thinkyhead: I recommend deprecating M206 for SCARA in favor of M665.\n * ***              M206 for SCARA will remain enabled in 1.1.x for compatibility.\n * ***              In the 2.0 release, it will simply be disabled by default.\n */\nvoid GcodeSuite::M206() {\n  LOOP_LINEAR_AXES(i)\n    if (parser.seen(AXIS_CHAR(i)))\n      set_home_offset((AxisEnum)i, parser.value_linear_units());\n\n  #if ENABLED(MORGAN_SCARA)\n    if (parser.seen('T')) set_home_offset(A_AXIS, parser.value_float()); // Theta\n    if (parser.seen('P')) set_home_offset(B_AXIS, parser.value_float()); // Psi\n  #endif\n\n  if (!parser.seen(LINEAR_AXIS_GANG(\"X\", \"Y\", \"Z\", \"I\", \"J\", \"K\")))\n    M206_report();\n  else\n    report_current_position();\n}\n\n/**\n * M428: Set home_offset based on the distance between the\n *       current_position and the nearest \"reference point.\"\n *       If an axis is past center its endstop position\n *       is the reference-point. Otherwise it uses 0. This allows\n *       the Z offset to be set near the bed when using a max endstop.\n *\n *       M428 can't be used more than 2cm away from 0 or an endstop.\n *\n *       Use M206 to set these values directly.\n */\nvoid GcodeSuite::M428() {\n  if (homing_needed_error()) return;\n\n  xyz_float_t diff;\n  LOOP_LINEAR_AXES(i) {\n    diff[i] = base_home_pos((AxisEnum)i) - current_position[i];\n    if (!WITHIN(diff[i], -20, 20) && home_dir((AxisEnum)i) > 0)\n      diff[i] = -current_position[i];\n    if (!WITHIN(diff[i], -20, 20)) {\n      SERIAL_ERROR_MSG(STR_ERR_M428_TOO_FAR);\n      LCD_ALERTMESSAGEPGM_P(PSTR(\"Err: Too far!\"));\n      BUZZ(200, 40);\n      return;\n    }\n  }\n\n  LOOP_LINEAR_AXES(i) set_home_offset((AxisEnum)i, diff[i]);\n  report_current_position();\n  LCD_MESSAGEPGM(MSG_HOME_OFFSETS_APPLIED);\n  BUZZ(100, 659);\n  BUZZ(100, 698);\n}\n\n#endif // HAS_M206_COMMAND\n", "meta": {"content_hash": "d5f7b1a89aaf43eebda85cc3e0a7bc6e", "timestamp": "", "source": "github", "line_count": 83, "max_line_length": 82, "avg_line_length": 28.771084337349397, "alnum_prop": 0.6134840871021775, "repo_name": "limtbk/3dprinting", "id": "51f3e7c14c049e582236c468f1a1c40acf5e4c5a", "size": "3249", "binary": false, "copies": "2", "ref": "refs/heads/master", "path": "Firmware/src/Marlin/src/gcode/geometry/M206_M428.cpp", "mode": "33188", "license": "apache-2.0", "language": [{"name": "C", "bytes": "16427042"}, {"name": "C++", "bytes": "1508812"}, {"name": "Makefile", "bytes": "58317"}, {"name": "Objective-C", "bytes": "195319"}, {"name": "Processing", "bytes": "407203"}, {"name": "Python", "bytes": "11892"}, {"name": "Scilab", "bytes": "10211"}]}}
{"text": "/*\n\n    A helper function to diagram all routes in a `fluid.express` instance.\n\n */\n\n\"use strict\";\nvar fluid = fluid || require(\"infusion\");\n\nfluid.registerNamespace(\"fluid.test.express\");\n\n/**\n *\n * Diagram all routes within an express instance.\n *\n * @param {Object} expressComponent - A `fluid.express` component.\n * @return {Object} A JSON Object representing all routes within a `fluid.express` instance.\n *\n */\nfluid.test.express.diagramAllRoutes = function (expressComponent) {\n    return fluid.test.express.diagramOneLevel(expressComponent, expressComponent.router._router);\n};\n\n/**\n *\n * Diagram the routes for a single component.  To preserve the routing order of the stack, each level's children\n * are represented in a `children` Array.\n *\n * @param {Object} component - A `fluid.express.middleware` component.\n * @param {Object} router - The router instance within the component (if there is one).\n * @return {Object} A JSON Object representing the routes from this level down as well as the method and path for this level.\n */\nfluid.test.express.diagramOneLevel = function (component, router) {\n    var thisLevel = fluid.filterKeys(component.options, [\"method\", \"path\"]);\n    thisLevel.typeName = component.typeName;\n\n    if (router) {\n        thisLevel.children = fluid.transform(router.stack, function (layer) {\n            // This is a `fluid.express.router` instance\n            if (layer.handle && layer.handle.that) {\n                return fluid.test.express.diagramOneLevel(layer.handle.that, layer.handle.that.router);\n            }\n            // This is a `fluid.express.middleware` instance\n            else if (layer.route) {\n                var wrapper = fluid.filterKeys(layer.route, [\"path\", \"methods\"]);\n                wrapper.children = fluid.transform(layer.route.stack, function (middlewareLayer) {\n                    return fluid.test.express.diagramOneLevel(middlewareLayer.handle.that, middlewareLayer.handle.that.router);\n                });\n                return wrapper;\n            }\n            // This is something outside of our scope (i.e. native middleware).\n            else {\n                return \"Native middleware '\" + (layer.name || \"unknown\") + \"'\";\n            }\n        });\n    }\n\n    return thisLevel;\n};\n", "meta": {"content_hash": "1e7085b56a339027cd32730d523f680f", "timestamp": "", "source": "github", "line_count": 59, "max_line_length": 127, "avg_line_length": 38.389830508474574, "alnum_prop": 0.6512141280353201, "repo_name": "GPII/gpii-express", "id": "34a60008e12253be09206b56a5d1c3b76b4d7c29", "size": "2265", "binary": false, "copies": "2", "ref": "refs/heads/main", "path": "tests/js/lib/diagramAllRoutes.js", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "HTML", "bytes": "214"}, {"name": "JavaScript", "bytes": "208501"}]}}
{"text": "package com.lru.memory.disk.cache;\n\n/**\n *\n * @author sathayeg\n */\npublic interface DirLocate  {\n    public String getPathToFile(String key) throws Exception;\n    public boolean isDiskPersistent();\n}\n", "meta": {"content_hash": "3f8be3bb0d892f5fdc57eeeaa392bc41", "timestamp": "", "source": "github", "line_count": 10, "max_line_length": 61, "avg_line_length": 20.0, "alnum_prop": 0.72, "repo_name": "gaurangsathaye/JavaSimpleCache", "id": "00f1f658cb5c38b6e518eccef7f979c9316fdd38", "size": "200", "binary": false, "copies": "2", "ref": "refs/heads/master", "path": "src/main/java/com/lru/memory/disk/cache/DirLocate.java", "mode": "33188", "license": "apache-2.0", "language": []}}
{"text": "<!DOCTYPE html>\n<html>\n<head>\n\t<meta charset=\"UTF-8\" />\n<style> \n\n   \n   \n   \n.button {\n    background-color: #FA58F4; \n    border: none;\n    color: white;\n    padding: 15px 32px;\n    text-align: center;\n    text-decoration: none;\n    display: inline-block;\n    font-size: 16px;\n    margin: 4px 2px;\n    cursor: pointer;\n}\n\n.button1 {background-color: #D315BC  ;} \n.button2 {background-color: #EA4ED7  ;} \n.button3 {background-color: #D315BC   ; color: black;} \n.button4 {background-color: #EA4ED7  ;} \n.button5{background-color: #D315BC  ; color: black;} \n.button6{background-color: #EA4ED7  ;} \n.button7{background-color: #D315BC  ;} \n.button8{background-color: #EA4ED7  ;}\n.button9{background-color: #D315BC  ;}\n\n</style>\n\n<title>\u041a\u043b\u0430\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u0458\u0430</title>\n\n</head>\n<body>\n\n<div id=\"fb-root\"></div>\n<script>(function(d, s, id) {\n  var js, fjs = d.getElementsByTagName(s)[0];\n  if (d.getElementById(id)) return;\n  js = d.createElement(s); js.id = id;\n  js.src = \"//connect.facebook.net/mk_MK/sdk.js#xfbml=1&version=v2.9\";\n  fjs.parentNode.insertBefore(js, fjs);\n}(document, 'script', 'facebook-jssdk'));</script>\n\n<div class=\"fenster\">\n\n    <a href=\"./klasifikacija.html\"><img src=\"klasss Kopie.jpg\" height=\"500\" width=\"100%\" style=\"float:left\"></a> \n\n    </div>\n    \n    \n\n\n\n<button class=\"button button1\"><a href=\"./pochetna.html\"><font color=\"black\">\u041f\u043e\u0447\u0435\u0442\u043d\u0430</font></a></button>\n<button class=\"button button2\"><a href=\"./zakancerot.html\"><font color=\"black\">\u0417\u0430 \u043a\u0430\u043d\u0446\u0435\u0440\u043e\u0442</font></a></button>\n<button class=\"button button3\"><a href=\"./stadiumi.html\"><font color=\"black\">\u0425\u0435\u043c\u043e\u0442\u0435\u0440\u0430\u043f\u0438\u0458\u0430</font></a></button>\n<button class=\"button button4\"><a href=\"./recepti.html\"><font color=\"black\">\u0420\u0435\u0446\u0435\u043f\u0442\u0438</font></a></button>\n<button class=\"button button5\"><a href=\"./dieti.html\"><font color=\"black\">\u0418\u0441\u0445\u0440\u0430\u043d\u0430</font></a></button>\n<button class=\"button button6\"><a href=\"./soveti.html\"><font color=\"black\">\u0421\u043e\u0432\u0435\u0442\u0438</font></a></button>\n<button class=\"button button7\"><a href=\"./bolnici.html\"><font  color=\"black\"</font>\u0411\u043e\u043b\u043d\u0438\u0446\u0438</a></button>\n<button class=\"button button8\"><a href=\"./Donacii.html\"><font color=\"black\">\u0414\u043e\u043d\u0430\u0446\u0438\u0438</font></a></button>\n<button class=\"button button9\"><a href=\"./lekovi.html\"><font color=\"black\">\u041b\u0435\u043a\u043e\u0432\u0438</font></a></button>\n\n\n<p><i><font size=\"4\" color=\"black\"><b>\u0412\u0438\u0434\u043e\u0432\u0438\u0442\u0435 \u043d\u0430 \u0440\u0430\u043a \u0441\u0435 \u043a\u043b\u0430\u0441\u0438\u0444\u0438\u0446\u0438\u0440\u0430\u0430\u0442 \u0441\u043f\u043e\u0440\u0435\u0434 \u0432\u0438\u0434\u043e\u0442 \u043d\u0430 \u043a\u043b\u0435\u0442\u043a\u0438 \u043a\u043e\u0438 \u043d\u0430\u043b\u0438\u043a\u0443\u0432\u0430\u0430\u0442 \u043d\u0430 \u0442\u0443\u043c\u043e\u0440, \u0438 \u0441\u043f\u043e\u0440\u0435\u0434 \u0442\u043e\u0430, \n\t\u043d\u0430 \u0442\u043a\u0438\u0432\u043e\u0442\u043e \u0437\u0430 \u043a\u043e\u0435 \u0441\u0435 \u043f\u0440\u0435\u0442\u043f\u043e\u0441\u0442\u0430\u0432\u0443\u0432\u0430 \u0434\u0435\u043a\u0430 \u0435 \u0437\u0430\u0447\u0435\u0442\u043e\u043a \u043d\u0430 \u0442\u0443\u043c\u043e\u0440\u043e\u0442. \u041f\u043e\u0434\u043e\u043b\u0443 \u0435 \u0445\u0438\u0441\u0442\u043e\u043b\u043e\u0433\u0438\u0458\u0430\u0442\u0430 \u0438 \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0431\u0430\u0442\u0430 \u043d\u0430 \u0432\u0438\u0434\u043e\u0432\u0438\u0442\u0435 \u0440\u0430\u043a. \u041f\u0440\u0438\u043c\u0435\u0440\u0438 \u0437\u0430 \u043d\u0435\u043a\u043e\u043b\u043a\u0443 \n\t\u043e\u043f\u0448\u0442\u0438 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u0441\u0435: \u041a\u0430\u0440\u0446\u0438\u043d\u043e\u043c: \u041c\u0430\u043b\u0438\u0433\u043d\u0438 \u0442\u0443\u043c\u043e\u0440\u0438 \u043a\u043e\u0438 \u043f\u043e\u0442\u0435\u043a\u043d\u0443\u0432\u0430\u0430\u0442 \u043e\u0434 \u0435\u043f\u0438\u0442\u0435\u043b\u043d\u0438 \u043a\u043b\u0435\u0442\u043a\u0438. \u0412\u043e \u043e\u0432\u0430\u0430 \u0433\u0440\u0443\u043f\u0430 \u043f\u0440\u0438\u043f\u0430\u0453\u0430\u0430\u0442 \u043d\u0430\u0458\u0447\u0435\u0441\u0442\u0438\u0442\u0435 \u0432\u0438\u0434\u043e\u0432\u0438 \u043d\u0430 \u0440\u0430\u043a, \n\t\u0432\u043a\u043b\u0443\u0447\u0443\u0432\u0430\u0458\u045c\u0438 \u0433\u0438 \u0440\u0430\u043a\u043e\u0442 \u043d\u0430 \u0434\u043e\u0458\u043a\u0430\u0442\u0430, \u043f\u0440\u043e\u0441\u0442\u0430\u0442\u0430\u0442\u0430, \u0431\u0435\u043b\u0438\u0442\u0435 \u0434\u0440\u043e\u0431\u043e\u0432\u0438 \u0438 \u0434\u0435\u0431\u0435\u043b\u043e\u0442\u043e \u0446\u0440\u0435\u0432\u043e. \u0421\u0430\u0440\u043a\u043e\u043c: \u041c\u0430\u043b\u0438\u0433\u043d\u0438 \u0442\u0443\u043c\u043e\u0440\u0438 \u043a\u043e\u0438 \u043f\u043e\u0442\u0435\u043a\u043d\u0443\u0432\u0430\u0430\u0442 \u043e\u0434 \u0441\u0432\u0440\u0437\u043d\u0438\u0442\u0435 \u0442\u043a\u0438\u0432\u0430,\n\t \u0438\u043b\u0438 \u043c\u0435\u0437\u0435\u043d\u0445\u0438\u043c\u0430\u043b\u043d\u0438\u0442\u0435 \u043a\u043b\u0435\u0442\u043a\u0438. \u041b\u0438\u043c\u0444\u043e\u043c \u0438 \u043b\u0435\u0443\u043a\u0435\u043c\u0438\u0458\u0430: \u041c\u0430\u043b\u0438\u0433\u043d\u043e\u043c\u0438 \u043a\u043e\u0438 \u043f\u043e\u0442\u0435\u043a\u043d\u0443\u0432\u0430\u0430\u0442 \u043e\u0434 \u0445\u0435\u043c\u0430\u0442\u043e\u043f\u043e\u0435\u0442\u0441\u043a\u0438\u0442\u0435 (\u043a\u0440\u0432\u043e\u0442\u0432\u043e\u0440\u043d\u0438\u0442\u0435) \u043a\u043b\u0435\u0442\u043a\u0438 \u0411\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u043a\u0438 \u0440\u0430\u043a: \n\t \u0422\u0443\u043c\u043e\u0440\u0438 \u043a\u043e\u0438 \u043f\u043e\u0442\u0435\u043a\u043d\u0443\u0432\u0430\u0430\u0442 \u043e\u0434 \u0442\u043e\u0442\u0438\u043f\u043e\u0442\u0435\u043d\u0442\u043d\u0438\u0442\u0435 \u043a\u043b\u0435\u0442\u043a\u0438. \u041a\u0430\u0458 \u0432\u043e\u0437\u0440\u0430\u0441\u043d\u0438\u0442\u0435 \u043d\u0430\u0458\u0447\u0435\u0441\u0442\u043e \u043c\u043e\u0436\u0435 \u0434\u0430 \u0441\u0435 \u043d\u0430\u0458\u0434\u0435 \u0432\u043e \u0442\u0435\u0441\u0442\u0438\u0441\u0438\u0442\u0435 \u0438 \u0458\u0430\u0458\u0447\u043d\u0438\u0446\u0438\u0442\u0435, \u0434\u043e\u0434\u0435\u043a\u0430 \u043a\u0430\u0458 \u0444\u0435\u0442\u0443\u0441\u0438\u0442\u0435, \n\t \u0431\u0435\u0431\u0438\u045a\u0430\u0442\u0430 \u0438 \u043c\u0430\u043b\u0438\u0442\u0435 \u0434\u0435\u0446\u0430 \u043d\u0430\u0458\u0447\u0435\u0441\u0442\u043e \u0441\u0435 \u043d\u0430\u043e\u0453\u0430\u0430\u0442 \u0432\u043e \u0441\u0440\u0435\u0434\u0438\u0448\u043d\u0438\u043e\u0442 \u0434\u0435\u043b \u043d\u0430 \u0442\u0435\u043b\u043e\u0442\u043e, \u043d\u0430 \u0432\u0440\u0432\u043e\u0442 \u043d\u0430 \u043e\u043f\u0430\u0448\u043d\u0430\u0442\u0430 \u043a\u043e\u0441\u043a\u0430, \u0430 \u043a\u0430\u0458 \u043a\u043e\u045a\u0438\u0442\u0435 \u0432\u043e \u043e\u0441\u043d\u043e\u0432\u0430\u0442\u0430 \u043d\u0430 \u0447\u0435\u0440\u0435\u043f\u043e\u0442. \n\t \u0411\u043b\u0430\u0441\u0442\u0435\u043d \u0442\u0443\u043c\u043e\u0440 \u0438\u043b\u0438 \u0431\u043b\u0430\u0441\u0442\u043e\u043c: \u0422\u0443\u043c\u043e\u0440 (\u043e\u0431\u0438\u0447\u043d\u043e \u043c\u0430\u043b\u0438\u0433\u043d\u0435\u043d) \u043a\u043e\u0458 \u043d\u0430\u043b\u0438\u043a\u0443\u0432\u0430 \u043d\u0430 \u043d\u0435\u0437\u0440\u0435\u043b\u043e \u0438\u043b\u0438 \u0435\u043c\u0431\u0440\u0438\u043e\u043d\u0441\u043a\u043e \u0442\u043a\u0438\u0432\u043e. \u041e\u0432\u0438\u0435 \u0442\u0443\u043c\u043e\u0440\u0438 \u0441\u0435 \u043d\u0430\u0458\u0447\u0435\u0441\u0442\u0438 \u043a\u0430\u0458 \u0434\u0435\u0446\u0430\u0442\u0430. \n \u0442\u0443\u043c\u043e\u0440\u0438 (\u0432\u0438\u0434\u043e\u0432\u0438 \u0440\u0430\u043a) \u043e\u0431\u0438\u0447\u043d\u043e \u0441\u0435 \u0438\u043c\u0435\u043d\u0443\u0432\u0430\u0430\u0442 \u043a\u043e\u0440\u0438\u0441\u0442\u0435\u0458\u045c\u0438 \u2013\u043a\u0430\u0440\u0446\u0438\u043d\u043e\u043c, -\u0441\u0430\u0440\u043a\u043e\u043c \u0438\u043b\u0438 \u2013\u0431\u043b\u0430\u0441\u0442\u043e\u043c \u043a\u0430\u043a\u043e \u0441\u0443\u0444\u0438\u043a\u0441, \u0438 \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u043e\u0442 \u0438\u043b\u0438 \u0433\u0440\u0447\u043a\u0438\u043e\u0442 \u0437\u0431\u043e\u0440 \u0437\u0430 \u043e\u0440\u0433\u0430\u043d\u043e\u0442\n  \u043e\u0434 \u043a\u043e\u0458 \u043f\u043e\u0442\u0435\u043a\u043d\u0443\u0432\u0430\u0430\u0442 \u043a\u0430\u043a\u043e \u043a\u043e\u0440\u0435\u043d \u043d\u0430 \u0438\u043c\u0435\u0442\u043e. \u041d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440, \u0440\u0430\u043a\u043e\u0442 \u043d\u0430 \u0446\u0440\u043d\u0438\u043e\u0442 \u0434\u0440\u043e\u0431 \u0441\u0435 \u043d\u0430\u0440\u0435\u043a\u0443\u0432\u0430 \u0445\u0435\u043f\u0430\u0442\u043e\u043a\u0430\u0440\u0446\u0438\u043d\u043e\u043c, \u0440\u0430\u043a\u043e\u0442 \u043d\u0430 \u043c\u0430\u0441\u043d\u0438\u0442\u0435 \u043a\u043b\u0435\u0442\u043a\u0438- \u043b\u0438\u043f\u043e\u0441\u0430\u0440\u043a\u043e\u043c\n   \u0438\u0442\u043d. \u0411\u0435\u043d\u0438\u0433\u043d\u0438\u0442\u0435 \u0442\u0443\u043c\u043e\u0440\u0438 (\u043a\u043e\u0438 \u043d\u0435 \u0441\u0435 \u0440\u0430\u043a) \u0441\u0435 \u0438\u043c\u0435\u043d\u0443\u0432\u0430\u0430\u0442 \u043a\u043e\u0440\u0438\u0441\u0442\u0435\u0458\u045c\u0438 \u2013\u043e\u043c \u043a\u0430\u043a\u043e \u0441\u0443\u0444\u0438\u043a\u0441, \u0438 \u0438\u043c\u0435\u0442\u043e \u043d\u0430 \u043e\u0440\u0433\u0430\u043d\u043e\u0442 \u043a\u0430\u043a\u043e \u043a\u043e\u0440\u0435\u043d. \u041d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440, \u0431\u0435\u043d\u0438\u0433\u043d\u0435\u043d \u0442\u0443\u043c\u043e\u0440 \n   \u043d\u0430 \u043c\u0430\u0437\u043d\u0430\u0442\u0430 \u043c\u0443\u0441\u043a\u0443\u043b\u0430\u0442\u0443\u0440\u0430 \u043d\u0430 \u043c\u0430\u0442\u043a\u0430\u0442\u0430 \u0441\u0435 \u043d\u0430\u0440\u0435\u043a\u0443\u0432\u0430 \u043b\u0435\u0438\u043e\u043c\u0438\u043e\u043c (\u043f\u043e\u0447\u0435\u0441\u0442 \u0438\u0437\u0440\u0430\u0437 \u0437\u0430 \u043e\u0432\u043e\u0458 \u0432\u0438\u0434 \u0442\u0443\u043c\u043e\u0440 \u0435 \u0444\u0438\u0431\u0440\u043e\u0438\u0434). \u0417\u0430 \u0436\u0430\u043b, \n\t\u0438 \u043d\u0435\u043a\u043e\u0438 \u0432\u0438\u0434\u043e\u0432\u0438 \u0440\u0430\u043a \u0433\u043e \u043a\u043e\u0440\u0438\u0441\u0442\u0430\u0442 \u0441\u0443\u0444\u0438\u043a\u0441\u043e\u0442 \u2013\u043e\u043c, \u043a\u0430\u043a\u043e \u0448\u0442\u043e \u0435 \u0441\u043b\u0443\u0447\u0430\u0458\u043e\u0442 \u0441\u043e \u043c\u0435\u043b\u0430\u043d\u043e\u043c \u0438 \u0441\u0435\u043c\u0438\u043d\u043e\u043c\n\t\t</font></i></p></b>\n\n<iframe width=\"70%\" height=\"500\" src=\"https://www.youtube.com/embed/72-2Bumwyh0\" frameborder=\"0\" allowfullscreen></iframe>\n\t  \n\n<div class=\"fb-comments\" data-href=\"http://127.0.0.1:8020/borbaprotivkancerot/klasifikacija.html\" data-numposts=\"5\"></div>\n\n\n</body>\n</html>", "meta": {"content_hash": "5fe8f5d153cd27a362025ba442a3f87d", "timestamp": "", "source": "github", "line_count": 92, "max_line_length": 140, "avg_line_length": 45.84782608695652, "alnum_prop": 0.7159791370317686, "repo_name": "majaradichevich/majaradichevich.github.io", "id": "7ed025a1c9e8db3faad7a92693291f6f197a9621", "size": "5642", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "klasifikacija.html", "mode": "33188", "license": "mit", "language": [{"name": "CSS", "bytes": "6042"}, {"name": "HTML", "bytes": "185244"}, {"name": "JavaScript", "bytes": "11231"}]}}
{"text": "<h2>Installing XFramework Generator</h2>\n\n<p>You don't need to download the source code from the repo, create  all the necessary files for the web app, writing two thousands line of code just to create a <code>Hello world!</code> app. XFramework Generator can make everything for you.</p>\n\n<p>XF Generator has a number of dependencies such as:</p>\n\n<ul>\n<li><a href=\"http://nodejs.org\">node.js</a></li>\n<li><a href=\"https://npmjs.org\">NPM</a></li>\n<li><a href=\"http://yeoman.io\">Yeoman</a></li>\n</ul>\n\n<p>To install first two of them on Mac OS X or Windows computers you just need to download a package from <a href=\"http://nodejs.org/download/\">nodejs.org/download/</a>. For other platforms see the <a href=\"https://npmjs.org/doc/README.html\">readme</a>.</p>\n\n<p>After installing node.js and npm go to terminal and install Yeoman writing <code>npm install -g yo</code> (with <code>sudo</code> if necessary).</p>\n\n<p>Almost there! After these steps you need to install XF Generator with <code>npm install -g generator-xf</code>.</p>", "meta": {"content_hash": "7ec5a698f2b1bcd09b1e097b90fbd031", "timestamp": "", "source": "github", "line_count": 17, "max_line_length": 257, "avg_line_length": 60.705882352941174, "alnum_prop": 0.7199612403100775, "repo_name": "epam/xframework", "id": "4127893e601400216714eb907402287b68e38251", "size": "1032", "binary": false, "copies": "1", "ref": "refs/heads/master", "path": "docs/data/installing_xframework_generator.html", "mode": "33188", "license": "bsd-3-clause", "language": [{"name": "CSS", "bytes": "275950"}, {"name": "JavaScript", "bytes": "730289"}]}}
{"text": "namespace Azure.ResourceManager.EdgeOrder.Models\n{\n    /// <summary> Represents subscription registered features. </summary>\n    public partial class CustomerSubscriptionRegisteredFeatures\n    {\n        /// <summary> Initializes a new instance of CustomerSubscriptionRegisteredFeatures. </summary>\n        public CustomerSubscriptionRegisteredFeatures()\n        {\n        }\n\n        /// <summary> Name of subscription registered feature. </summary>\n        public string Name { get; set; }\n        /// <summary> State of subscription registered feature. </summary>\n        public string State { get; set; }\n    }\n}\n", "meta": {"content_hash": "ac471d3f33987dd6c7e35e349847293a", "timestamp": "", "source": "github", "line_count": 16, "max_line_length": 102, "avg_line_length": 38.4375, "alnum_prop": 0.6813008130081301, "repo_name": "Azure/azure-sdk-for-net", "id": "1888fb1a8203597c021c5a97aa4c2106984a672a", "size": "753", "binary": false, "copies": "1", "ref": "refs/heads/main", "path": "sdk/edgeorder/Azure.ResourceManager.EdgeOrder/src/Generated/Models/CustomerSubscriptionRegisteredFeatures.cs", "mode": "33188", "license": "mit", "language": []}}
{"text": "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\" \"http://www.w3.org/TR/html4/loose.dtd\">\n<!-- NewPage -->\n<html lang=\"en\">\n<head>\n<!-- Generated by javadoc (1.8.0_151) on Sat Mar 16 04:11:58 MST 2019 -->\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<title>Uses of Interface org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer (BOM:  * : All 2.3.1.Final-SNAPSHOT API)</title>\n<meta name=\"date\" content=\"2019-03-16\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../../../../../../../../stylesheet.css\" title=\"Style\">\n<script type=\"text/javascript\" src=\"../../../../../../../../script.js\"></script>\n</head>\n<body>\n<script type=\"text/javascript\"><!--\n    try {\n        if (location.href.indexOf('is-external=true') == -1) {\n            parent.document.title=\"Uses of Interface org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer (BOM:  * : All 2.3.1.Final-SNAPSHOT API)\";\n        }\n    }\n    catch(err) {\n    }\n//-->\n</script>\n<noscript>\n<div>JavaScript is disabled on your browser.</div>\n</noscript>\n<!-- ========= START OF TOP NAVBAR ======= -->\n<div class=\"topNav\"><a name=\"navbar.top\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.top\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.top.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"../package-summary.html\">Package</a></li>\n<li><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">Class</a></li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"../../../../../../../../overview-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\">Thorntail API, 2.3.1.Final-SNAPSHOT</div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../../../../index.html?org/wildfly/swarm/config/messaging/activemq/server/class-use/BindingsDirectoryPathConsumer.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"BindingsDirectoryPathConsumer.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_top\">\n<li><a href=\"../../../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_top\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.top\">\n<!--   -->\n</a></div>\n<!-- ========= END OF TOP NAVBAR ========= -->\n<div class=\"header\">\n<h2 title=\"Uses of Interface org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer\" class=\"title\">Uses of Interface<br>org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer</h2>\n</div>\n<div class=\"classUseContainer\">\n<ul class=\"blockList\">\n<li class=\"blockList\">\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing packages, and an explanation\">\n<caption><span>Packages that use <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Package</th>\n<th class=\"colLast\" scope=\"col\">Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><a href=\"#org.wildfly.swarm.config.messaging.activemq\">org.wildfly.swarm.config.messaging.activemq</a></td>\n<td class=\"colLast\">&nbsp;</td>\n</tr>\n<tr class=\"rowColor\">\n<td class=\"colFirst\"><a href=\"#org.wildfly.swarm.config.messaging.activemq.server\">org.wildfly.swarm.config.messaging.activemq.server</a></td>\n<td class=\"colLast\">&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\">\n<ul class=\"blockList\">\n<li class=\"blockList\"><a name=\"org.wildfly.swarm.config.messaging.activemq\">\n<!--   -->\n</a>\n<h3>Uses of <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a> in <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/package-summary.html\">org.wildfly.swarm.config.messaging.activemq</a></h3>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing methods, and an explanation\">\n<caption><span>Methods in <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/package-summary.html\">org.wildfly.swarm.config.messaging.activemq</a> with parameters of type <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/Server.html\" title=\"type parameter in Server\">T</a></code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">Server.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/Server.html#bindingsDirectoryPath-org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer-\">bindingsDirectoryPath</a></span>(<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a>&nbsp;consumer)</code>\n<div class=\"block\">A filesystem path pointing to one of the locations where ActiveMQ stores\n persistent data.</div>\n</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li class=\"blockList\"><a name=\"org.wildfly.swarm.config.messaging.activemq.server\">\n<!--   -->\n</a>\n<h3>Uses of <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a> in <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/package-summary.html\">org.wildfly.swarm.config.messaging.activemq.server</a></h3>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing methods, and an explanation\">\n<caption><span>Methods in <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/package-summary.html\">org.wildfly.swarm.config.messaging.activemq.server</a> that return <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>default <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a>&lt;<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"type parameter in BindingsDirectoryPathConsumer\">T</a>&gt;</code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">BindingsDirectoryPathConsumer.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html#andThen-org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer-\">andThen</a></span>(<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a>&lt;<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"type parameter in BindingsDirectoryPathConsumer\">T</a>&gt;&nbsp;after)</code>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n<table class=\"useSummary\" border=\"0\" cellpadding=\"3\" cellspacing=\"0\" summary=\"Use table, listing methods, and an explanation\">\n<caption><span>Methods in <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/package-summary.html\">org.wildfly.swarm.config.messaging.activemq.server</a> with parameters of type <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a></span><span class=\"tabEnd\">&nbsp;</span></caption>\n<tr>\n<th class=\"colFirst\" scope=\"col\">Modifier and Type</th>\n<th class=\"colLast\" scope=\"col\">Method and Description</th>\n</tr>\n<tbody>\n<tr class=\"altColor\">\n<td class=\"colFirst\"><code>default <a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a>&lt;<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"type parameter in BindingsDirectoryPathConsumer\">T</a>&gt;</code></td>\n<td class=\"colLast\"><span class=\"typeNameLabel\">BindingsDirectoryPathConsumer.</span><code><span class=\"memberNameLink\"><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html#andThen-org.wildfly.swarm.config.messaging.activemq.server.BindingsDirectoryPathConsumer-\">andThen</a></span>(<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">BindingsDirectoryPathConsumer</a>&lt;<a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"type parameter in BindingsDirectoryPathConsumer\">T</a>&gt;&nbsp;after)</code>&nbsp;</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<!-- ======= START OF BOTTOM NAVBAR ====== -->\n<div class=\"bottomNav\"><a name=\"navbar.bottom\">\n<!--   -->\n</a>\n<div class=\"skipNav\"><a href=\"#skip.navbar.bottom\" title=\"Skip navigation links\">Skip navigation links</a></div>\n<a name=\"navbar.bottom.firstrow\">\n<!--   -->\n</a>\n<ul class=\"navList\" title=\"Navigation\">\n<li><a href=\"../../../../../../../../overview-summary.html\">Overview</a></li>\n<li><a href=\"../package-summary.html\">Package</a></li>\n<li><a href=\"../../../../../../../../org/wildfly/swarm/config/messaging/activemq/server/BindingsDirectoryPathConsumer.html\" title=\"interface in org.wildfly.swarm.config.messaging.activemq.server\">Class</a></li>\n<li class=\"navBarCell1Rev\">Use</li>\n<li><a href=\"../../../../../../../../overview-tree.html\">Tree</a></li>\n<li><a href=\"../../../../../../../../deprecated-list.html\">Deprecated</a></li>\n<li><a href=\"../../../../../../../../index-all.html\">Index</a></li>\n<li><a href=\"../../../../../../../../help-doc.html\">Help</a></li>\n</ul>\n<div class=\"aboutLanguage\">Thorntail API, 2.3.1.Final-SNAPSHOT</div>\n</div>\n<div class=\"subNav\">\n<ul class=\"navList\">\n<li>Prev</li>\n<li>Next</li>\n</ul>\n<ul class=\"navList\">\n<li><a href=\"../../../../../../../../index.html?org/wildfly/swarm/config/messaging/activemq/server/class-use/BindingsDirectoryPathConsumer.html\" target=\"_top\">Frames</a></li>\n<li><a href=\"BindingsDirectoryPathConsumer.html\" target=\"_top\">No&nbsp;Frames</a></li>\n</ul>\n<ul class=\"navList\" id=\"allclasses_navbar_bottom\">\n<li><a href=\"../../../../../../../../allclasses-noframe.html\">All&nbsp;Classes</a></li>\n</ul>\n<div>\n<script type=\"text/javascript\"><!--\n  allClassesLink = document.getElementById(\"allclasses_navbar_bottom\");\n  if(window==top) {\n    allClassesLink.style.display = \"block\";\n  }\n  else {\n    allClassesLink.style.display = \"none\";\n  }\n  //-->\n</script>\n</div>\n<a name=\"skip.navbar.bottom\">\n<!--   -->\n</a></div>\n<!-- ======== END OF BOTTOM NAVBAR ======= -->\n<p class=\"legalCopy\"><small>Copyright &#169; 2019 <a href=\"http://www.jboss.org\">JBoss by Red Hat</a>. All rights reserved.</small></p>\n</body>\n</html>\n", "meta": {"content_hash": "9d4a959a17bfed5d67d358e525d7f8e4", "timestamp": "", "source": "github", "line_count": 206, "max_line_length": 793, "avg_line_length": 64.10194174757281, "alnum_prop": 0.6843619840969329, "repo_name": "wildfly-swarm/wildfly-swarm-javadocs", "id": "1e14ac35a7c49488433c20a72a70ed6f7111d9be", "size": "13205", "binary": false, "copies": "1", "ref": "refs/heads/gh-pages", "path": "2.3.1.Final-SNAPSHOT/apidocs/org/wildfly/swarm/config/messaging/activemq/server/class-use/BindingsDirectoryPathConsumer.html", "mode": "33188", "license": "apache-2.0", "language": []}}
{"text": "\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport type {Transition} from './ReactFiberTracingMarkerComponent.new';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = null;\n\nexport function requestCurrentTransition(): Transition | null {\n  return ReactCurrentBatchConfig.transition;\n}\n", "meta": {"content_hash": "dace65b4e7262d44f7cf8c5ddcea517a", "timestamp": "", "source": "github", "line_count": 12, "max_line_length": 71, "avg_line_length": 28.5, "alnum_prop": 0.8216374269005848, "repo_name": "camsong/react", "id": "d63b99a1862ef22435389d30a9298476688a7c25", "size": "542", "binary": false, "copies": "2", "ref": "refs/heads/main", "path": "packages/react-reconciler/src/ReactFiberTransition.js", "mode": "33188", "license": "mit", "language": [{"name": "C", "bytes": "5225"}, {"name": "C++", "bytes": "44278"}, {"name": "CSS", "bytes": "64729"}, {"name": "CoffeeScript", "bytes": "16826"}, {"name": "HTML", "bytes": "119964"}, {"name": "JavaScript", "bytes": "6161428"}, {"name": "Makefile", "bytes": "189"}, {"name": "Python", "bytes": "259"}, {"name": "Shell", "bytes": "2306"}, {"name": "TypeScript", "bytes": "20868"}]}}
{"text": "\n\n/*!\n * Copyright (c) 2019 by Contributors\n * \\file moments-inl.h\n * \\brief Moments operator\n * \\author Hao Jin\n*/\n\n#ifndef MXNET_OPERATOR_NN_MOMENTS_INL_H_\n#define MXNET_OPERATOR_NN_MOMENTS_INL_H_\n\n#include <vector>\n#include \"../tensor/broadcast_reduce_op.h\"\n\nnamespace mxnet {\nnamespace op {\n\nstruct MomentsParam : public dmlc::Parameter<MomentsParam> {\n  dmlc::optional<mxnet::TShape> axes;\n  bool keepdims;\n  DMLC_DECLARE_PARAMETER(MomentsParam) {\n    DMLC_DECLARE_FIELD(axes).set_default(dmlc::optional<mxnet::TShape>())\n      .describe(\"Array of ints. Axes along which to compute mean and variance.\");\n    DMLC_DECLARE_FIELD(keepdims).set_default(false)\n      .describe(\"produce moments with the same dimensionality as the input.\");\n  }\n};\n\ninline bool MomentsShape(const nnvm::NodeAttrs& attrs,\n                         mxnet::ShapeVector* in_attrs,\n                         mxnet::ShapeVector* out_attrs) {\n  const MomentsParam& param = nnvm::get<MomentsParam>(attrs.parsed);\n  CHECK_EQ(in_attrs->size(), 1U);\n  CHECK_EQ(out_attrs->size(), 2U);\n\n  mxnet::TShape out_shape =\n    ReduceAxesShapeImpl((*in_attrs)[0], param.axes, param.keepdims, false);\n  if (!param.axes.has_value() || param.axes.value().ndim() == 0) {\n    LOG(FATAL) << \"Empty axes is not supported, if you would like to do global moments, \"\n               << \"please pass all axes to axes argument\";\n  }\n  SHAPE_ASSIGN_CHECK(*out_attrs, 0, out_shape);\n  SHAPE_ASSIGN_CHECK(*out_attrs, 1, out_shape);\n  return true;\n}\n\ninline bool MomentsType(const nnvm::NodeAttrs& attrs,\n                        std::vector<int>* in_attrs,\n                        std::vector<int>* out_attrs) {\n  CHECK_EQ(in_attrs->size(), 1U);\n  CHECK_EQ(out_attrs->size(), 2U);\n\n  TYPE_ASSIGN_CHECK(*out_attrs, 0, in_attrs->at(0));\n  TYPE_ASSIGN_CHECK(*out_attrs, 1, in_attrs->at(0));\n  TYPE_ASSIGN_CHECK(*in_attrs, 0, out_attrs->at(0));\n  TYPE_ASSIGN_CHECK(*in_attrs, 0, out_attrs->at(1));\n  return out_attrs->at(0) != -1 && out_attrs->at(1) != -1;\n}\n\nstruct VarBroadcastKernel {\n  template<typename DType>\n  MSHADOW_XINLINE static void Map(int i,\n                                  DType *out,\n                                  const DType *data,\n                                  const DType *mean,\n                                  mshadow::Shape<6> data_shape,\n                                  mshadow::Shape<6> mean_shape) {\n    size_t data_idx = i;\n    size_t mean_idx = i;\n    size_t data_stride = 1;\n    size_t mean_stride = 1;\n    for (int axis = 5; axis >= 0; --axis) {\n      size_t axis_idx = data_idx % data_shape[axis];\n      mean_idx -= axis_idx * data_stride;\n      if (mean_shape[axis] != 1) {\n        mean_idx += axis_idx * mean_stride;\n      }\n      data_idx /= data_shape[axis];\n      data_stride *= data_shape[axis];\n      mean_stride *= mean_shape[axis];\n    }\n    DType res = (data[i] - mean[mean_idx]);\n    out[i] = res * res;\n  }\n};\n\ntemplate<typename xpu>\ninline void MomentsForwardImpl(const OpContext& ctx,\n                               const std::vector<TBlob>& inputs,\n                               const std::vector<OpReqType>& req,\n                               const std::vector<TBlob>& outputs,\n                               const dmlc::optional<mxnet::TShape>& axes,\n                               const bool keepdims) {\n  using namespace mshadow;\n  using namespace mshadow_op;\n  using namespace mxnet_op;\n\n  Stream<xpu> *s = ctx.get_stream<xpu>();\n\n  const TBlob& data = inputs[0];\n  const TBlob& mean = outputs[0];\n  const TBlob& var = outputs[1];\n\n  mxnet::TShape small;\n  if (keepdims) {\n    small = outputs[0].shape_;\n  } else {\n    small = ReduceAxesShapeImpl(inputs[0].shape_, axes, true, false);\n  }\n\n  ReduceAxesComputeImpl<xpu, mshadow_op::sum, true, true>(ctx, {data}, {req[0]}, {mean}, small);\n  MSHADOW_TYPE_SWITCH(data.type_flag_, DType, {\n    Shape<6> data_shape, mean_shape;\n    for (int i = 0; i < 6; ++i) {\n      data_shape[i] = (i < data.shape_.ndim()) ? data.shape_[i] : 1;\n      mean_shape[i] = (i < small.ndim()) ? small[i] : 1;\n    }\n    Tensor<xpu, 1, DType> temp_data =\n      ctx.requested[0].get_space_typed<xpu, 1, DType>(Shape1(data.shape_.Size()), s);;\n    Kernel<VarBroadcastKernel, xpu>::Launch(s, data.shape_.Size(), temp_data.dptr_,\n      data.dptr<DType>(), mean.dptr<DType>(), data_shape, mean_shape);\n    ReduceAxesComputeImpl<xpu, mshadow_op::sum, true, true>(\n      ctx, {TBlob(temp_data).reshape(data.shape_)}, {kWriteTo}, {var}, small);\n  });\n}\n\ntemplate<typename xpu>\ninline void MomentsForward(const nnvm::NodeAttrs& attrs,\n                           const OpContext& ctx,\n                           const std::vector<TBlob>& inputs,\n                           const std::vector<OpReqType>& req,\n                           const std::vector<TBlob>& outputs) {\n  using namespace mshadow;\n  using namespace mshadow_op;\n  using namespace mxnet_op;\n\n  CHECK_EQ(inputs.size(), 1U);\n  CHECK_EQ(outputs.size(), 2U);\n\n  const MomentsParam& param = nnvm::get<MomentsParam>(attrs.parsed);\n\n  MomentsForwardImpl<xpu>(ctx, inputs, req, outputs, param.axes, param.keepdims);\n}\n\ntemplate<int req>\nstruct VarBackwardKernel {\n  template<typename DType>\n  MSHADOW_XINLINE static void Map(int i,\n                                  DType *igrad,\n                                  const DType *ograd,\n                                  const DType *data,\n                                  const DType *mean,\n                                  mshadow::Shape<6> data_shape,\n                                  mshadow::Shape<6> mean_shape,\n                                  const float N,\n                                  const float ddof = 0.0f) {\n    size_t data_idx = i;\n    size_t mean_idx = i;\n    size_t data_stride = 1;\n    size_t mean_stride = 1;\n    for (int axis = 5; axis >= 0; --axis) {\n      size_t axis_idx = data_idx % data_shape[axis];\n      mean_idx -= axis_idx * data_stride;\n      if (mean_shape[axis] != 1) {\n        mean_idx += axis_idx * mean_stride;\n      }\n      data_idx /= data_shape[axis];\n      data_stride *= data_shape[axis];\n      mean_stride *= mean_shape[axis];\n    }\n    KERNEL_ASSIGN(igrad[i], req, ograd[mean_idx] * (data[i] - mean[mean_idx]) * 2 / (N - ddof));\n  }\n};\n\ntemplate<typename xpu>\ninline void MomentsBackwardImpl(const nnvm::NodeAttrs& attrs,\n                                const OpContext& ctx,\n                                const std::vector<TBlob>& inputs,\n                                const std::vector<OpReqType>& req,\n                                const std::vector<TBlob>& outputs,\n                                const dmlc::optional<mxnet::TShape>& axes) {\n  using namespace mshadow;\n  using namespace mshadow::expr;\n  using namespace mshadow_op;\n  using namespace mxnet_op;\n\n  Stream<xpu> *s = ctx.get_stream<xpu>();\n\n  const TBlob& mean_grad = inputs[0];\n  const TBlob& var_grad = inputs[1];\n  const TBlob& data = inputs[2];\n  const TBlob& mean = inputs[3];\n  const TBlob& var = inputs[4];\n  const TBlob& data_grad = outputs[0];\n\n  mxnet::TShape small = ReduceAxesShapeImpl(data.shape_, axes, true, false);\n  BroadcastComputeImpl<xpu>(attrs, ctx, {mean_grad}, req, outputs, small);\n  MSHADOW_TYPE_SWITCH(outputs[0].type_flag_, DType, {\n    Tensor<xpu, 1, DType> igrad = outputs[0].FlatTo1D<xpu, DType>(s);\n    igrad /= scalar<DType>(outputs[0].Size()/inputs[0].Size());\n  });\n\n  Shape<6> data_shape, var_shape;\n  float N = data_grad.Size() / var.Size();\n  for (int i = 0; i < 6; ++i) {\n    data_shape[i] = (i < data.shape_.ndim()) ? data.shape_[i] : 1;\n    var_shape[i] = (i < small.ndim()) ? small[i] : 1;\n  }\n  MSHADOW_TYPE_SWITCH(data_grad.type_flag_, DType, {\n    Kernel<VarBackwardKernel<kAddTo>, xpu>::Launch(\n      s, data_grad.shape_.Size(), data_grad.dptr<DType>(), var_grad.dptr<DType>(),\n      data.dptr<DType>(), mean.dptr<DType>(), data_shape, var_shape, N);\n  });\n}\n\ntemplate<typename xpu>\ninline void MomentsBackward(const nnvm::NodeAttrs& attrs,\n                            const OpContext& ctx,\n                            const std::vector<TBlob>& inputs,\n                            const std::vector<OpReqType>& req,\n                            const std::vector<TBlob>& outputs) {\n  using namespace mshadow;\n  using namespace mshadow_op;\n  using namespace mxnet_op;\n\n  CHECK_EQ(inputs.size(), 5U);\n  CHECK_EQ(outputs.size(), 1U);\n\n  const MomentsParam& param = nnvm::get<MomentsParam>(attrs.parsed);\n\n  MomentsBackwardImpl<xpu>(attrs, ctx, inputs, req, outputs, param.axes);\n}\n\n}  // namespace op\n}  // namespace mxnet\n#endif  // MXNET_OPERATOR_NN_MOMENTS_INL_H_\n", "meta": {"content_hash": "1379c25c73b10bf4cbf94d1e3e5177af", "timestamp": "", "source": "github", "line_count": 237, "max_line_length": 96, "avg_line_length": 36.08438818565401, "alnum_prop": 0.5748362956033677, "repo_name": "reminisce/mxnet", "id": "6a9bdc54b9059e922e80bdd01e6bde06bf84326b", "size": "9359", "binary": false, "copies": "6", "ref": "refs/heads/master", "path": "src/operator/nn/moments-inl.h", "mode": "33188", "license": "apache-2.0", "language": [{"name": "ANTLR", "bytes": "1731"}, {"name": "Batchfile", "bytes": "13130"}, {"name": "C", "bytes": "215572"}, {"name": "C++", "bytes": "7680259"}, {"name": "CMake", "bytes": "99958"}, {"name": "Clojure", "bytes": "622688"}, {"name": "Cuda", "bytes": "970884"}, {"name": "Dockerfile", "bytes": "85151"}, {"name": "Groovy", "bytes": "122800"}, {"name": "HTML", "bytes": "40277"}, {"name": "Java", "bytes": "205196"}, {"name": "Julia", "bytes": "436326"}, {"name": "Jupyter Notebook", "bytes": "3660387"}, {"name": "MATLAB", "bytes": "34903"}, {"name": "Makefile", "bytes": "201597"}, {"name": "Perl", "bytes": "1550163"}, {"name": "Perl 6", "bytes": "7280"}, {"name": "PowerShell", "bytes": "13786"}, {"name": "Python", "bytes": "7842403"}, {"name": "R", "bytes": "357807"}, {"name": "Scala", "bytes": "1305036"}, {"name": "Shell", "bytes": "427407"}, {"name": "Smalltalk", "bytes": "3497"}]}}
